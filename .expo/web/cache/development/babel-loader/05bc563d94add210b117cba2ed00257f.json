{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport * as React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { registerRootComponent } from 'expo';\nimport AppLoading from 'expo-app-loading';\nimport { func } from \"./constants\";\nimport Toast from 'react-native-toast-message';\nimport Stack from \"./navigation/Stack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isLoading = this.state.isLoading;\n\n      if (isLoading) {\n        return _jsx(AppLoading, {\n          onError: function onError() {},\n          onFinish: function onFinish() {\n            return _this2.setState({\n              isLoading: false\n            });\n          },\n          startAsync: func.loadAssetsAsync\n        });\n      }\n\n      return _jsxs(React.Fragment, {\n        children: [_jsx(StatusBar, {\n          barStyle: \"light-content\"\n        }), _jsx(Stack, {}), _jsx(Toast, {})]\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nregisterRootComponent(App);","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/App.js"],"names":["React","registerRootComponent","AppLoading","func","Toast","Stack","App","state","isLoading","setState","loadAssetsAsync","Component"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,SAASC,qBAAT,QAAsC,MAAtC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,IAAT;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AAGA,OAAOC,KAAP;;;;IAEMC,G;;;AACJ,iBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAHY;AAMb;;;;6BAEQ;AAAA;;AAAA,UACCA,SADD,GACe,KAAKD,KADpB,CACCC,SADD;;AAGP,UAAIA,SAAJ,EAAe;AACb,eACE,KAAC,UAAD;AACE,UAAA,OAAO,EAAE,mBAAM,CAEd,CAHH;AAIE,UAAA,QAAQ,EAAE;AAAA,mBAAM,MAAI,CAACC,QAAL,CAAc;AAAED,cAAAA,SAAS,EAAE;AAAb,aAAd,CAAN;AAAA,WAJZ;AAKE,UAAA,UAAU,EAAEL,IAAI,CAACO;AALnB,UADF;AASD;;AAED,aACE,MAAC,KAAD,CAAO,QAAP;AAAA,mBACE,KAAC,SAAD;AAAW,UAAA,QAAQ,EAAC;AAApB,UADF,EAEE,KAAC,KAAD,KAFF,EAGE,KAAC,KAAD,KAHF;AAAA,QADF;AAOD;;;;EA/BeV,KAAK,CAACW,S;;AAkCxBV,qBAAqB,CAACK,GAAD,CAArB","sourcesContent":["import * as React from 'react';\r\nimport { StatusBar } from 'react-native';\r\nimport { registerRootComponent } from 'expo';\r\nimport AppLoading from 'expo-app-loading';\r\nimport { func } from './constants';\r\nimport Toast from 'react-native-toast-message'\r\n\r\n// main navigation stack\r\nimport Stack from './navigation/Stack';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.state;\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <AppLoading\r\n          onError={() => {\r\n            // console.warn\r\n          }}\r\n          onFinish={() => this.setState({ isLoading: false })}\r\n          startAsync={func.loadAssetsAsync}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <StatusBar barStyle=\"light-content\" />\r\n        <Stack />\r\n        <Toast />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nregisterRootComponent(App);\r\n"]},"metadata":{},"sourceType":"module"}