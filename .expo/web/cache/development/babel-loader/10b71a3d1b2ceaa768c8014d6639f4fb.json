{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport { ImagePropTypes } from \"react-native-web/dist/index\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DEFAULT_WIDTH, TYPES } from \"./constants\";\nimport { getVideoId } from \"../helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Thumbnail = function (_PureComponent) {\n  _inherits(Thumbnail, _PureComponent);\n\n  function Thumbnail(props) {\n    var _this;\n\n    _classCallCheck(this, Thumbnail);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Thumbnail).call(this, props));\n\n    _this.getType = function () {\n      return TYPES[_this.props.type];\n    };\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          url = _this$props.url,\n          onPress = _this$props.onPress,\n          onPressError = _this$props.onPressError;\n\n      if (onPress) {\n        return onPress(url);\n      }\n\n      Linking.canOpenURL(url).then(function (supported) {\n        if (!supported) {\n          return;\n        }\n\n        return Linking.openURL(url);\n      }).catch(onPressError);\n    };\n\n    _this.state = {\n      videoId: getVideoId(props.url)\n    };\n    return _this;\n  }\n\n  _createClass(Thumbnail, [{\n    key: \"UNSAFE_componentWillUpdate\",\n    value: function UNSAFE_componentWillUpdate(nextProps) {\n      if (this.props.url === nextProps.url || !nextProps.url) {\n        return;\n      }\n\n      this.setState({\n        videoId: getVideoId(nextProps.url)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var videoId = this.state.videoId;\n\n      if (!videoId) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"Invalid \\\"url\\\" could not extract videoId from \\\"\" + this.props.url + \"\\\"\");\n        }\n\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          imageWidth = _this$props2.imageWidth,\n          imageHeight = _this$props2.imageHeight,\n          containerStyle = _this$props2.containerStyle,\n          iconStyle = _this$props2.iconStyle,\n          children = _this$props2.children,\n          showPlayIcon = _this$props2.showPlayIcon,\n          props = _objectWithoutProperties(_this$props2, [\"imageWidth\", \"imageHeight\", \"containerStyle\", \"iconStyle\", \"children\", \"showPlayIcon\"]);\n\n      var imageURL = \"https://img.youtube.com/vi/\" + videoId + \"/\" + this.getType() + \".jpg\";\n      return _jsx(TouchableOpacity, {\n        activeOpacity: 0.7,\n        style: containerStyle,\n        onPress: this.onPress,\n        children: _jsxs(ImageBackground, _objectSpread({\n          source: {\n            uri: imageURL\n          },\n          style: [styles.imageContainer, {\n            width: imageWidth,\n            height: imageHeight\n          }],\n          testId: \"thumbnail-image-background\"\n        }, props, {\n          children: [showPlayIcon ? _jsx(Image, {\n            source: require(\"../assets/play.png\"),\n            style: [styles.playIcon, iconStyle],\n            testId: \"thumbnail-image\"\n          }) : null, children]\n        }))\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var videoId = getVideoId(nextProps.url);\n\n      if (videoId !== prevState.videoId) {\n        return {\n          videoId: videoId\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Thumbnail;\n}(PureComponent);\n\nThumbnail.propTypes = _objectSpread({}, ImageBackground.propTypes, {\n  children: PropTypes.node,\n  containerStyle: ViewPropTypes,\n  imageHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  imageWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  iconStyle: Image.propTypes,\n  onPress: PropTypes.func,\n  onPressError: PropTypes.func,\n  style: ViewPropTypes.style,\n  type: PropTypes.oneOf(Object.keys(TYPES)),\n  url: PropTypes.string.isRequired,\n  showPlayIcon: PropTypes.bool\n});\nThumbnail.defaultProps = {\n  type: 'high',\n  imageHeight: 200,\n  imageWidth: DEFAULT_WIDTH,\n  onPressError: function onPressError() {},\n  showPlayIcon: true\n};\nexport { Thumbnail as default };\nvar styles = StyleSheet.create({\n  imageContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  playIcon: {\n    tintColor: 'white'\n  }\n});","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/node_modules/react-native-thumbnail-video/src/components/thumbnail.js"],"names":["React","PureComponent","PropTypes","ViewPropTypes","ImagePropTypes","DEFAULT_WIDTH","TYPES","getVideoId","Thumbnail","props","getType","type","onPress","url","onPressError","Linking","canOpenURL","then","supported","openURL","catch","state","videoId","nextProps","setState","process","env","NODE_ENV","console","warn","imageWidth","imageHeight","containerStyle","iconStyle","children","showPlayIcon","imageURL","uri","styles","imageContainer","width","height","require","playIcon","prevState","propTypes","ImageBackground","node","oneOfType","number","string","Image","func","style","oneOf","Object","keys","isRequired","bool","defaultProps","StyleSheet","create","justifyContent","alignItems","tintColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  ImageBackground,\n  Image,\n  ViewPropTypes,\n  ImagePropTypes,\n  Linking,\n  StyleSheet,\n} from 'react-native';\n\nimport { DEFAULT_WIDTH, TYPES } from './constants';\nimport { getVideoId } from '../helpers';\n\nexport default class Thumbnail extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videoId: getVideoId(props.url),\n    };\n  }\n\n  static propTypes = {\n    ...ImageBackground.propTypes,\n    children: PropTypes.node,\n    containerStyle: ViewPropTypes,\n    imageHeight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    imageWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    iconStyle: Image.propTypes,\n    onPress: PropTypes.func,\n    onPressError: PropTypes.func,\n    style: ViewPropTypes.style,\n    type: PropTypes.oneOf(Object.keys(TYPES)),\n    url: PropTypes.string.isRequired,\n    showPlayIcon: PropTypes.bool\n  };\n\n  static defaultProps = {\n    type: 'high',\n    imageHeight: 200,\n    imageWidth: DEFAULT_WIDTH,\n    onPressError: () => {},\n    showPlayIcon: true\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const videoId = getVideoId(nextProps.url);\n\n    if(videoId !== prevState.videoId){\n      return { videoId };\n    }\n\n    return null;\n  }\n\n  UNSAFE_componentWillUpdate(nextProps) {\n    if (this.props.url === nextProps.url || !nextProps.url) {\n      return;\n    }\n\n    this.setState({\n      videoId: getVideoId(nextProps.url),\n    });\n  }\n\n  getType = () => TYPES[this.props.type];\n\n  onPress = () => {\n    const { url, onPress, onPressError } = this.props;\n\n    if (onPress) {\n      return onPress(url);\n    }\n\n    Linking.canOpenURL(url).then((supported) => {\n      if (!supported) {\n        return;\n      }\n\n      return Linking.openURL(url);\n    }).catch(onPressError);\n  };\n\n  render() {\n    const { videoId } = this.state;\n\n    if(!videoId){\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(`Invalid \"url\" could not extract videoId from \"${this.props.url}\"`);\n      }\n\n      return null;\n    }\n\n    const {\n      imageWidth,\n      imageHeight,\n      containerStyle,\n      iconStyle,\n      children,\n      showPlayIcon,\n      ...props\n    } = this.props;\n\n    const imageURL = `https://img.youtube.com/vi/${videoId}/${this.getType()}.jpg`;\n\n    return (\n      <TouchableOpacity\n        activeOpacity={0.7}\n        style={containerStyle}\n        onPress={this.onPress}\n      >\n        <ImageBackground\n          source={{ uri: imageURL }}\n          style={[\n            styles.imageContainer,\n            {\n              width: imageWidth,\n              height: imageHeight,\n            },\n          ]}\n          testId='thumbnail-image-background'\n          {...props}\n        >\n        {\n          showPlayIcon ? (\n            <Image\n              source={require('../assets/play.png')}\n              style={[styles.playIcon, iconStyle]}\n              testId='thumbnail-image'\n            />\n          ) : (\n            null\n          )\n        }\n\n\n          {children}\n        </ImageBackground>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  playIcon: {\n    tintColor: 'white',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}