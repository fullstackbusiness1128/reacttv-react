{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors, images } from \"../constants\";\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset,\n      navigation = _ref.navigation;\n  console.log(navigation);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('StackMovieDetails');\n        console.log(item.id);\n      },\n      children: _jsx(View, {\n        style: styles.item,\n        children: _jsx(Image, {\n          source: item == null ? void 0 : item.poster,\n          style: styles.image\n        })\n      })\n    });\n  };\n\n  return _jsx(FlatList, {\n    contentContainerStyle: styles.containerFlatList,\n    data: dataset,\n    horizontal: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: renderItem,\n    showsHorizontalScrollIndicator: false\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","mockData","MediaItemScroller","dataset","navigation","console","log","renderItem","item","navigate","id","styles","poster","image","containerFlatList","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","placeholder","backgroundColor","infoGrey","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA4B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAWF,MAAMG,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC/B,WACE,KAAC,gBAAD;AAAmB,MAAA,OAAO,EAAE,mBAAI;AAC9BJ,QAAAA,UAAU,CAACK,QAAX,CAAoB,mBAApB;AACFJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACE,EAAjB;AACC,OAHD;AAAA,gBAIF,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACH,IAApB;AAAA,kBACI,KAAC,KAAD;AAAQ,UAAA,MAAM,EAAEA,IAAF,oBAAEA,IAAI,CAAEI,MAAtB;AAA8B,UAAA,KAAK,EAAED,MAAM,CAACE;AAA5C;AADJ;AAJE,MADF;AASD,GAVD;;AAYE,SACE,KAAC,QAAD;AACE,IAAA,qBAAqB,EAAEF,MAAM,CAACG,iBADhC;AAEE,IAAA,IAAI,EAAEX,OAFR;AAGE,IAAA,UAAU,MAHZ;AAeE,IAAA,YAAY,EAAE,sBAAAK,IAAI;AAAA,aAAIA,IAAI,CAACE,EAAT;AAAA,KAfpB;AAgBE,IAAA,UAAU,EAAEH,UAhBd;AAkBE,IAAA,8BAA8B,EAAE;AAlBlC,IADF;AAsBD,CA9CD;;AAgDAL,iBAAiB,CAACa,YAAlB,GAAiC;AAC/BZ,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACc,SAAlB,GAA8B;AAE5Bb,EAAAA,OAAO,EAAEL,SAAS,CAACmB;AAFS,CAA9B;AAKA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,iBAAiB,EAAE;AACjBM,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GALyB;AAY/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE7B,MAAM,CAAC8B,QADb;AAEXN,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAiB/Bb,EAAAA,KAAK,EAAE;AACLU,IAAAA,MAAM,EAAE,MADH;AAELO,IAAAA,UAAU,EAAE,SAFP;AAGLJ,IAAAA,KAAK,EAAE;AAHF;AAjBwB,CAAlB,CAAf;AAwBA,eAAexB,iBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, Image, StyleSheet, View, TouchableOpacity} from 'react-native';\nimport { colors, images } from '../constants';\n\nimport mockData from '../mockdata/data';\n\nconst MediaItemScroller = ({ dataset,navigation }) => {\n  console.log(navigation)\n  //  const dataArray = Object.values(mockData[dataset]);\n  // console.log(dataArray)\n// const renderItem=({item})=>{\n// console.log(item)\n\n\n//     return <View style={styles.item}> <TouchableOpacity onPress={()=>console.log(\"hello\")}>\n//     <Image source={item?.poster} style={styles.image} />\n//     </TouchableOpacity></View>;\n// }\nconst renderItem = ({ item }) => {\n  return(\n    <TouchableOpacity  onPress={()=>{\n      navigation.navigate('StackMovieDetails')\n    console.log(item.id)\n    }}>\n  <View style={styles.item} >\n      <Image  source={item?.poster} style={styles.image} />\n       </View>\n       </TouchableOpacity>) \n}\n\n  return (\n    <FlatList\n      contentContainerStyle={styles.containerFlatList}\n      data={dataset}\n      horizontal\n      // keyExtractor={({ id }) => id.toString()}\n\n      // //   ({ item }) => {\n      // //   const renderItem = item.poster ? (\n      // //     <Image source={item.poster} style={styles.image} />\n      // //   ) : (\n      // //     <View style={styles.placeholder} />\n      // //   );\n\n      // //   return <View style={styles.item}>{renderItem}</View>;\n      // // }\n      keyExtractor={item => item.id}\n      renderItem={renderItem}\n    \n      showsHorizontalScrollIndicator={false}\n    />\n  );\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\n\nMediaItemScroller.propTypes = {\n  // optional\n  dataset: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\n\nexport default MediaItemScroller;\n"]},"metadata":{},"sourceType":"module"}