{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport { withTiming, withSpring } from \"../../animation\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder\";\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n\n  function ComplexAnimationBuilder() {\n    _classCallCheck(this, ComplexAnimationBuilder);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ComplexAnimationBuilder).apply(this, arguments));\n  }\n\n  _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n\n      if (type === withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n\n        if (duration) {\n          config.duration = duration;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n\n        if (mass) {\n          config.mass = mass;\n        }\n\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }]);\n\n  return ComplexAnimationBuilder;\n}(BaseAnimationBuilder);","map":{"version":3,"names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","easingFunction","easingV","degree","rotateV","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","duration","durationV","easing","rotate","animation","config","instance","createInstance","springify"],"sources":["E:/works/android/20220927/flicknplayreacttv-main/flicknplayreacttv-main/node_modules/react-native-reanimated/lib/reanimated2/layoutReanimation/animationBuilder/ComplexAnimationBuilder.js"],"sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n    static easing(easingFunction) {\n        const instance = this.createInstance();\n        return instance.easing(easingFunction);\n    }\n    easing(easingFunction) {\n        this.easingV = easingFunction;\n        return this;\n    }\n    static rotate(degree) {\n        const instance = this.createInstance();\n        return instance.rotate(degree);\n    }\n    rotate(degree) {\n        this.rotateV = degree;\n        return this;\n    }\n    static springify() {\n        const instance = this.createInstance();\n        return instance.springify();\n    }\n    springify() {\n        this.type = withSpring;\n        return this;\n    }\n    static damping(damping) {\n        const instance = this.createInstance();\n        return instance.damping(damping);\n    }\n    damping(damping) {\n        this.dampingV = damping;\n        return this;\n    }\n    static mass(mass) {\n        const instance = this.createInstance();\n        return instance.mass(mass);\n    }\n    mass(mass) {\n        this.massV = mass;\n        return this;\n    }\n    static stiffness(stiffness) {\n        const instance = this.createInstance();\n        return instance.stiffness(stiffness);\n    }\n    stiffness(stiffness) {\n        this.stiffnessV = stiffness;\n        return this;\n    }\n    static overshootClamping(overshootClamping) {\n        const instance = this.createInstance();\n        return instance.overshootClamping(overshootClamping);\n    }\n    overshootClamping(overshootClamping) {\n        this.overshootClampingV = overshootClamping;\n        return this;\n    }\n    static restDisplacementThreshold(restDisplacementThreshold) {\n        const instance = this.createInstance();\n        return instance.restDisplacementThreshold(restDisplacementThreshold);\n    }\n    restDisplacementThreshold(restDisplacementThreshold) {\n        this.restDisplacementThresholdV = restDisplacementThreshold;\n        return this;\n    }\n    static restSpeedThreshold(restSpeedThreshold) {\n        const instance = this.createInstance();\n        return instance.restSpeedThreshold(restSpeedThreshold);\n    }\n    restSpeedThreshold(restSpeedThreshold) {\n        this.restSpeedThresholdV = restSpeedThreshold;\n        return this;\n    }\n    getAnimationAndConfig() {\n        const duration = this.durationV;\n        const easing = this.easingV;\n        const rotate = this.rotateV;\n        const type = this.type ? this.type : withTiming;\n        const damping = this.dampingV;\n        const mass = this.massV;\n        const stiffness = this.stiffnessV;\n        const overshootClamping = this.overshootClampingV;\n        const restDisplacementThreshold = this.restDisplacementThresholdV;\n        const restSpeedThreshold = this.restSpeedThresholdV;\n        const animation = type;\n        const config = {};\n        if (type === withTiming) {\n            if (easing) {\n                config.easing = easing;\n            }\n            if (duration) {\n                config.duration = duration;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        else {\n            if (damping) {\n                config.damping = damping;\n            }\n            if (mass) {\n                config.mass = mass;\n            }\n            if (stiffness) {\n                config.stiffness = stiffness;\n            }\n            if (overshootClamping) {\n                config.overshootClamping = overshootClamping;\n            }\n            if (restDisplacementThreshold) {\n                config.restDisplacementThreshold = restDisplacementThreshold;\n            }\n            if (restSpeedThreshold) {\n                config.restSpeedThreshold = restSpeedThreshold;\n            }\n            if (rotate) {\n                config.rotate = rotate;\n            }\n        }\n        return [animation, config];\n    }\n}\n"],"mappings":";;;;;AAAA,SAASA,UAAT,EAAqBC,UAArB;AACA,SAASC,oBAAT;AACA,WAAaC,uBAAb;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,uBAKWC,cALX,EAK2B;MACnB,KAAKC,OAAL,GAAeD,cAAf;MACA,OAAO,IAAP;IACH;EARL;IAAA;IAAA,uBAaWE,MAbX,EAamB;MACX,KAAKC,OAAL,GAAeD,MAAf;MACA,OAAO,IAAP;IACH;EAhBL;IAAA;IAAA,4BAqBgB;MACR,KAAKE,IAAL,GAAYP,UAAZ;MACA,OAAO,IAAP;IACH;EAxBL;IAAA;IAAA,wBA6BYQ,SA7BZ,EA6BqB;MACb,KAAKC,QAAL,GAAgBD,SAAhB;MACA,OAAO,IAAP;IACH;EAhCL;IAAA;IAAA,qBAqCSE,MArCT,EAqCe;MACP,KAAKC,KAAL,GAAaD,MAAb;MACA,OAAO,IAAP;IACH;EAxCL;IAAA;IAAA,0BA6CcE,WA7Cd,EA6CyB;MACjB,KAAKC,UAAL,GAAkBD,WAAlB;MACA,OAAO,IAAP;IACH;EAhDL;IAAA;IAAA,kCAqDsBE,mBArDtB,EAqDyC;MACjC,KAAKC,kBAAL,GAA0BD,mBAA1B;MACA,OAAO,IAAP;IACH;EAxDL;IAAA;IAAA,0CA6D8BE,2BA7D9B,EA6DyD;MACjD,KAAKC,0BAAL,GAAkCD,2BAAlC;MACA,OAAO,IAAP;IACH;EAhEL;IAAA;IAAA,mCAqEuBE,oBArEvB,EAqE2C;MACnC,KAAKC,mBAAL,GAA2BD,oBAA3B;MACA,OAAO,IAAP;IACH;EAxEL;IAAA;IAAA,wCAyE4B;MACpB,IAAME,QAAQ,GAAG,KAAKC,SAAtB;MACA,IAAMC,MAAM,GAAG,KAAKlB,OAApB;MACA,IAAMmB,MAAM,GAAG,KAAKjB,OAApB;MACA,IAAMC,IAAI,GAAG,KAAKA,IAAL,GAAY,KAAKA,IAAjB,GAAwBR,UAArC;MACA,IAAMS,OAAO,GAAG,KAAKC,QAArB;MACA,IAAMC,IAAI,GAAG,KAAKC,KAAlB;MACA,IAAMC,SAAS,GAAG,KAAKC,UAAvB;MACA,IAAMC,iBAAiB,GAAG,KAAKC,kBAA/B;MACA,IAAMC,yBAAyB,GAAG,KAAKC,0BAAvC;MACA,IAAMC,kBAAkB,GAAG,KAAKC,mBAAhC;MACA,IAAMK,SAAS,GAAGjB,IAAlB;MACA,IAAMkB,MAAM,GAAG,EAAf;;MACA,IAAIlB,IAAI,KAAKR,UAAb,EAAyB;QACrB,IAAIuB,MAAJ,EAAY;UACRG,MAAM,CAACH,MAAP,GAAgBA,MAAhB;QACH;;QACD,IAAIF,QAAJ,EAAc;UACVK,MAAM,CAACL,QAAP,GAAkBA,QAAlB;QACH;;QACD,IAAIG,MAAJ,EAAY;UACRE,MAAM,CAACF,MAAP,GAAgBA,MAAhB;QACH;MACJ,CAVD,MAWK;QACD,IAAIf,OAAJ,EAAa;UACTiB,MAAM,CAACjB,OAAP,GAAiBA,OAAjB;QACH;;QACD,IAAIE,IAAJ,EAAU;UACNe,MAAM,CAACf,IAAP,GAAcA,IAAd;QACH;;QACD,IAAIE,SAAJ,EAAe;UACXa,MAAM,CAACb,SAAP,GAAmBA,SAAnB;QACH;;QACD,IAAIE,iBAAJ,EAAuB;UACnBW,MAAM,CAACX,iBAAP,GAA2BA,iBAA3B;QACH;;QACD,IAAIE,yBAAJ,EAA+B;UAC3BS,MAAM,CAACT,yBAAP,GAAmCA,yBAAnC;QACH;;QACD,IAAIE,kBAAJ,EAAwB;UACpBO,MAAM,CAACP,kBAAP,GAA4BA,kBAA5B;QACH;;QACD,IAAIK,MAAJ,EAAY;UACRE,MAAM,CAACF,MAAP,GAAgBA,MAAhB;QACH;MACJ;;MACD,OAAO,CAACC,SAAD,EAAYC,MAAZ,CAAP;IACH;EAzHL;IAAA;IAAA,uBACkBtB,cADlB,EACkC;MAC1B,IAAMuB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACJ,MAAT,CAAgBnB,cAAhB,CAAP;IACH;EAJL;IAAA;IAAA,uBASkBE,MATlB,EAS0B;MAClB,IAAMqB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACH,MAAT,CAAgBlB,MAAhB,CAAP;IACH;EAZL;IAAA;IAAA,4BAiBuB;MACf,IAAMqB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACE,SAAT,EAAP;IACH;EApBL;IAAA;IAAA,wBAyBmBpB,QAzBnB,EAyB4B;MACpB,IAAMkB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAAClB,OAAT,CAAiBA,QAAjB,CAAP;IACH;EA5BL;IAAA;IAAA,qBAiCgBE,KAjChB,EAiCsB;MACd,IAAMgB,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAAChB,IAAT,CAAcA,KAAd,CAAP;IACH;EApCL;IAAA;IAAA,0BAyCqBE,UAzCrB,EAyCgC;MACxB,IAAMc,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACd,SAAT,CAAmBA,UAAnB,CAAP;IACH;EA5CL;IAAA;IAAA,kCAiD6BE,kBAjD7B,EAiDgD;MACxC,IAAMY,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACZ,iBAAT,CAA2BA,kBAA3B,CAAP;IACH;EApDL;IAAA;IAAA,0CAyDqCE,0BAzDrC,EAyDgE;MACxD,IAAMU,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACV,yBAAT,CAAmCA,0BAAnC,CAAP;IACH;EA5DL;IAAA;IAAA,mCAiE8BE,mBAjE9B,EAiEkD;MAC1C,IAAMQ,QAAQ,GAAG,KAAKC,cAAL,EAAjB;MACA,OAAOD,QAAQ,CAACR,kBAAT,CAA4BA,mBAA5B,CAAP;IACH;EApEL;;EAAA;AAAA,EAA6CjB,oBAA7C"},"metadata":{},"sourceType":"module"}