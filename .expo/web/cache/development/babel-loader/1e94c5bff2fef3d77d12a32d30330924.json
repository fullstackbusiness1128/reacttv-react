{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withNavigation } from 'react-navigation';\nimport { colors, device, fonts, gStyle } from \"../constants\";\nimport SvgArrowLeft from \"./icons/Svg.ArrowLeft\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Header = function Header(_ref) {\n  var close = _ref.close,\n      closeText = _ref.closeText,\n      navigation = _ref.navigation,\n      showBack = _ref.showBack,\n      title = _ref.title;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [showBack && _jsx(TouchableOpacity, {\n      activeOpacity: 0.7,\n      onPress: function onPress() {\n        return navigation.goBack(null);\n      },\n      style: styles.back,\n      children: _jsx(SvgArrowLeft, {})\n    }), title && _jsx(View, {\n      style: styles.containerTitle,\n      children: _jsx(Text, {\n        style: styles.title,\n        children: title\n      })\n    }), showBack && !close && _jsx(View, {\n      style: gStyle.flex1\n    }), close && _jsx(TouchableOpacity, {\n      activeOpacity: 0.7,\n      onPress: function onPress() {\n        return navigation.goBack(null);\n      },\n      style: styles.close,\n      children: _jsx(Text, {\n        style: styles.closeText,\n        children: closeText\n      })\n    })]\n  });\n};\n\nHeader.defaultProps = {\n  close: false,\n  closeText: 'Cancel',\n  showBack: false,\n  title: null\n};\nHeader.propTypes = {\n  navigation: PropTypes.object.isRequired,\n  close: PropTypes.bool,\n  closeText: PropTypes.string,\n  showBack: PropTypes.bool,\n  title: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 4,\n    paddingHorizontal: 16,\n    paddingTop: device.iPhoneNotch ? 54 : 30\n  },\n  back: {\n    alignSelf: 'center',\n    flex: 1\n  },\n  containerTitle: {\n    flex: 4,\n    height: 35,\n    justifyContent: 'flex-end'\n  },\n  title: {\n    color: colors.white,\n    fontSize: 18,\n    paddingBottom: 4,\n    textAlign: 'center'\n  },\n  close: {\n    alignItems: 'flex-end',\n    flex: 1,\n    height: 35,\n    justifyContent: 'center'\n  },\n  closeText: {\n    color: colors.white,\n    fontFamily: fonts.light,\n    fontSize: 16\n  }\n});\nexport default withNavigation(Header);","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/components/Header.js"],"names":["React","PropTypes","withNavigation","colors","device","fonts","gStyle","SvgArrowLeft","Header","close","closeText","navigation","showBack","title","styles","container","goBack","back","containerTitle","flex1","defaultProps","propTypes","object","isRequired","bool","string","StyleSheet","create","alignItems","flexDirection","justifyContent","paddingBottom","paddingHorizontal","paddingTop","iPhoneNotch","alignSelf","flex","height","color","white","fontSize","textAlign","fontFamily","light"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { withNavigation } from 'react-navigation';\r\nimport { colors, device, fonts, gStyle } from '../constants';\r\n\r\nimport SvgArrowLeft from './icons/Svg.ArrowLeft';\r\n\r\nconst Header = ({ close, closeText, navigation, showBack, title }) => (\r\n  <View style={styles.container}>\r\n    {showBack && (\r\n      <TouchableOpacity\r\n        activeOpacity={0.7}\r\n        onPress={() => navigation.goBack(null)}\r\n        style={styles.back}\r\n      >\r\n        <SvgArrowLeft />\r\n      </TouchableOpacity>\r\n    )}\r\n\r\n    {title && (\r\n      <View style={styles.containerTitle}>\r\n        <Text style={styles.title}>{title}</Text>\r\n      </View>\r\n    )}\r\n\r\n    {showBack && !close && <View style={gStyle.flex1} />}\r\n\r\n    {close && (\r\n      <TouchableOpacity\r\n        activeOpacity={0.7}\r\n        onPress={() => navigation.goBack(null)}\r\n        style={styles.close}\r\n      >\r\n        <Text style={styles.closeText}>{closeText}</Text>\r\n      </TouchableOpacity>\r\n    )}\r\n  </View>\r\n);\r\n\r\nHeader.defaultProps = {\r\n  close: false,\r\n  closeText: 'Cancel',\r\n  showBack: false,\r\n  title: null\r\n};\r\n\r\nHeader.propTypes = {\r\n  // required\r\n  navigation: PropTypes.object.isRequired,\r\n\r\n  // optional\r\n  close: PropTypes.bool,\r\n  closeText: PropTypes.string,\r\n  showBack: PropTypes.bool,\r\n  title: PropTypes.string\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'flex-start',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    paddingBottom: 4,\r\n    paddingHorizontal: 16,\r\n    paddingTop: device.iPhoneNotch ? 54 : 30\r\n  },\r\n  back: {\r\n    alignSelf: 'center',\r\n    flex: 1\r\n  },\r\n  containerTitle: {\r\n    flex: 4,\r\n    height: 35,\r\n    justifyContent: 'flex-end'\r\n  },\r\n  title: {\r\n    color: colors.white,\r\n    fontSize: 18,\r\n    paddingBottom: 4,\r\n    textAlign: 'center'\r\n  },\r\n  close: {\r\n    alignItems: 'flex-end',\r\n    flex: 1,\r\n    height: 35,\r\n    justifyContent: 'center'\r\n  },\r\n  closeText: {\r\n    color: colors.white,\r\n    fontFamily: fonts.light,\r\n    fontSize: 16\r\n  }\r\n});\r\n\r\nexport default withNavigation(Header);\r\n"]},"metadata":{},"sourceType":"module"}