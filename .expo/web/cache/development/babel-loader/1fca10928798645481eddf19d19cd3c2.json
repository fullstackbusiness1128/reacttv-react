{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors, images } from \"../constants\";\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset,\n      navigation = _ref.navigation;\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        console.log(item);\n        navigation.navigate('StackMovieDetails', {\n          movieId: item\n        });\n      },\n      children: _jsx(View, {\n        style: styles.item,\n        children: _jsx(Image, {\n          source: item == null ? void 0 : item.poster,\n          style: styles.image\n        })\n      })\n    });\n  };\n\n  return _jsx(FlatList, {\n    contentContainerStyle: styles.containerFlatList,\n    data: dataset,\n    horizontal: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: renderItem,\n    showsHorizontalScrollIndicator: false\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 200,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 140\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'cover',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","mockData","MediaItemScroller","dataset","navigation","renderItem","item","console","log","navigate","movieId","styles","poster","image","containerFlatList","id","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","placeholder","backgroundColor","infoGrey","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6B;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAErD,MAAMC,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC/B,WACE,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,mBAAM;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,QAAAA,UAAU,CAACK,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,UAAAA,OAAO,EAAEJ;AAAX,SAAzC;AAED,OAJD;AAAA,gBAKE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACL,IAApB;AAAA,kBACE,KAAC,KAAD;AAAO,UAAA,MAAM,EAAEA,IAAF,oBAAEA,IAAI,CAAEM,MAArB;AAA6B,UAAA,KAAK,EAAED,MAAM,CAACE;AAA3C;AADF;AALF,MADF;AAUD,GAXD;;AAaA,SACE,KAAC,QAAD;AACE,IAAA,qBAAqB,EAAEF,MAAM,CAACG,iBADhC;AAEE,IAAA,IAAI,EAAEX,OAFR;AAGE,IAAA,UAAU,MAHZ;AAIE,IAAA,YAAY,EAAE,sBAAAG,IAAI;AAAA,aAAIA,IAAI,CAACS,EAAT;AAAA,KAJpB;AAKE,IAAA,UAAU,EAAEV,UALd;AAOE,IAAA,8BAA8B,EAAE;AAPlC,IADF;AAWD,CA1BD;;AA4BAH,iBAAiB,CAACc,YAAlB,GAAiC;AAC/Bb,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACe,SAAlB,GAA8B;AAE5Bd,EAAAA,OAAO,EAAEL,SAAS,CAACoB;AAFS,CAA9B;AAKA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,iBAAiB,EAAE;AACjBO,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/BhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GALyB;AAY/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE9B,MAAM,CAAC+B,QADb;AAEXN,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAiB/Bd,EAAAA,KAAK,EAAE;AACLW,IAAAA,MAAM,EAAE,MADH;AAELO,IAAAA,UAAU,EAAE,OAFP;AAGLJ,IAAAA,KAAK,EAAE;AAHF;AAjBwB,CAAlB,CAAf;AAwBA,eAAezB,iBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, Image, StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { colors, images } from '../constants';\n\nimport mockData from '../mockdata/data';\n\nconst MediaItemScroller = ({ dataset, navigation }) => {\n  //  console.log(dataset)\n  const renderItem = ({ item }) => {\n    return (\n      <TouchableOpacity onPress={() => {\n        console.log(item)\n        navigation.navigate('StackMovieDetails', { movieId: item })\n\n      }}>\n        <View style={styles.item} >\n          <Image source={item?.poster} style={styles.image} />\n        </View>\n      </TouchableOpacity>)\n  }\n\n  return (\n    <FlatList\n      contentContainerStyle={styles.containerFlatList}\n      data={dataset}\n      horizontal\n      keyExtractor={item => item.id}\n      renderItem={renderItem}\n\n      showsHorizontalScrollIndicator={false}\n    />\n  );\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\n\nMediaItemScroller.propTypes = {\n  // optional\n  dataset: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 200,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 140\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'cover',\n    width: '100%'\n  }\n});\n\nexport default MediaItemScroller;\n"]},"metadata":{},"sourceType":"module"}