{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport Toast from 'react-native-toast-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError, emailError, passwordError, showToast, formData, url;\n    return _regeneratorRuntime.async(function onSignUpPressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            nameError = nameValidator(name.value);\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            showToast = function showToast(type, message) {\n              Toast.show({\n                type: type,\n                text1: message\n              });\n            };\n\n            if (!(emailError || passwordError || nameError)) {\n              _context2.next = 9;\n              break;\n            }\n\n            setName(_objectSpread({}, name, {\n              error: nameError\n            }));\n            setEmail(_objectSpread({}, email, {\n              error: emailError\n            }));\n            setPassword(_objectSpread({}, password, {\n              error: passwordError\n            }));\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!(email.value != '' || password.value != '')) {\n              _context2.next = 19;\n              break;\n            }\n\n            formData = new FormData();\n            formData.append('email', email.value);\n            formData.append('password', password.value);\n            formData.append('display_name', name.value);\n            formData.append('password_confirmation', password.value);\n            formData.append('token_name', 'flicknplaysapi');\n            url = \"https://www.flicknplay.com/api/v1/auth/register\";\n            _context2.next = 19;\n            return _regeneratorRuntime.awrap(axios.post(url, formData, {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            }).then(function _callee(response) {\n              var _response$data;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(response);\n\n                      if ((response == null ? void 0 : (_response$data = response.data) == null ? void 0 : _response$data.status) == \"needs_email_verification\") {\n                        showToast(\"success\", \"needs_email_verification\");\n                        navigation.navigate('LoginScreen');\n                      }\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            }).catch(function (error) {\n              console.log(error.response.data.errors.email[0]);\n              showToast(\"error\", error.response.data.errors.email[0]);\n            }));\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.replace('LoginScreen');\n      }\n    }), _jsx(Logo, {}), _jsxs(View, {\n      style: {\n        backgroundColor: '#1d1d1d',\n        width: '100%',\n        padding: '26px',\n        marginBottom: 13\n      },\n      children: [_jsx(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Create Account\"\n      }), _jsx(TextInput, {\n        label: \"Name\",\n        returnKeyType: \"next\",\n        value: name.value,\n        onChangeText: function onChangeText(text) {\n          return setName({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!name.error,\n        errorText: name.error\n      }), _jsx(TextInput, {\n        label: \"Email\",\n        returnKeyType: \"next\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!email.error,\n        errorText: email.error,\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        label: \"Password\",\n        returnKeyType: \"done\",\n        value: password.value,\n        onChangeText: function onChangeText(text) {\n          return setPassword({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!password.error,\n        errorText: password.error,\n        secureTextEntry: true\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: onSignUpPressed,\n        style: {\n          marginTop: 24\n        },\n        children: \"Sign Up\"\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Already have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('MovieDetail1', {\n            id: 2401\n          });\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/screens/RegisterScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","Toast","axios","require","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","onSignUpPressed","nameError","emailError","passwordError","showToast","type","message","show","text1","formData","FormData","append","url","post","headers","then","response","console","log","data","status","navigate","catch","errors","replace","backgroundColor","width","padding","marginBottom","color","text","marginTop","styles","row","id","link","StyleSheet","create","flexDirection","fontWeight","colors","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport BackButton from '../components/BackButton'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\nimport { nameValidator } from '../helpers/nameValidator'\r\nimport Toast from 'react-native-toast-message';\r\nconst axios = require('axios');\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [name, setName] = useState({ value: '', error: '' })\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n\r\n  const onSignUpPressed = async () => {\r\n    const nameError = nameValidator(name.value)\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    const showToast = (type,message) => {\r\n      Toast.show({\r\n        type: type,\r\n        text1: message\r\n      });\r\n    }\r\n    if (emailError || passwordError || nameError) {\r\n      setName({ ...name, error: nameError })\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      return\r\n    }\r\n    if(email.value!='' || password.value!=''){\r\n      // let body={\r\n      //   email:email.value,\r\n      //   password:password.value,\r\n      //   token_name:\"flicknplaysapi\",\r\n       \r\n      // }\r\n      const formData = new FormData();\r\n      formData.append('email',email.value)\r\n      formData.append('password',password.value)\r\n      formData.append('display_name',name.value)\r\n      formData.append('password_confirmation',password.value)\r\n      formData.append('token_name','flicknplaysapi')\r\n      const url = `https://www.flicknplay.com/api/v1/auth/register`\r\n     await axios.post(url,formData , { headers: {\"Content-Type\" : `application/x-www-form-urlencoded`} }).then(async(response)=>{\r\n\r\n        console.log(response)\r\n        if(response?.data?.status==\"needs_email_verification\"){\r\n          showToast(\"success\",\"needs_email_verification\")\r\n          navigation.navigate('LoginScreen')\r\n        }\r\n        // AsyncStorage.setI',JSON.stringify(response?.data?.user))\r\n        // AsyncStorage.setItem('user_token',JSON.stringify(response?.data?.user?.access_token))\r\n        // if(response){\r\n        //   const user=await AsyncStorage.getItem('userDetails')\r\n        //   console.log(user)\r\n        //   navigation.navigate('TabNavigator')\r\n        // }\r\n       }).catch(function(error){\r\n         console.log(error.response.data.errors.email[0])\r\n         showToast(\"error\",error.response.data.errors.email[0])\r\n       })\r\n\r\n    }\r\n    // navigation.reset({\r\n    //   index: 0,\r\n    //   routes: [{ name: 'Dashboard' }],\r\n    // })\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={() => navigation.replace('LoginScreen')}/>\r\n      <Logo />\r\n      <View style={{backgroundColor:'#1d1d1d',width: '100%',padding: '26px',marginBottom: 13}}>\r\n      <h1 style={{color:'white'}}>Create Account</h1>\r\n      <TextInput\r\n        label=\"Name\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={(text) => setName({ value: text, error: '' })}\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      />\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={onSignUpPressed}\r\n        style={{ marginTop: 24 }}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text style={{color:'white'}}>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate('MovieDetail1',{id:2401})}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}