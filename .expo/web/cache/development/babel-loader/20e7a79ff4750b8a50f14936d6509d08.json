{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, images } from \"../constants\";\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset;\n  console.log(dataset);\n  return _jsx(FlatList, {\n    contentContainerStyle: styles.containerFlatList,\n    data: dataset,\n    horizontal: true,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      console.log(item);\n      var renderItem = item.image ? _jsx(Image, {\n        source: images[item.image],\n        style: styles.image\n      }) : _jsx(View, {\n        style: styles.placeholder\n      });\n      return _jsx(View, {\n        style: styles.item,\n        children: renderItem\n      });\n    },\n    showsHorizontalScrollIndicator: false\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","mockData","MediaItemScroller","dataset","console","log","styles","containerFlatList","item","renderItem","image","placeholder","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","backgroundColor","infoGrey","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAIA,SACE,KAAC,QAAD;AACE,IAAA,qBAAqB,EAAEG,MAAM,CAACC,iBADhC;AAEE,IAAA,IAAI,EAAEJ,OAFR;AAGE,IAAA,UAAU,MAHZ;AAKE,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXK,IAAW,SAAXA,IAAW;AACxBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACA,UAAMC,UAAU,GAAGD,IAAI,CAACE,KAAL,GACjB,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEV,MAAM,CAACQ,IAAI,CAACE,KAAN,CAArB;AAAmC,QAAA,KAAK,EAAEJ,MAAM,CAACI;AAAjD,QADiB,GAGjB,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK;AAApB,QAHF;AAMA,aAAO,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEL,MAAM,CAACE,IAApB;AAAA,kBAA2BC;AAA3B,QAAP;AACD,KAdH;AAeE,IAAA,8BAA8B,EAAE;AAflC,IADF;AAoBD,CAzBD;;AA2BAP,iBAAiB,CAACU,YAAlB,GAAiC;AAC/BT,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACW,SAAlB,GAA8B;AAE5BV,EAAAA,OAAO,EAAEL,SAAS,CAACgB;AAFS,CAA9B;AAKA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,iBAAiB,EAAE;AACjBU,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GALyB;AAY/BZ,EAAAA,WAAW,EAAE;AACXa,IAAAA,eAAe,EAAEzB,MAAM,CAAC0B,QADb;AAEXL,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAiB/Bb,EAAAA,KAAK,EAAE;AACLU,IAAAA,MAAM,EAAE,MADH;AAELM,IAAAA,UAAU,EAAE,SAFP;AAGLH,IAAAA,KAAK,EAAE;AAHF;AAjBwB,CAAlB,CAAf;AAwBA,eAAerB,iBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, Image, StyleSheet, View } from 'react-native';\nimport { colors, images } from '../constants';\n\nimport mockData from '../mockdata/data';\n\nconst MediaItemScroller = ({ dataset }) => {\n  console.log(dataset)\n  //  const dataArray = Object.values(mockData[dataset]);\n  // console.log(dataArray)\n\n  return (\n    <FlatList\n      contentContainerStyle={styles.containerFlatList}\n      data={dataset}\n      horizontal\n      // keyExtractor={({ id }) => id.toString()}\n      renderItem={({ item }) => {\n        console.log(item)\n        const renderItem = item.image ? (\n          <Image source={images[item.image]} style={styles.image} />\n        ) : (\n          <View style={styles.placeholder} />\n        );\n\n        return <View style={styles.item}>{renderItem}</View>;\n      }}\n      showsHorizontalScrollIndicator={false}\n    />\n    // <p>hello</p>\n  );\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\n\nMediaItemScroller.propTypes = {\n  // optional\n  dataset: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\n\nexport default MediaItemScroller;\n"]},"metadata":{},"sourceType":"module"}