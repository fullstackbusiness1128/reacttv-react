{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport PropTypes from 'prop-types';\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\nvar image = {\n  uri: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ9VZB5hU9xt5HU8MQjHIzLVHU8RDRhu1yVHg&usqp=CAU\"\n};\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MovieDetail1 = function MovieDetail1(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      segmentIndex = _useState2[0],\n      setSegmentIndex = _useState2[1];\n\n  var handleIndexChange = function handleIndexChange(index) {\n    setSegmentIndex(index);\n  };\n\n  return _jsx(View, {\n    children: _jsx(ImageBackground, {\n      source: image,\n      resizeMode: \"cover\",\n      style: styles.image,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(\"h1\", {\n          children: \"Parampara\"\n        }), _jsxs(View, {\n          style: {\n            display: 'block'\n          },\n          children: [_jsx(\"text\", {\n            style: styles.age,\n            children: \"12\"\n          }), _jsx(\"text\", {\n            style: styles.age,\n            children: \"AD)))\"\n          }), _jsx(\"text\", {\n            style: styles.age,\n            children: \"CC\"\n          }), _jsx(\"text\", {\n            style: styles.age1,\n            children: \"2013\"\n          }), _jsx(\"text\", {\n            style: styles.age1,\n            children: \"2h 12m\"\n          })]\n        }), _jsx(\"p\", {\n          children: \"Science Fiction,Super Hero, Action-Adventure\"\n        }), _jsxs(View, {\n          children: [_jsx(Pressable, {\n            style: styles.button,\n            onPress: onPress,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: title\n            })\n          }), _jsx(Button, {\n            style: {\n              backgroundColor: 'white',\n              width: '110'\n            },\n            onPress: function onPress() {\n              return Alert.alert('Simple Button pressed');\n            },\n            children: _jsx(Text, {\n              children: \"TRAILER\"\n            })\n          })]\n        }), _jsx(\"p\", {\n          children: \"Tony Stark encounters a formidable foe called the Mandarin, and after failing to him, he embarks on a journey with relentless consequences.\"\n        }), _jsx(SegmentedControlTab, {\n          values: [\"SUGGESTED\", \"EXTRAS\", \"DETAILS\"],\n          selectedIndex: segmentIndex,\n          onTabPress: handleIndexChange\n        })]\n      })\n    })\n  });\n};\n\nMovieDetail1.propTypes = {\n  navigation: PropTypes.object.isRequired\n};\nvar styles = {\n  container: {\n    flex: 1,\n    paddingTop: 59,\n    paddingLeft: 60,\n    color: 'white'\n  },\n  age: {\n    background: 'black',\n    padding: 4,\n    margin: 5\n  },\n  age1: {\n    padding: 4,\n    margin: 5\n  },\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  button: {\n    backgroundColor: '#ff5c5c'\n  }\n};\nexport default MovieDetail1;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/screens/movieDetails2.js"],"names":["React","PropTypes","SegmentedControlTab","image","uri","useState","MovieDetail1","navigation","segmentIndex","setSegmentIndex","handleIndexChange","index","styles","container","display","age","age1","button","onPress","text","title","backgroundColor","width","Alert","alert","propTypes","object","isRequired","flex","paddingTop","paddingLeft","color","background","padding","margin","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,IAAMC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAd;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACAF,QAAQ,CAAC,CAAD,CADR;AAAA;AAAA,MAC9BG,YAD8B;AAAA,MACjBC,eADiB;;AAEtC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAClCF,IAAAA,eAAe,CAACE,KAAD,CAAf;AACO,GAFR;;AAIC,SACI,KAAC,IAAD;AAAA,cACK,KAAC,eAAD;AAAiB,MAAA,MAAM,EAAER,KAAzB;AAAgC,MAAA,UAAU,EAAC,OAA3C;AAAmD,MAAA,KAAK,EAAES,MAAM,CAACT,KAAjE;AAAA,gBACD,MAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACC,SAApB;AAAA,mBACI;AAAA;AAAA,UADJ,EAEI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,OAAO,EAAE;AAAV,WAAb;AAAA,qBACI;AAAM,YAAA,KAAK,EAAEF,MAAM,CAACG,GAApB;AAAA;AAAA,YADJ,EAEI;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACG,GAApB;AAAA;AAAA,YAFJ,EAGI;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACG,GAApB;AAAA;AAAA,YAHJ,EAII;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,IAApB;AAAA;AAAA,YAJJ,EAKI;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACI,IAApB;AAAA;AAAA,YALJ;AAAA,UAFJ,EAUI;AAAA;AAAA,UAVJ,EAWI,MAAC,IAAD;AAAA,qBACA,KAAC,SAAD;AAAW,YAAA,KAAK,EAAEJ,MAAM,CAACK,MAAzB;AAAiC,YAAA,OAAO,EAAEC,OAA1C;AAAA,sBACV,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEN,MAAM,CAACO,IAApB;AAAA,wBAA2BC;AAA3B;AADU,YADA,EAKI,KAAC,MAAD;AACA,YAAA,KAAK,EAAE;AAACC,cAAAA,eAAe,EAAC,OAAjB;AAAyBC,cAAAA,KAAK,EAAC;AAA/B,aADP;AAGI,YAAA,OAAO,EAAE;AAAA,qBAAMC,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA,aAHb;AAAA,sBAKI,KAAC,IAAD;AAAA;AAAA;AALJ,YALJ;AAAA,UAXJ,EA0BI;AAAA;AAAA,UA1BJ,EA2BI,KAAC,mBAAD;AACN,UAAA,MAAM,EAAE,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,CADF;AAEN,UAAA,aAAa,EAAEhB,YAFT;AAGN,UAAA,UAAU,EAAEE;AAHN,UA3BJ;AAAA;AADC;AADL,IADJ;AAyCH,CA/CD;;AAoDAJ,YAAY,CAACmB,SAAb,GAAyB;AAEvBlB,EAAAA,UAAU,EAAEN,SAAS,CAACyB,MAAV,CAAiBC;AAFN,CAAzB;AAKA,IAAMf,MAAM,GAAG;AACXC,EAAAA,SAAS,EAAE;AACPe,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,WAAW,EAAC,EAHL;AAIXC,IAAAA,KAAK,EAAE;AAJI,GADA;AAOXhB,EAAAA,GAAG,EAAE;AACDiB,IAAAA,UAAU,EAAE,OADX;AAEDC,IAAAA,OAAO,EAAE,CAFR;AAGDC,IAAAA,MAAM,EAAE;AAHP,GAPM;AAYXlB,EAAAA,IAAI,EAAE;AACFiB,IAAAA,OAAO,EAAE,CADP;AAEFC,IAAAA,MAAM,EAAE;AAFN,GAZK;AAgBX/B,EAAAA,KAAK,EAAE;AACHyB,IAAAA,IAAI,EAAE,CADH;AAEHO,IAAAA,cAAc,EAAE;AAFb,GAhBI;AAoBTlB,EAAAA,MAAM,EAAC;AACLI,IAAAA,eAAe,EAAC;AADX;AApBE,CAAf;AA0BA,eAAef,YAAf","sourcesContent":["import React from 'react'\r\nimport { Text, View } from 'react-native-web'\r\nimport { TouchableOpacity, Button,Pressable ,ImageBackground} from 'react-native'\r\nimport PropTypes from 'prop-types';\r\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\r\nconst image = { uri: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ9VZB5hU9xt5HU8MQjHIzLVHU8RDRhu1yVHg&usqp=CAU\" };\r\nimport { useState } from 'react';\r\n\r\n\r\nconst MovieDetail1 = ({ navigation }) => {\r\n    const [segmentIndex,setSegmentIndex]=useState(0)\r\n   const handleIndexChange = index => {\r\n    setSegmentIndex(index)\r\n          };\r\n        \r\n    return(\r\n        <View >\r\n             <ImageBackground source={image} resizeMode=\"cover\" style={styles.image}>\r\n            <View style={styles.container}>\r\n                <h1>Parampara</h1>\r\n                <View style={{display: 'block'}}>\r\n                    <text style={styles.age}>12</text>\r\n                    <text style={styles.age}>AD)))</text>\r\n                    <text style={styles.age}>CC</text>\r\n                    <text style={styles.age1}>2013</text>\r\n                    <text style={styles.age1}>2h 12m</text>\r\n                   \r\n                </View>\r\n                <p>Science Fiction,Super Hero, Action-Adventure</p>\r\n                <View>\r\n                <Pressable style={styles.button} onPress={onPress}>\r\n      <Text style={styles.text}>{title}</Text>\r\n    </Pressable>\r\n                    \r\n                    <Button\r\n                    style={{backgroundColor:'white',width:'110',}}\r\n                      \r\n                        onPress={() => Alert.alert('Simple Button pressed')}\r\n                    >\r\n                        <Text>\r\n                        TRAILER\r\n                        </Text>\r\n                        </Button>\r\n                </View>\r\n                <p>Tony Stark encounters a formidable foe called the Mandarin, and after failing to him, he embarks on a journey with relentless consequences.</p>\r\n                <SegmentedControlTab\r\n          values={[\"SUGGESTED\", \"EXTRAS\", \"DETAILS\"]}\r\n          selectedIndex={segmentIndex}\r\n          onTabPress={handleIndexChange}\r\n        />\r\n            </View>\r\n\r\n           \r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n}\r\n    // const[selectedIndex,setSelectedIndex]=useState(0)\r\n\r\n;\r\n\r\nMovieDetail1.propTypes = {\r\n  // required\r\n  navigation: PropTypes.object.isRequired\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        paddingTop: 59,\r\n        paddingLeft:60,\r\n    color: 'white',\r\n      },\r\n    age: {\r\n        background: 'black',\r\n        padding: 4,\r\n        margin: 5,\r\n    },\r\n    age1: {\r\n        padding: 4,\r\n        margin: 5,\r\n    },\r\n    image: {\r\n        flex: 1,\r\n        justifyContent: \"center\"\r\n      },\r\n      button:{\r\n        backgroundColor:'#ff5c5c',\r\n        }\r\n    \r\n  \r\n}\r\nexport default MovieDetail1;\r\n"]},"metadata":{},"sourceType":"module"}