{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors, images } from \"../constants\";\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset,\n      navigation = _ref.navigation;\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('StackMovieDetails', {\n          movieId: item\n        });\n      },\n      children: _jsx(View, {\n        style: styles.item,\n        children: _jsx(Image, {\n          source: {\n            uri: item == null ? void 0 : item.poster\n          },\n          style: styles.image\n        })\n      })\n    });\n  };\n\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      contentContainerStyle: styles.containerFlatList,\n      data: dataset,\n      horizontal: true,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: renderItem,\n      showsHorizontalScrollIndicator: false\n    })\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 200,\n    marginRight: 32,\n    overflow: 'hidden',\n    width: 180\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'cover',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["C:/Users/dev/Documents/react/flicknplayreacttv-main/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","mockData","MediaItemScroller","dataset","navigation","renderItem","item","navigate","movieId","styles","uri","poster","image","containerFlatList","id","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","placeholder","backgroundColor","infoGrey","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA6B;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACrD,MAAMC,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC/B,WACE,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,mBAAM;AAC/BF,QAAAA,UAAU,CAACG,QAAX,CAAoB,mBAApB,EAAyC;AAAEC,UAAAA,OAAO,EAAEF;AAAX,SAAzC;AAED,OAHD;AAAA,gBAIE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACH,IAApB;AAAA,kBACE,KAAC,KAAD;AAAO,UAAA,MAAM,EAAE;AAACI,YAAAA,GAAG,EAACJ,IAAD,oBAACA,IAAI,CAAEK;AAAX,WAAf;AAAmC,UAAA,KAAK,EAAEF,MAAM,CAACG;AAAjD;AADF;AAJF,MADF;AASD,GAVD;;AAYA,SACE,KAAC,IAAD;AAAA,cACA,KAAC,QAAD;AACE,MAAA,qBAAqB,EAAEH,MAAM,CAACI,iBADhC;AAEE,MAAA,IAAI,EAAEV,OAFR;AAGE,MAAA,UAAU,MAHZ;AAIE,MAAA,YAAY,EAAE,sBAAAG,IAAI;AAAA,eAAIA,IAAI,CAACQ,EAAT;AAAA,OAJpB;AAKE,MAAA,UAAU,EAAET,UALd;AAOE,MAAA,8BAA8B,EAAE;AAPlC;AADA,IADF;AAaD,CA1BD;;AA4BAH,iBAAiB,CAACa,YAAlB,GAAiC;AAC/BZ,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACc,SAAlB,GAA8B;AAE5Bb,EAAAA,OAAO,EAAEL,SAAS,CAACmB;AAFS,CAA9B;AAKA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,iBAAiB,EAAE;AACjBO,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/Bf,EAAAA,IAAI,EAAE;AACJgB,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,EAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAMJC,IAAAA,KAAK,EAAE;AANH,GALyB;AAa/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE7B,MAAM,CAAC8B,QADb;AAEXN,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAbkB;AAkB/Bd,EAAAA,KAAK,EAAE;AACLW,IAAAA,MAAM,EAAE,MADH;AAELO,IAAAA,UAAU,EAAE,OAFP;AAGLJ,IAAAA,KAAK,EAAE;AAHF;AAlBwB,CAAlB,CAAf;AAyBA,eAAexB,iBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, Image, StyleSheet, View, TouchableOpacity } from 'react-native';\nimport { colors, images } from '../constants';\n\nimport mockData from '../mockdata/data';\n\nconst MediaItemScroller = ({ dataset, navigation }) => {\n  const renderItem = ({ item }) => {\n    return (\n      <TouchableOpacity onPress={() => {\n        navigation.navigate('StackMovieDetails', { movieId: item })\n\n      }}>\n        <View style={styles.item} >\n          <Image source={{uri:item?.poster}} style={styles.image} />\n        </View>\n      </TouchableOpacity>)\n  }\n\n  return (\n    <View>\n    <FlatList\n      contentContainerStyle={styles.containerFlatList}\n      data={dataset}\n      horizontal\n      keyExtractor={item => item.id}\n      renderItem={renderItem}\n\n      showsHorizontalScrollIndicator={false}\n    />\n    </View>\n  );\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\n\nMediaItemScroller.propTypes = {\n  // optional\n  dataset: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 200,\n    marginRight: 32,\n    overflow: 'hidden',\n    // boxShadow:'rgb(0 0 0 / 69%) 0px 26px 30px -10px, rgb(0 0 0 / 73%) 0px 16px 10px -10px',\n    width: 180\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'cover',\n    width: '100%'\n  }\n});\n\nexport default MediaItemScroller;\n"]},"metadata":{},"sourceType":"module"}