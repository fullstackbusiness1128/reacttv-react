{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PaginationDot from \"./PaginationDot\";\nimport styles from \"./Pagination.style\";\nvar IS_IOS = Platform.OS === 'ios';\nvar IS_RTL = I18nManager.isRTL;\n\nvar Pagination = function (_PureComponent) {\n  _inherits(Pagination, _PureComponent);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n\n    if (props.dotColor && !props.inactiveDotColor || !props.dotColor && props.inactiveDotColor) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You need to specify both `dotColor` and `inactiveDotColor`');\n    }\n\n    if (props.dotElement && !props.inactiveDotElement || !props.dotElement && props.inactiveDotElement) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You need to specify both `dotElement` and `inactiveDotElement`');\n    }\n\n    if (props.tappableDots && props.carouselRef === undefined) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You must specify prop `carouselRef` when setting `tappableDots` to `true`');\n    }\n\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"_needsRTLAdaptations\",\n    value: function _needsRTLAdaptations() {\n      var vertical = this.props.vertical;\n      return IS_RTL && !IS_IOS && !vertical;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dotsLength = _this$props.dotsLength,\n          containerStyle = _this$props.containerStyle,\n          vertical = _this$props.vertical,\n          accessibilityLabel = _this$props.accessibilityLabel;\n\n      if (!dotsLength || dotsLength < 2) {\n        return false;\n      }\n\n      var style = [styles.sliderPagination, {\n        flexDirection: vertical ? 'column' : this._needsRTLAdaptations() ? 'row-reverse' : 'row'\n      }, containerStyle || {}];\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: style,\n        accessible: !!accessibilityLabel,\n        accessibilityLabel: accessibilityLabel\n      }, this.dots);\n    }\n  }, {\n    key: \"_activeDotIndex\",\n    get: function get() {\n      var _this$props2 = this.props,\n          activeDotIndex = _this$props2.activeDotIndex,\n          dotsLength = _this$props2.dotsLength;\n      return this._needsRTLAdaptations() ? dotsLength - activeDotIndex - 1 : activeDotIndex;\n    }\n  }, {\n    key: \"dots\",\n    get: function get() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          activeOpacity = _this$props3.activeOpacity,\n          carouselRef = _this$props3.carouselRef,\n          dotsLength = _this$props3.dotsLength,\n          dotColor = _this$props3.dotColor,\n          dotContainerStyle = _this$props3.dotContainerStyle,\n          dotElement = _this$props3.dotElement,\n          dotStyle = _this$props3.dotStyle,\n          inactiveDotColor = _this$props3.inactiveDotColor,\n          inactiveDotElement = _this$props3.inactiveDotElement,\n          inactiveDotOpacity = _this$props3.inactiveDotOpacity,\n          inactiveDotScale = _this$props3.inactiveDotScale,\n          inactiveDotStyle = _this$props3.inactiveDotStyle,\n          renderDots = _this$props3.renderDots,\n          tappableDots = _this$props3.tappableDots,\n          animatedDuration = _this$props3.animatedDuration,\n          animatedFriction = _this$props3.animatedFriction,\n          animatedTension = _this$props3.animatedTension,\n          delayPressInDot = _this$props3.delayPressInDot;\n\n      if (renderDots) {\n        return renderDots(this._activeDotIndex, dotsLength, this);\n      }\n\n      var DefaultDot = React.createElement(PaginationDot, {\n        carouselRef: carouselRef,\n        tappable: tappableDots && typeof carouselRef !== 'undefined',\n        activeOpacity: activeOpacity,\n        color: dotColor,\n        containerStyle: dotContainerStyle,\n        style: dotStyle,\n        inactiveColor: inactiveDotColor,\n        inactiveOpacity: inactiveDotOpacity,\n        inactiveScale: inactiveDotScale,\n        inactiveStyle: inactiveDotStyle,\n        animatedDuration: animatedDuration,\n        animatedFriction: animatedFriction,\n        animatedTension: animatedTension,\n        delayPressInDot: delayPressInDot\n      });\n\n      var dots = _toConsumableArray(Array(dotsLength).keys()).map(function (i) {\n        var isActive = i === _this2._activeDotIndex;\n        return React.cloneElement((isActive ? dotElement : inactiveDotElement) || DefaultDot, {\n          key: \"pagination-dot-\".concat(i),\n          active: isActive,\n          index: i\n        });\n      });\n\n      return dots;\n    }\n  }]);\n\n  return Pagination;\n}(PureComponent);\n\nexport { Pagination as default };\n\n_defineProperty(Pagination, \"defaultProps\", {\n  inactiveDotOpacity: 0.5,\n  inactiveDotScale: 0.5,\n  tappableDots: false,\n  vertical: false,\n  animatedDuration: 250,\n  animatedFriction: 4,\n  animatedTension: 50,\n  delayPressInDot: 0\n});","map":{"version":3,"sources":["Pagination.tsx"],"names":["IS_IOS","Platform","IS_RTL","I18nManager","Pagination","inactiveDotOpacity","inactiveDotScale","tappableDots","vertical","animatedDuration","animatedFriction","animatedTension","delayPressInDot","constructor","props","console","dotsLength","renderDots","DefaultDot","dots","Array","i","isActive","key","active","index","accessibilityLabel","style","styles","flexDirection","containerStyle"],"mappings":"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","sourcesContent":["import React, { PureComponent, ReactElement } from 'react';\nimport {\n    I18nManager,\n    Platform,\n    View,\n    StyleProp,\n    ViewStyle\n} from 'react-native';\nimport PaginationDot from './PaginationDot';\nimport styles from './Pagination.style';\nimport type Carousel from 'src/carousel/Carousel';\n\nconst IS_IOS = Platform.OS === 'ios';\nconst IS_RTL = I18nManager.isRTL;\n\ntype PaginationProps<TData> = {\n  activeDotIndex: number;\n  dotsLength: number;\n  activeOpacity?: number;\n  carouselRef?: Carousel<TData> | null;\n  containerStyle?: StyleProp<ViewStyle>;\n  dotColor?: string;\n  dotContainerStyle?: StyleProp<ViewStyle>;\n  dotElement?: ReactElement;\n  dotStyle?: StyleProp<ViewStyle>;\n  inactiveDotColor?: string;\n  inactiveDotElement?: ReactElement;\n  inactiveDotOpacity: number;\n  inactiveDotScale: number;\n  inactiveDotStyle?: StyleProp<ViewStyle>;\n  renderDots?: (\n    activeIndex: number,\n    length: number,\n    context: Pagination<TData>\n  ) => ReactElement;\n  tappableDots: boolean;\n  vertical: boolean;\n  accessibilityLabel?: string;\n  animatedDuration: number;\n  animatedFriction: number;\n  animatedTension: number;\n  delayPressInDot: number;\n};\n\nexport default class Pagination<TData> extends PureComponent<PaginationProps<TData>> {\n  static defaultProps = {\n      inactiveDotOpacity: 0.5,\n      inactiveDotScale: 0.5,\n      tappableDots: false,\n      vertical: false,\n      animatedDuration: 250,\n      animatedFriction: 4,\n      animatedTension: 50,\n      delayPressInDot: 0\n  };\n\n  constructor (props: PaginationProps<TData>) {\n      super(props);\n\n      // Warnings\n      if (\n          (props.dotColor && !props.inactiveDotColor) ||\n      (!props.dotColor && props.inactiveDotColor)\n      ) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You need to specify both `dotColor` and `inactiveDotColor`'\n          );\n      }\n      if (\n          (props.dotElement && !props.inactiveDotElement) ||\n      (!props.dotElement && props.inactiveDotElement)\n      ) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You need to specify both `dotElement` and `inactiveDotElement`'\n          );\n      }\n      if (props.tappableDots && props.carouselRef === undefined) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You must specify prop `carouselRef` when setting `tappableDots` to `true`'\n          );\n      }\n  }\n\n  _needsRTLAdaptations () {\n      const { vertical } = this.props;\n      return IS_RTL && !IS_IOS && !vertical;\n  }\n\n  get _activeDotIndex () {\n      const { activeDotIndex, dotsLength } = this.props;\n      return this._needsRTLAdaptations() ?\n          dotsLength - activeDotIndex - 1 :\n          activeDotIndex;\n  }\n\n  get dots () {\n      const {\n          activeOpacity,\n          carouselRef,\n          dotsLength,\n          dotColor,\n          dotContainerStyle,\n          dotElement,\n          dotStyle,\n          inactiveDotColor,\n          inactiveDotElement,\n          inactiveDotOpacity,\n          inactiveDotScale,\n          inactiveDotStyle,\n          renderDots,\n          tappableDots,\n          animatedDuration,\n          animatedFriction,\n          animatedTension,\n          delayPressInDot\n      } = this.props;\n\n      if (renderDots) {\n          return renderDots(this._activeDotIndex, dotsLength, this);\n      }\n\n      const DefaultDot = (\n          <PaginationDot\n            carouselRef={carouselRef}\n            tappable={tappableDots && typeof carouselRef !== 'undefined'}\n            activeOpacity={activeOpacity}\n            color={dotColor}\n            containerStyle={dotContainerStyle}\n            style={dotStyle}\n            inactiveColor={inactiveDotColor}\n            inactiveOpacity={inactiveDotOpacity}\n            inactiveScale={inactiveDotScale}\n            inactiveStyle={inactiveDotStyle}\n            animatedDuration={animatedDuration}\n            animatedFriction={animatedFriction}\n            animatedTension={animatedTension}\n            delayPressInDot={delayPressInDot}\n          />\n      );\n\n      const dots = [...Array(dotsLength).keys()].map((i) => {\n          const isActive = i === this._activeDotIndex;\n          return React.cloneElement(\n              (isActive ? dotElement : inactiveDotElement) || DefaultDot,\n              {\n                  key: `pagination-dot-${i}`,\n                  active: isActive,\n                  index: i\n              }\n          );\n      });\n\n      return dots;\n  }\n\n  render () {\n      const {\n          dotsLength,\n          containerStyle,\n          vertical,\n          accessibilityLabel\n      } = this.props;\n\n      if (!dotsLength || dotsLength < 2) {\n          return false;\n      }\n\n      const style = [\n          styles.sliderPagination,\n          {\n              flexDirection: vertical ?\n                  ('column' as const) :\n                  this._needsRTLAdaptations() ?\n                      ('row-reverse' as const) :\n                      ('row' as const)\n          },\n          containerStyle || {}\n      ];\n\n      return (\n          <View\n            pointerEvents='box-none'\n            style={style}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={accessibilityLabel}\n          >\n              {this.dots}\n          </View>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}