{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addCss } from \"../utils/inject\";\nimport createDeclarationBlock from \"../utils/create-declaration-block\";\nimport hash from \"../hash\";\nimport { isMediaOrPseudo, deepClone, createCssRule } from \"../utils/common\";\n\nvar createStyleSheet = function createStyleSheet(stylesWithQuery) {\n  if (!stylesWithQuery) return {\n    ids: {},\n    styles: {},\n    fullStyles: {}\n  };\n  var ids = {};\n  var cleanStyles = deepClone(stylesWithQuery);\n  Object.keys(stylesWithQuery).map(function (key) {\n    if (!(stylesWithQuery == null ? void 0 : stylesWithQuery[key])) return;\n    var mediaQueriesAndPseudoClasses = Object.keys(stylesWithQuery[key]).filter(isMediaOrPseudo);\n    mediaQueriesAndPseudoClasses.map(function (query) {\n      var _ids;\n\n      var css = createDeclarationBlock(stylesWithQuery[key][query]);\n      var stringHash = \"rnmq-\" + hash(\"\" + key + query + css);\n      var rule = createCssRule(query, stringHash, css);\n      addCss(\"\" + stringHash, rule);\n      delete cleanStyles[key][query];\n      ids = _objectSpread({}, ids, _defineProperty({}, key, \"\" + (((_ids = ids) == null ? void 0 : _ids[key]) ? ids[key] + \" \" : \"\") + stringHash));\n    });\n  });\n  return {\n    ids: ids,\n    styles: cleanStyles,\n    fullStyles: stylesWithQuery\n  };\n};\n\nexport default createStyleSheet;","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/node_modules/react-native-media-query/create-stylesheet/index.web.js"],"names":["addCss","createDeclarationBlock","hash","isMediaOrPseudo","deepClone","createCssRule","createStyleSheet","stylesWithQuery","ids","styles","fullStyles","cleanStyles","Object","keys","map","key","mediaQueriesAndPseudoClasses","filter","query","css","stringHash","rule"],"mappings":";;;;;;AAAA,SAASA,MAAT;AACA,OAAOC,sBAAP;AACA,OAAOC,IAAP;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,aAArC;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,eAAD,EAAqB;AAC5C,MAAI,CAACA,eAAL,EAAsB,OAAO;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,MAAM,EAAE,EAAnB;AAAuBC,IAAAA,UAAU,EAAE;AAAnC,GAAP;AAEtB,MAAIF,GAAG,GAAG,EAAV;AACA,MAAMG,WAAW,GAAGP,SAAS,CAACG,eAAD,CAA7B;AAEAK,EAAAA,MAAM,CAACC,IAAP,CAAYN,eAAZ,EAA6BO,GAA7B,CAAiC,UAACC,GAAD,EAAS;AACxC,QAAI,EAACR,eAAD,oBAACA,eAAe,CAAGQ,GAAH,CAAhB,CAAJ,EAA6B;AAE7B,QAAMC,4BAA4B,GAAGJ,MAAM,CAACC,IAAP,CACnCN,eAAe,CAACQ,GAAD,CADoB,EAEnCE,MAFmC,CAE5Bd,eAF4B,CAArC;AAIAa,IAAAA,4BAA4B,CAACF,GAA7B,CAAiC,UAACI,KAAD,EAAW;AAAA;;AAC1C,UAAMC,GAAG,GAAGlB,sBAAsB,CAACM,eAAe,CAACQ,GAAD,CAAf,CAAqBG,KAArB,CAAD,CAAlC;AACA,UAAME,UAAU,aAAWlB,IAAI,MAAIa,GAAJ,GAAUG,KAAV,GAAkBC,GAAlB,CAA/B;AACA,UAAME,IAAI,GAAGhB,aAAa,CAACa,KAAD,EAAQE,UAAR,EAAoBD,GAApB,CAA1B;AAEAnB,MAAAA,MAAM,MAAIoB,UAAJ,EAAkBC,IAAlB,CAAN;AACA,aAAOV,WAAW,CAACI,GAAD,CAAX,CAAiBG,KAAjB,CAAP;AAEAV,MAAAA,GAAG,qBACEA,GADF,sBAEAO,GAFA,QAES,SAAAP,GAAG,SAAH,iBAAMO,GAAN,KAAaP,GAAG,CAACO,GAAD,CAAH,GAAW,GAAxB,GAA8B,EAFvC,IAE4CK,UAF5C,EAAH;AAID,KAZD;AAaD,GApBD;AAsBA,SAAO;AAAEZ,IAAAA,GAAG,EAAHA,GAAF;AAAOC,IAAAA,MAAM,EAAEE,WAAf;AAA4BD,IAAAA,UAAU,EAAEH;AAAxC,GAAP;AACD,CA7BD;;AA+BA,eAAeD,gBAAf","sourcesContent":["import { addCss } from \"../utils/inject\";\nimport createDeclarationBlock from \"../utils/create-declaration-block\";\nimport hash from \"../hash\";\nimport { isMediaOrPseudo, deepClone, createCssRule } from \"../utils/common\";\n\nconst createStyleSheet = (stylesWithQuery) => {\n  if (!stylesWithQuery) return { ids: {}, styles: {}, fullStyles: {} };\n\n  let ids = {};\n  const cleanStyles = deepClone(stylesWithQuery);\n\n  Object.keys(stylesWithQuery).map((key) => {\n    if (!stylesWithQuery?.[key]) return;\n\n    const mediaQueriesAndPseudoClasses = Object.keys(\n      stylesWithQuery[key]\n    ).filter(isMediaOrPseudo);\n\n    mediaQueriesAndPseudoClasses.map((query) => {\n      const css = createDeclarationBlock(stylesWithQuery[key][query]);\n      const stringHash = `rnmq-${hash(`${key}${query}${css}`)}`;\n      const rule = createCssRule(query, stringHash, css);\n\n      addCss(`${stringHash}`, rule);\n      delete cleanStyles[key][query];\n\n      ids = {\n        ...ids,\n        [key]: `${ids?.[key] ? ids[key] + \" \" : \"\"}${stringHash}`,\n      };\n    });\n  });\n  \n  return { ids, styles: cleanStyles, fullStyles: stylesWithQuery };\n};\n\nexport default createStyleSheet;\n"]},"metadata":{},"sourceType":"module"}