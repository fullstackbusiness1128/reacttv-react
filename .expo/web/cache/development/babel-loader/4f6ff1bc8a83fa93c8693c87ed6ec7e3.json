{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding-top: 56;\\n  border-radius: 10px;\\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\\n  overflow: hidden;\\n  position: relative;\\n  border: 3px solid rgba(249, 249, 249, 0.1);\\n\\n  img {\\n    inset: 0px;\\n    display: block;\\n    height: 100%;\\n    \", \"\\n    object-fit: cover;\\n    opacity: 1;\\n    position: absolute;\\n    transition: opacity 500ms ease-in-out 0s;\\n    width: 100%;\\n    z-index: 1;\\n    top: 0;\\n  }\\n  video {\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    top: 0px;\\n    opacity: 0;\\n    z-index: 0;\\n  }\\n  &:hover {\\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\\n    transform: scale(1.05);\\n    border-color: rgba(249, 249, 249, 0.8);\\n    video {\\n      opacity: 1;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 4px;\\n  padding: 30px 0px 26px;\\n  @media (max-width: 768px) {\\n    grid-template-columns: repeat(1, minmax(0, 1fr));\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components/native\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Video } from \"react-native-web/dist/index\";\nimport disneyImage from \"../assets/viewers-disney.png\";\nimport disneyVideo from \"../assets/videos/1564674844-disney.mp4\";\nimport pixerImage from \"../assets/viewers-pixar.png\";\nimport pixerVideo from \"../assets/videos/1564676714-pixar.mp4\";\nimport marvelImage from \"../assets/viewers-marvel.png\";\nimport marvelVideo from \"../assets/videos/1564676115-marvel.mp4\";\nimport starWarImage from \"../assets/viewers-starwars.png\";\nimport starWarVideo from \"../assets/videos/1608229455-star-wars.mp4\";\nimport nationaGeoImage from \"../assets/viewers-national.png\";\nimport nationalGeoVideo from \"../assets/videos/1564676296-national-geographic.mp4\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nvar Viewers = function Viewers() {\n  return _jsx(View, {\n    children: _jsx(Container, {\n      children: _jsxs(Wrap, {\n        children: [_jsx(View, {\n          children: _jsx(Wrap, {\n            children: _jsx(Image, {\n              source: disneyImage,\n              alt: \"\"\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(Wrap, {\n            children: _jsx(Image, {\n              source: pixerImage,\n              alt: \"\"\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(Wrap, {\n            children: _jsx(Image, {\n              source: marvelImage,\n              alt: \"\"\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(Wrap, {\n            children: _jsx(Image, {\n              source: nationaGeoImage,\n              alt: \"\"\n            })\n          })\n        })]\n      })\n    })\n  });\n};\n\nvar Container = styled.View(_templateObject());\nvar Wrap = styled.View(_templateObject2(), \"\");\nexport default Viewers;","map":{"version":3,"sources":["C:/Users/dev/Documents/react/flicknplayreacttv-main/src/screens/Viewer.js"],"names":["styled","React","useState","useEffect","Video","disneyImage","disneyVideo","pixerImage","pixerVideo","marvelImage","marvelVideo","starWarImage","starWarVideo","nationaGeoImage","nationalGeoVideo","axios","require","Viewers","Container","View","Wrap"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;SAEqBC,K;AACrB,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,YAAP;AACA,OAAOC,eAAP;AACA,OAAOC,gBAAP;;;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,SACE,KAAC,IAAD;AAAA,cACC,KAAC,SAAD;AAAA,gBACE,MAAC,IAAD;AAAA,mBACD,KAAC,IAAD;AAAA,oBACA,KAAC,IAAD;AAAA,sBACE,KAAC,KAAD;AAAO,cAAA,MAAM,EAAEZ,WAAf;AAA4B,cAAA,GAAG,EAAC;AAAhC;AADF;AADA,UADC,EASD,KAAC,IAAD;AAAA,oBACC,KAAC,IAAD;AAAA,sBAEC,KAAC,KAAD;AAAO,cAAA,MAAM,EAAEE,UAAf;AAA2B,cAAA,GAAG,EAAC;AAA/B;AAFD;AADD,UATC,EAkBD,KAAC,IAAD;AAAA,oBACC,KAAC,IAAD;AAAA,sBACC,KAAC,KAAD;AAAO,cAAA,MAAM,EAAEE,WAAf;AAA4B,cAAA,GAAG,EAAC;AAAhC;AADD;AADD,UAlBC,EAkCD,KAAC,IAAD;AAAA,oBACC,KAAC,IAAD;AAAA,sBACC,KAAC,KAAD;AAAO,cAAA,MAAM,EAAEI,eAAf;AAAgC,cAAA,GAAG,EAAC;AAApC;AADD;AADD,UAlCC;AAAA;AADF;AADD,IADF;AAqDD,CAtDD;;AAkEA,IAAMK,SAAS,GAAGlB,MAAM,CAACmB,IAAV,mBAAf;AAOA,IAAMC,IAAI,GAAGpB,MAAM,CAACmB,IAAV,qBAaJ,EAbI,CAAV;AA0CA,eAAeF,OAAf","sourcesContent":["import styled from \"styled-components/native\";\nimport React, { useState, useEffect } from 'react';\n// import aa from '../assets/'\nimport { Image ,View,Video} from \"react-native\";\nimport disneyImage from \"../assets/viewers-disney.png\"\nimport disneyVideo from \"../assets/videos/1564674844-disney.mp4\"\nimport pixerImage  from \"../assets/viewers-pixar.png\"\nimport pixerVideo  from \"../assets/videos/1564676714-pixar.mp4\"\nimport marvelImage  from \"../assets/viewers-marvel.png\"\nimport marvelVideo  from \"../assets/videos/1564676115-marvel.mp4\"\nimport starWarImage  from \"../assets/viewers-starwars.png\"\nimport starWarVideo  from \"../assets/videos/1608229455-star-wars.mp4\"\nimport nationaGeoImage  from \"../assets/viewers-national.png\"\nimport nationalGeoVideo  from \"../assets/videos/1564676296-national-geographic.mp4\"\nconst axios = require('axios');\nconst Viewers = () => {\n  return (\n    <View>\n     <Container> \n       <Wrap> \n      <View>\n      <Wrap> \n        <Image source={disneyImage} alt=\"\" />\n        {/* <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={disneyVideo} type=\"video/mp4\" />\n        </video> */}\n       </Wrap> \n      </View>\n      <View>\n       <Wrap> \n        {/* Chrome does not allow any video to be autoplayed if it's not 'muted' */}\n        <Image source={pixerImage} alt=\"\" />\n        {/* <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={pixerVideo} type=\"video/mp4\" />\n        </video>*/}\n      </Wrap> \n      </View>\n      <View>\n       <Wrap> \n        <Image source={marvelImage} alt=\"\" />\n        {/* <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={marvelVideo} type=\"video/mp4\" />\n        </video>\n      </Wrap> \n          </View>\n          <View>\n       <Wrap> \n        <Image source={starWarImage} alt=\"\" />\n        {/* <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={starWarVideo} type=\"video/mp4\" />\n        </video> */}\n       </Wrap> \n      </View>\n      <View>\n       <Wrap> \n        <Image source={nationaGeoImage} alt=\"\" />\n        {/* <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source\n            src={nationalGeoVideo}\n            type=\"video/mp4\"\n          />\n        </video> */}\n        </Wrap> \n        </View>\n     </Wrap> \n    </Container> \n    \n    </View>\n  );\n};\n\n// const Container = styled.View`\n//   margin-top: 4px;\n//   padding: 30px 0px 26px;\n//   display: grid;\n//   grid-gap: 25px;\n//   grid-template-columns: repeat(5, minmax(0, 1fr));\n//   @media (max-width: 768px) {\n//     grid-template-columns: repeat(1, minmax(0, 1fr));\n//   }\n// `;\nconst Container = styled.View`\n  margin-top: 4px;\n  padding: 30px 0px 26px;\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n`;\nconst Wrap = styled.View`\n  padding-top: 56;\n  border-radius: 10px;\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n  overflow: hidden;\n  position: relative;\n  border: 3px solid rgba(249, 249, 249, 0.1);\n\n  img {\n    inset: 0px;\n    display: block;\n    height: 100%;\n    ${\n      \"\" /* the image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit: */\n    }\n    object-fit: cover;\n    opacity: 1;\n    position: absolute;\n    transition: opacity 500ms ease-in-out 0s;\n    width: 100%;\n    z-index: 1;\n    top: 0;\n  }\n  video {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0px;\n    opacity: 0;\n    z-index: 0;\n  }\n  &:hover {\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\n    transform: scale(1.05);\n    border-color: rgba(249, 249, 249, 0.8);\n    video {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default Viewers;\n"]},"metadata":{},"sourceType":"module"}