{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { colors, gStyle } from \"../constants\";\nimport { useState } from 'react';\nimport SvgBackground from \"../components/icons/Svg.Background\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nvar Search = function Search() {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      number = _React$useState2[0],\n      onChangeNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      searchdata = _React$useState4[0],\n      searchDataOnChange = _React$useState4[1];\n\n  var onSearchChange = function onSearchChange(e) {\n    if (e.target.value != undefined) {\n      onChangeNumber(e.target.value);\n      fetchData(e.target.value);\n    }\n  };\n\n  var label = number ? 'Movies & TV Shows' : 'Top Searches';\n\n  var fetchData = function fetchData(text) {\n    console.log(text);\n    axios.get(\"https://www.flicknplay.com/secure/search/\" + text).then(function _callee(response) {\n      var _response$data;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(searchDataOnChange(response == null ? void 0 : (_response$data = response.data) == null ? void 0 : _response$data.results));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n    console.log(searchdata);\n  };\n\n  return _jsxs(View, {\n    style: styles.searchContainer,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      children: _jsx(\"div\", {\n        style: styles.buttons,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../assets/menu.png\")\n        })\n      })\n    }), _jsxs(SafeAreaView, {\n      children: [_jsx(View, {\n        style: styles.searchInput,\n        children: _jsx(TextInput, {\n          placeholder: \"Search\",\n          placeholderTextColor: \"#757575\",\n          value: number,\n          onChange: onSearchChange,\n          clearButtonMode: \"while-editing\",\n          selectionColor: \"#757575\",\n          style: styles.textInput\n        })\n      }), _jsx(ScrollView, {\n        style: {\n          maxHeight: '82vh'\n        },\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: label\n          }), _jsx(View, {\n            style: styles.listContainer,\n            children: searchdata && searchdata.length > 0 ? searchdata.filter(function (el) {\n              return el.poster != null;\n            }).map(function (el) {\n              return _jsxs(_Fragment, {\n                children: [_jsxs(\"div\", {\n                  style: {\n                    display: 'inline-flex'\n                  },\n                  children: [_jsx(Image, {\n                    style: styles.tinyLogo,\n                    source: el.poster\n                  }), _jsx(Text, {\n                    style: styles.textColor,\n                    children: el.name\n                  })]\n                }), _jsx(\"br\", {})]\n              });\n            }) : _jsx(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: _jsx(Text, {\n                style: styles.textColors,\n                children: \"Not Found\"\n              })\n            })\n          })]\n        })\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  searchContainer: {\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingRight: 16,\n    paddingLeft: 16,\n    backgroundColor: '#111111',\n    flex: 1\n  },\n  flex: {\n    flex: 1\n  },\n  listContainer: {\n    flex: 1,\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly'\n  },\n  tinyLogo: {\n    width: 150,\n    height: 150\n  },\n  textColor: {\n    color: '#FFFFFF',\n    fontSize: '16px',\n    fontWeight: 700,\n    marginTop: 10\n  },\n  searchInput: {\n    backgroundColor: '#D3D3D3',\n    lineHeight: 24,\n    marginTop: 8,\n    marginBottom: 16,\n    marginRight: 4,\n    marginLeft: 4,\n    borderRadius: 4,\n    padding: 4\n  },\n  textInput: {\n    color: '#111111',\n    height: 30\n  },\n  label: {\n    fontFamily: 'Helvetica',\n    color: '#FFFFFF',\n    fontSize: 24,\n    lineHeight: 36,\n    fontWeight: '500',\n    marginTop: 16,\n    marginBottom: 8\n  },\n  textColors: {\n    color: '#FFFFFF',\n    fontSize: '20px',\n    fontWeight: 700,\n    margin: '10px ',\n    textAlign: 'center'\n  }\n});\nexport default Search;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/screens/Search.js"],"names":["React","colors","gStyle","useState","SvgBackground","axios","require","Search","number","onChangeNumber","searchdata","searchDataOnChange","onSearchChange","e","target","value","undefined","fetchData","label","text","console","log","get","then","response","data","results","styles","searchContainer","navigation","openDrawer","buttons","image","searchInput","textInput","maxHeight","listContainer","length","filter","el","poster","map","display","tinyLogo","textColor","name","textAlign","textColors","StyleSheet","create","paddingTop","paddingBottom","paddingRight","paddingLeft","backgroundColor","flex","flexWrap","justifyContent","width","height","color","fontSize","fontWeight","marginTop","lineHeight","marginBottom","marginRight","marginLeft","borderRadius","padding","fontFamily","margin"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { SafeAreaView,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  View,Image} from 'react-native';\r\nimport { colors, gStyle } from '../constants';\r\nimport { useState } from 'react';\r\n// icons\r\nimport SvgBackground from '../components/icons/Svg.Background';\r\nconst axios = require('axios');\r\nconst Search = () => {\r\n  const [number, onChangeNumber] = React.useState();\r\n  const [searchdata,searchDataOnChange]= React.useState([])\r\n const  onSearchChange = (e) => {\r\n   if(e.target.value!=undefined){\r\n    onChangeNumber(e.target.value)\r\n    fetchData(e.target.value)\r\n   }\r\n    }\r\n    const label = number ? 'Movies & TV Shows' : 'Top Searches';\r\n    const fetchData=(text)=>{\r\n     console.log(text)\r\n     axios.get(`https://www.flicknplay.com/secure/search/${text}`).then(async(response)=>{\r\n   \r\n      await searchDataOnChange(response?.data?.results)\r\n     })\r\n     console.log(searchdata)\r\n    }\r\n   \r\nreturn(\r\n//   <View style={gStyle.container}>\r\n//   <TextInput\r\n//     style={styles.input}\r\n//     onChange={onSearchChange}\r\n//     value={number}\r\n//     placeholder=\"Search for movies,tv shows and people \"\r\n//     keyboardType=\"numeric\"\r\n//   />\r\n// <View style={gStyle.posAbsolute}>\r\n//   {/* <SvgBackground /> */}\r\n// </View>\r\n\r\n// <ScrollView scrollEventThrottle={16} showsVerticalScrollIndicator={false}>\r\n//   <View >\r\n//     {searchdata&&\r\n//     searchdata.map((data,index)=>{\r\n//       console.log(data)\r\n//     })}\r\n//     </View>\r\n// </ScrollView>\r\n// </View>\r\n<View style={styles.searchContainer}>\r\n<TouchableOpacity  onPress={() => navigation.openDrawer()}>\r\n   <div style={styles.buttons} >\r\n       <Image style={styles.image} source={require('../assets/menu.png')}\r\n      />\r\n                            </div>\r\n  \r\n                            </TouchableOpacity> \r\n      <SafeAreaView>\r\n        <View style={styles.searchInput}>\r\n          <TextInput\r\n            placeholder=\"Search\"\r\n            placeholderTextColor='#757575'\r\n            value={number}\r\n            onChange={onSearchChange}\r\n            clearButtonMode=\"while-editing\"\r\n            selectionColor='#757575'\r\n            style={styles.textInput}\r\n          />\r\n        </View>\r\n        <ScrollView style={{maxHeight: '82vh'}}>\r\n          <View  >\r\n            <Text style={styles.label}>{label}</Text>\r\n            <View style={styles.listContainer}>\r\n      {searchdata && searchdata.length > 0?searchdata\r\n        .filter((el) => el.poster != null)\r\n        .map((el) => (\r\n          <>\r\n         <div style={{display: 'inline-flex'}}>\r\n            <Image   style={styles.tinyLogo} source={el.poster}/>\r\n\r\n            <Text style={styles.textColor}>{el.name}</Text>\r\n           \r\n          </div>\r\n         \r\n          <br/>\r\n          </>\r\n          \r\n          \r\n          \r\n        )):(<div style={{textAlign:'center'}}>\r\n          <Text style={styles.textColors}> \r\n            Not Found\r\n          </Text>\r\n        </div>)}\r\n    </View>\r\n            {/* <MediaResults data={data} error={error} /> */}\r\n          </View> \r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </View>\r\n)\r\n}\r\n// const styles = StyleSheet.create({\r\n//   input: {\r\n//     height: 40,\r\n//     margin: 12,\r\n//     borderWidth: 1,\r\n//     padding: 10,\r\n//     backgroundColor:colors.white\r\n//   },\r\n// });\r\nconst styles = StyleSheet.create({\r\n  searchContainer: {\r\n      paddingTop: 8,\r\n      paddingBottom: 8,\r\n      paddingRight: 16,\r\n      paddingLeft: 16,\r\n    backgroundColor: '#111111',\r\n    flex: 1,\r\n  },\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  listContainer: {\r\n    flex: 1,\r\n  //  flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-evenly',\r\n  },\r\n  tinyLogo: {\r\n    width: 150,\r\n    height: 150,\r\n  },\r\n  textColor:{\r\n   color:'#FFFFFF',\r\n   fontSize: '16px',\r\n   fontWeight:700,\r\n   marginTop:10\r\n  },\r\n  searchInput: {\r\n    backgroundColor: '#D3D3D3',\r\n    lineHeight: 24,\r\n    marginTop: 8,\r\n    marginBottom: 16,\r\n    marginRight: 4,\r\n    marginLeft: 4,\r\n    borderRadius: 4,\r\n    padding: 4,\r\n  },\r\n  textInput: {\r\n    color: '#111111',\r\n    height: 30,\r\n  },\r\n  label: {\r\n      fontFamily: 'Helvetica',\r\n      color: '#FFFFFF',\r\n      fontSize: 24,\r\n      lineHeight: 36,\r\n      fontWeight: '500',\r\n    marginTop: 16,\r\n    marginBottom: 8,\r\n  },\r\n  textColors:{\r\n    color:'#FFFFFF',\r\n    fontSize: '20px',\r\n    fontWeight:700,\r\n    margin: '10px ',\r\n    textAlign :'center'\r\n   },\r\n});\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}