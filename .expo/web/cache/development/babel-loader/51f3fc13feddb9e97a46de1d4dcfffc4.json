{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport Toast from 'react-native-toast-message';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var nameError, emailError, passwordError, showToast, formData, url;\n    return _regeneratorRuntime.async(function onSignUpPressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            nameError = nameValidator(name.value);\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            showToast = function showToast(type, message) {\n              Toast.show({\n                type: type,\n                text1: message\n              });\n            };\n\n            if (!(emailError || passwordError || nameError)) {\n              _context2.next = 9;\n              break;\n            }\n\n            setName(_objectSpread({}, name, {\n              error: nameError\n            }));\n            setEmail(_objectSpread({}, email, {\n              error: emailError\n            }));\n            setPassword(_objectSpread({}, password, {\n              error: passwordError\n            }));\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!(email.value != '' || password.value != '')) {\n              _context2.next = 19;\n              break;\n            }\n\n            formData = new FormData();\n            formData.append('email', email.value);\n            formData.append('password', password.value);\n            formData.append('display_name', name.value);\n            formData.append('password_confirmation', password.value);\n            formData.append('token_name', 'flicknplaysapi');\n            url = \"https://www.flicknplay.com/api/v1/auth/register\";\n            _context2.next = 19;\n            return _regeneratorRuntime.awrap(axios.post(url, formData, {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            }).then(function _callee(response) {\n              var _response$data;\n\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(response);\n\n                      if ((response == null ? void 0 : (_response$data = response.data) == null ? void 0 : _response$data.status) == \"needs_email_verification\") {\n                        showToast(\"success\", \"needs_email_verification\");\n                        navigation.navigate('LoginScreen');\n                      }\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            }).catch(function (error) {\n              console.log(error.response.data.errors.email[0]);\n              showToast(\"error\", error.response.data.errors.email[0]);\n            }));\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.navigate('LoginScreen');\n      }\n    }), _jsx(Logo, {}), _jsxs(View, {\n      style: {\n        backgroundColor: '#1d1d1d',\n        width: '100%',\n        padding: 26,\n        marginBottom: 13\n      },\n      children: [_jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Create Account\"\n      }), _jsx(TextInput, {\n        label: \"Name\",\n        returnKeyType: \"next\",\n        value: name.value,\n        onChangeText: function onChangeText(text) {\n          return setName({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!name.error,\n        errorText: name.error\n      }), _jsx(TextInput, {\n        label: \"Email\",\n        returnKeyType: \"next\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!email.error,\n        errorText: email.error,\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        label: \"Password\",\n        returnKeyType: \"done\",\n        value: password.value,\n        onChangeText: function onChangeText(text) {\n          return setPassword({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!password.error,\n        errorText: password.error,\n        secureTextEntry: true\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: onSignUpPressed,\n        style: {\n          marginTop: 24,\n          backgroundColor: '#f65f54'\n        },\n        children: \"Sign Up\"\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Already have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","Toast","axios","require","RegisterScreen","navigation","value","error","name","setName","email","setEmail","password","setPassword","onSignUpPressed","nameError","emailError","passwordError","showToast","type","message","show","text1","formData","FormData","append","url","post","headers","then","response","console","log","data","status","navigate","catch","errors","backgroundColor","width","padding","marginBottom","color","text","marginTop","styles","row","link","StyleSheet","create","flexDirection","fontWeight","colors","primary"],"sources":["E:/works/android/20220927/flicknplayreacttv-main/flicknplayreacttv-main/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, StyleSheet, TouchableOpacity,Text } from 'react-native'\n\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport { nameValidator } from '../helpers/nameValidator'\nimport Toast from 'react-native-toast-message';\nconst axios = require('axios');\nexport default function RegisterScreen({ navigation }) {\n  const [name, setName] = useState({ value: '', error: '' })\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onSignUpPressed = async () => {\n    const nameError = nameValidator(name.value)\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    const showToast = (type,message) => {\n      Toast.show({\n        type: type,\n        text1: message\n      });\n    }\n    if (emailError || passwordError || nameError) {\n      setName({ ...name, error: nameError })\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n      return\n    }\n    if(email.value!='' || password.value!=''){\n      // let body={\n      //   email:email.value,\n      //   password:password.value,\n      //   token_name:\"flicknplaysapi\",\n       \n      // }\n      const formData = new FormData();\n      formData.append('email',email.value)\n      formData.append('password',password.value)\n      formData.append('display_name',name.value)\n      formData.append('password_confirmation',password.value)\n      formData.append('token_name','flicknplaysapi')\n      const url = `https://www.flicknplay.com/api/v1/auth/register`\n     await axios.post(url,formData , { headers: {\"Content-Type\" : `application/x-www-form-urlencoded`} }).then(async(response)=>{\n\n        console.log(response)\n        if(response?.data?.status==\"needs_email_verification\"){\n          showToast(\"success\",\"needs_email_verification\")\n          navigation.navigate('LoginScreen')\n        }\n       }).catch(function(error){\n         console.log(error.response.data.errors.email[0])\n         showToast(\"error\",error.response.data.errors.email[0])\n       })\n\n    }\n    // navigation.reset({\n    //   index: 0,\n    //   routes: [{ name: 'Dashboard' }],\n    // })\n  }\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate('LoginScreen')}/>\n      <Logo />\n      <View style={{backgroundColor:'#1d1d1d',width: '100%',padding: 26,marginBottom: 13}}>\n      <Text style={{color:'white'}}>Create Account</Text>\n      <TextInput\n        label=\"Name\"\n        returnKeyType=\"next\"\n        value={name.value}\n        onChangeText={(text) => setName({ value: text, error: '' })}\n        error={!!name.error}\n        errorText={name.error}\n      />\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <Button\n        mode=\"contained\"\n        onPress={onSignUpPressed}\n        style={{ marginTop: 24,backgroundColor:'#f65f54', }}\n      >\n        Sign Up\n      </Button>\n      </View>\n      <View style={styles.row}>\n        <Text style={{color:'white'}}>Already have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.navigate('RegisterScreen')}>\n          <Text style={styles.link}>Login</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}