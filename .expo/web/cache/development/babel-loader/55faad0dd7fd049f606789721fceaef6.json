{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Video from 'react-native-video';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { PlayButton, Time, Scrubber } from \"./VideoPlayerComponents/components\";\nimport padStart from 'lodash/padStart';\nimport MusicControl from 'react-native-music-control';\nimport VideoSettings from \"./VideoSettings\";\nimport Orientation from 'react-native-orientation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Player = function (_Component) {\n  _inherits(Player, _Component);\n\n  function Player(props) {\n    var _this;\n\n    _classCallCheck(this, Player);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Player).call(this, props));\n\n    _this._handleAppStateChange = function (nextAppState) {\n      _this.setMusicControls();\n\n      MusicControl.updatePlayback({\n        elapsedTime: _this.state.currentTime\n      });\n    };\n\n    _this.getTime = function (time) {\n      var secs = time % 60;\n      var s2 = (time - secs) / 60;\n      var mins = s2 % 60;\n      var hrs = (s2 - mins) / 60;\n      var hours = _this.addZeros(hrs) > 0 ? _this.addZeros(hrs) + \":\" : '';\n      return \"\" + hours + _this.addZeros(mins) + \":\" + _this.addZeros(secs);\n    };\n\n    _this.addZeros = function (time) {\n      return time < 10 ? \"0\" + time : time;\n    };\n\n    _this.state = {\n      resizeMode: _this.props.resizeMode,\n      paused: _this.props.paused,\n      muted: _this.props.muted,\n      volume: _this.props.volume,\n      rate: _this.props.rate,\n      isFavorite: _this.props.isFavorite,\n      isVideoSettingsOpen: _this.props.isVideoSettingsOpen || false,\n      isFullscreen: _this.props.isFullScreen || _this.props.resizeMode === 'cover' || false,\n      showTimeRemaining: true,\n      volumeTrackWidth: 0,\n      volumeFillWidth: 0,\n      seekerFillWidth: 0,\n      showControls: _this.props.showOnStart,\n      volumePosition: 0,\n      seekerPosition: 0,\n      volumeOffset: 0,\n      seekerOffset: 0,\n      seeking: false,\n      originallyPaused: false,\n      scrubbing: false,\n      loading: false,\n      currentTime: 0,\n      error: false,\n      duration: 0,\n      appState: AppState.currentState\n    };\n    _this.opts = {\n      playWhenInactive: _this.props.playWhenInactive,\n      playInBackground: _this.props.playInBackground,\n      repeat: _this.props.repeat,\n      title: _this.props.title\n    };\n    _this.events = {\n      onError: _this.props.onError || _this._onError.bind(_assertThisInitialized(_this)),\n      onBack: _this.props.onBack || _this._onBack.bind(_assertThisInitialized(_this)),\n      onEnd: _this.props.onEnd || _this._onEnd.bind(_assertThisInitialized(_this)),\n      onScreenTouch: _this._onScreenTouch.bind(_assertThisInitialized(_this)),\n      onEnterFullscreen: _this.props.onEnterFullscreen,\n      onExitFullscreen: _this.props.onExitFullscreen,\n      onShowControls: _this.props.onShowControls,\n      onHideControls: _this.props.onHideControls,\n      onLoadStart: _this._onLoadStart.bind(_assertThisInitialized(_this)),\n      onProgress: _this._onProgress.bind(_assertThisInitialized(_this)),\n      onSeek: _this._onSeek.bind(_assertThisInitialized(_this)),\n      onLoad: _this._onLoad.bind(_assertThisInitialized(_this)),\n      onPause: _this.props.onPause,\n      onPlay: _this.props.onPlay\n    };\n    _this.methods = {\n      toggleFullscreen: _this._toggleFullscreen.bind(_assertThisInitialized(_this)),\n      togglePlayPause: _this._togglePlayPause.bind(_assertThisInitialized(_this)),\n      toggleControls: _this._toggleControls.bind(_assertThisInitialized(_this)),\n      toggleTimer: _this._toggleTimer.bind(_assertThisInitialized(_this))\n    };\n    _this.player = {\n      controlTimeoutDelay: _this.props.controlTimeout || 15000,\n      volumePanResponder: PanResponder,\n      seekPanResponder: PanResponder,\n      controlTimeout: null,\n      tapActionTimeout: null,\n      volumeWidth: 150,\n      iconOffset: 0,\n      seekerWidth: 0,\n      ref: Video,\n      scrubbingTimeStep: _this.props.scrubbing || 0,\n      tapAnywhereToPause: _this.props.tapAnywhereToPause\n    };\n    MusicControl.enableControl('play', true);\n    MusicControl.enableControl('pause', true);\n    MusicControl.enableControl('nextTrack', true);\n    MusicControl.enableControl('previousTrack', true);\n    MusicControl.enableControl('changePlaybackPosition', true);\n    MusicControl.enableControl('seek', true);\n    MusicControl.enableControl('closeNotification', true, {\n      when: 'always'\n    });\n    MusicControl.enableControl('volume', true);\n    MusicControl.enableBackgroundMode(true);\n    MusicControl.updatePlayback({\n      state: MusicControl.STATE_PLAYING\n    });\n    MusicControl.on('play', function () {\n      MusicControl.updatePlayback({\n        state: MusicControl.STATE_PLAYING,\n        elapsedTime: _this.state.currentTime\n      });\n\n      _this.videoAction(false);\n    });\n    MusicControl.on('pause', function () {\n      MusicControl.updatePlayback({\n        state: MusicControl.STATE_PAUSED,\n        elapsedTime: _this.state.currentTime\n      });\n\n      _this.videoAction(true);\n    });\n    MusicControl.on('nextTrack', function () {\n      _this.props.nextMedia();\n    });\n    MusicControl.on('previousTrack', function () {\n      _this.props.previousMedia();\n    });\n    MusicControl.on('seek', function (pros) {\n      _this.seekTo(pros);\n\n      MusicControl.updatePlayback({\n        elapsedTime: pros\n      });\n    });\n    MusicControl.on('changePlaybackPosition', function (pros) {\n      MusicControl.updatePlayback({\n        elapsedTime: pros\n      });\n\n      _this.seekTo(pros);\n    });\n    var initialValue = _this.props.showOnStart ? 1 : 0;\n    _this.animations = {\n      bottomControl: {\n        marginBottom: new Animated.Value(0),\n        opacity: new Animated.Value(initialValue)\n      },\n      topControl: {\n        marginTop: new Animated.Value(0),\n        opacity: new Animated.Value(initialValue)\n      },\n      video: {\n        opacity: new Animated.Value(1)\n      },\n      loader: {\n        rotate: new Animated.Value(0),\n        MAX_VALUE: 360\n      }\n    };\n    _this.styles = {\n      videoStyle: _this.props.videoStyle || {},\n      containerStyle: _this.props.style || {}\n    };\n    return _this;\n  }\n\n  _createClass(Player, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Orientation.unlockAllOrientations();\n      var position = this.calculateVolumePositionFromVolume();\n      var state = this.state;\n      this.setVolumePosition(position);\n      state.volumeOffset = position;\n      this.mounted = true;\n      this.setState(state);\n      MusicControl.handleAudioInterruptions(true);\n      MusicControl.enableBackgroundMode(true);\n      AppState.addEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"_onLoadStart\",\n    value: function _onLoadStart() {\n      var state = this.state;\n      state.loading = true;\n      this.loadAnimation();\n      this.setState(state);\n\n      if (typeof this.props.onLoadStart === 'function') {\n        var _this$props;\n\n        (_this$props = this.props).onLoadStart.apply(_this$props, arguments);\n      }\n    }\n  }, {\n    key: \"_onLoad\",\n    value: function _onLoad() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      MusicControl.setNowPlaying({\n        title: this.props.title,\n        duration: data.duration,\n        color: 0xffffff\n      });\n      var state = this.state;\n      state.duration = data.duration;\n      state.loading = false;\n      this.setState(state);\n\n      if (state.showControls) {\n        this.setControlTimeout();\n      }\n\n      if (typeof this.props.onLoad === 'function') {\n        var _this$props2;\n\n        (_this$props2 = this.props).onLoad.apply(_this$props2, arguments);\n      }\n    }\n  }, {\n    key: \"setMusicControls\",\n    value: function setMusicControls() {\n      MusicControl.setNowPlaying({\n        title: this.props.title,\n        duration: this.state.duration,\n        color: 0xffffff\n      });\n    }\n  }, {\n    key: \"videoAction\",\n    value: function videoAction(data) {\n      this.setState({\n        paused: data\n      });\n    }\n  }, {\n    key: \"_onProgress\",\n    value: function _onProgress() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var state = this.state;\n\n      if (!state.scrubbing) {\n        state.currentTime = data.currentTime;\n\n        if (!state.seeking) {\n          var position = this.calculateSeekerPosition();\n          this.setSeekerPosition(position);\n        }\n\n        if (typeof this.props.onProgress === 'function') {\n          var _this$props3;\n\n          (_this$props3 = this.props).onProgress.apply(_this$props3, arguments);\n        }\n\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"_onSeek\",\n    value: function _onSeek() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      MusicControl.updatePlayback({\n        elapsedTime: data.currentTime\n      });\n      var state = this.state;\n\n      if (state.scrubbing) {\n        state.scrubbing = false;\n        state.currentTime = data.currentTime;\n\n        if (!state.seeking) {\n          this.setControlTimeout();\n          state.paused = state.originallyPaused;\n        }\n\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"_onEnd\",\n    value: function _onEnd() {}\n  }, {\n    key: \"_onError\",\n    value: function _onError(err) {\n      var state = this.state;\n      state.error = true;\n      state.loading = false;\n      this.setState(state);\n    }\n  }, {\n    key: \"_onScreenTouch\",\n    value: function _onScreenTouch() {\n      var _this2 = this;\n\n      if (this.player.tapActionTimeout) {\n        clearTimeout(this.player.tapActionTimeout);\n        this.player.tapActionTimeout = 0;\n        this.methods.toggleFullscreen();\n        var state = this.state;\n\n        if (state.showControls) {\n          this.resetControlTimeout();\n        }\n      } else {\n        this.player.tapActionTimeout = setTimeout(function () {\n          var state = _this2.state;\n\n          if (_this2.player.tapAnywhereToPause && state.showControls) {\n            _this2.methods.togglePlayPause();\n\n            _this2.resetControlTimeout();\n          } else {\n            _this2.methods.toggleControls();\n          }\n\n          _this2.player.tapActionTimeout = 0;\n        }, this.props.doubleTapTime);\n      }\n    }\n  }, {\n    key: \"setControlTimeout\",\n    value: function setControlTimeout() {\n      var _this3 = this;\n\n      this.player.controlTimeout = setTimeout(function () {\n        _this3._hideControls();\n      }, this.player.controlTimeoutDelay);\n    }\n  }, {\n    key: \"clearControlTimeout\",\n    value: function clearControlTimeout() {\n      clearTimeout(this.player.controlTimeout);\n    }\n  }, {\n    key: \"resetControlTimeout\",\n    value: function resetControlTimeout() {\n      this.clearControlTimeout();\n      this.setControlTimeout();\n    }\n  }, {\n    key: \"hideControlAnimation\",\n    value: function hideControlAnimation() {\n      Animated.parallel([Animated.timing(this.animations.topControl.opacity, {\n        toValue: 0,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false\n      }), Animated.timing(this.animations.topControl.marginTop, {\n        toValue: -100,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false\n      }), Animated.timing(this.animations.bottomControl.opacity, {\n        toValue: 0,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false\n      }), Animated.timing(this.animations.bottomControl.marginBottom, {\n        toValue: -100,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false\n      })]).start();\n    }\n  }, {\n    key: \"showControlAnimation\",\n    value: function showControlAnimation() {\n      Animated.parallel([Animated.timing(this.animations.topControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming\n      }), Animated.timing(this.animations.topControl.marginTop, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming\n      }), Animated.timing(this.animations.bottomControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming\n      }), Animated.timing(this.animations.bottomControl.marginBottom, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming\n      })]).start();\n    }\n  }, {\n    key: \"loadAnimation\",\n    value: function loadAnimation() {\n      if (this.state.loading) {\n        Animated.sequence([Animated.timing(this.animations.loader.rotate, {\n          toValue: this.animations.loader.MAX_VALUE,\n          duration: 1500,\n          easing: Easing.linear,\n          useNativeDriver: false\n        }), Animated.timing(this.animations.loader.rotate, {\n          toValue: 0,\n          duration: 0,\n          easing: Easing.linear,\n          useNativeDriver: false\n        })]).start(this.loadAnimation.bind(this));\n      }\n    }\n  }, {\n    key: \"_hideControls\",\n    value: function _hideControls() {\n      if (this.mounted) {\n        var state = this.state;\n        state.showControls = false;\n        this.hideControlAnimation();\n        typeof this.events.onHideControls === 'function' && this.events.onHideControls();\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"_toggleControls\",\n    value: function _toggleControls() {\n      var state = this.state;\n      state.showControls = !state.showControls;\n\n      if (state.showControls) {\n        this.showControlAnimation();\n        this.setControlTimeout();\n        typeof this.events.onShowControls === 'function' && this.events.onShowControls();\n      } else {\n        this.hideControlAnimation();\n        this.clearControlTimeout();\n        typeof this.events.onHideControls === 'function' && this.events.onHideControls();\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"_toggleFullscreen\",\n    value: function _toggleFullscreen() {\n      var state = this.state;\n      state.isFullscreen = !state.isFullscreen;\n\n      if (this.props.toggleResizeModeOnFullscreen) {\n        state.resizeMode = state.isFullscreen === true ? 'cover' : 'contain';\n      }\n\n      if (state.isFullscreen) {\n        typeof this.events.onEnterFullscreen === 'function' && this.events.onEnterFullscreen();\n      } else {\n        typeof this.events.onExitFullscreen === 'function' && this.events.onExitFullscreen();\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"_togglePlayPause\",\n    value: function _togglePlayPause() {\n      var state = this.state;\n      state.paused = !state.paused;\n\n      if (state.paused) {\n        typeof this.events.onPause === 'function' && this.events.onPause();\n        MusicControl.updatePlayback({\n          state: MusicControl.STATE_PAUSED,\n          elapsedTime: this.state.currentTime\n        });\n      } else {\n        typeof this.events.onPlay === 'function' && this.events.onPlay();\n        MusicControl.updatePlayback({\n          state: MusicControl.STATE_PLAYING,\n          elapsedTime: this.state.currentTime\n        });\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"_toggleTimer\",\n    value: function _toggleTimer() {\n      var state = this.state;\n      state.showTimeRemaining = !state.showTimeRemaining;\n      this.setState(state);\n    }\n  }, {\n    key: \"_onBack\",\n    value: function _onBack() {\n      if (this.props.navigator && this.props.navigator.pop) {\n        this.props.navigator.pop();\n      } else {\n        console.warn('Warning: _onBack requires navigator property to function. Either modify the onBack prop or pass a navigator prop');\n      }\n    }\n  }, {\n    key: \"calculateTime\",\n    value: function calculateTime() {\n      if (this.state.showTimeRemaining) {\n        var time = this.state.duration - this.state.currentTime;\n        return \"-\" + this.formatTime(time);\n      }\n\n      return this.formatTime(this.state.currentTime);\n    }\n  }, {\n    key: \"formatTime\",\n    value: function formatTime() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var symbol = this.state.showRemainingTime ? '-' : '';\n      time = Math.min(Math.max(time, 0), this.state.duration);\n      var formattedMinutes = padStart(Math.floor(time / 60).toFixed(0), 2, 0);\n      var formattedSeconds = padStart(Math.floor(time % 60).toFixed(0), 2, 0);\n      return \"\" + symbol + formattedMinutes + \":\" + formattedSeconds;\n    }\n  }, {\n    key: \"setSeekerPosition\",\n    value: function setSeekerPosition() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var state = this.state;\n      position = this.constrainToSeekerMinMax(position);\n      state.seekerFillWidth = position;\n      state.seekerPosition = position;\n\n      if (!state.seeking) {\n        state.seekerOffset = position;\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"constrainToSeekerMinMax\",\n    value: function constrainToSeekerMinMax() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (val <= 0) {\n        return 0;\n      } else if (val >= this.player.seekerWidth) {\n        return this.player.seekerWidth;\n      }\n\n      return val;\n    }\n  }, {\n    key: \"calculateSeekerPosition\",\n    value: function calculateSeekerPosition() {\n      var percent = this.state.currentTime / this.state.duration;\n      return this.player.seekerWidth * percent;\n    }\n  }, {\n    key: \"calculateTimeFromSeekerPosition\",\n    value: function calculateTimeFromSeekerPosition() {\n      var percent = this.state.seekerPosition / this.player.seekerWidth;\n      return this.state.duration * percent;\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var state = this.state;\n      state.currentTime = time;\n      this.player.ref.seek(time);\n      this.setState(state);\n    }\n  }, {\n    key: \"setVolumePosition\",\n    value: function setVolumePosition() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var state = this.state;\n      position = this.constrainToVolumeMinMax(position);\n      state.volumePosition = position + this.player.iconOffset;\n      state.volumeFillWidth = position;\n      state.volumeTrackWidth = this.player.volumeWidth - state.volumeFillWidth;\n\n      if (state.volumeFillWidth < 0) {\n        state.volumeFillWidth = 0;\n      }\n\n      if (state.volumeTrackWidth > 150) {\n        state.volumeTrackWidth = 150;\n      }\n\n      this.setState(state);\n    }\n  }, {\n    key: \"constrainToVolumeMinMax\",\n    value: function constrainToVolumeMinMax() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (val <= 0) {\n        return 0;\n      } else if (val >= this.player.volumeWidth + 9) {\n        return this.player.volumeWidth + 9;\n      }\n\n      return val;\n    }\n  }, {\n    key: \"calculateVolumeFromVolumePosition\",\n    value: function calculateVolumeFromVolumePosition() {\n      return this.state.volumePosition / this.player.volumeWidth;\n    }\n  }, {\n    key: \"calculateVolumePositionFromVolume\",\n    value: function calculateVolumePositionFromVolume() {\n      return this.player.volumeWidth * this.state.volume;\n    }\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this.initSeekPanResponder();\n      this.initVolumePanResponder();\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (this.state.paused !== nextProps.paused) {\n        this.setState({\n          paused: nextProps.paused\n        });\n      }\n\n      if (this.styles.videoStyle !== nextProps.videoStyle) {\n        this.styles.videoStyle = nextProps.videoStyle;\n      }\n\n      if (this.styles.containerStyle !== nextProps.style) {\n        this.styles.containerStyle = nextProps.style;\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      this.clearControlTimeout();\n      Orientation.lockToPortrait();\n      AppState.removeEventListener(\"change\", this._handleAppStateChange);\n    }\n  }, {\n    key: \"initSeekPanResponder\",\n    value: function initSeekPanResponder() {\n      var _this4 = this;\n\n      this.player.seekPanResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n          var state = _this4.state;\n\n          _this4.clearControlTimeout();\n\n          var position = evt.nativeEvent.locationX;\n\n          _this4.setSeekerPosition(position);\n\n          state.seeking = true;\n          state.originallyPaused = state.paused;\n          state.scrubbing = false;\n\n          if (_this4.player.scrubbingTimeStep > 0) {\n            state.paused = true;\n          }\n\n          _this4.setState(state);\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var position = _this4.state.seekerOffset + gestureState.dx;\n\n          _this4.setSeekerPosition(position);\n\n          var state = _this4.state;\n\n          if (_this4.player.scrubbingTimeStep > 0 && !state.loading && !state.scrubbing) {\n            var time = _this4.calculateTimeFromSeekerPosition();\n\n            var timeDifference = Math.abs(state.currentTime - time) * 1000;\n\n            if (time < state.duration && timeDifference >= _this4.player.scrubbingTimeStep) {\n              state.scrubbing = true;\n\n              _this4.setState(state);\n\n              setTimeout(function () {\n                _this4.player.ref.seek(time, _this4.player.scrubbingTimeStep);\n              }, 1);\n            }\n          }\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          var time = _this4.calculateTimeFromSeekerPosition();\n\n          var state = _this4.state;\n\n          if (time >= state.duration && !state.loading) {\n            state.paused = true;\n\n            _this4.events.onEnd();\n          } else if (state.scrubbing) {\n            state.seeking = false;\n          } else {\n            _this4.seekTo(time);\n\n            _this4.setControlTimeout();\n\n            state.paused = state.originallyPaused;\n            state.seeking = false;\n          }\n\n          _this4.setState(state);\n        }\n      });\n    }\n  }, {\n    key: \"initVolumePanResponder\",\n    value: function initVolumePanResponder() {\n      var _this5 = this;\n\n      this.player.volumePanResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onPanResponderGrant: function onPanResponderGrant(evt, gestureState) {\n          _this5.clearControlTimeout();\n        },\n        onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n          var state = _this5.state;\n          var position = _this5.state.volumeOffset + gestureState.dx;\n\n          _this5.setVolumePosition(position);\n\n          state.volume = _this5.calculateVolumeFromVolumePosition();\n\n          if (state.volume <= 0) {\n            state.muted = true;\n          } else {\n            state.muted = false;\n          }\n\n          _this5.setState(state);\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          var state = _this5.state;\n          state.volumeOffset = state.volumePosition;\n\n          _this5.setControlTimeout();\n\n          _this5.setState(state);\n        }\n      });\n    }\n  }, {\n    key: \"renderControl\",\n    value: function renderControl(children, callback) {\n      var _this6 = this;\n\n      var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return _jsx(TouchableHighlight, {\n        underlayColor: \"transparent\",\n        activeOpacity: 0.3,\n        onPress: function onPress() {\n          _this6.resetControlTimeout();\n\n          callback();\n        },\n        style: [styles.controls.control, style],\n        children: children\n      });\n    }\n  }, {\n    key: \"renderNullControl\",\n    value: function renderNullControl() {\n      return _jsx(View, {\n        style: [styles.controls.control]\n      });\n    }\n  }, {\n    key: \"renderCenterControls\",\n    value: function renderCenterControls() {\n      var _this7 = this;\n\n      return _jsx(Animated.View, {\n        style: [styles.controls.top, {\n          flex: 1,\n          justifyContent: 'center',\n          opacity: this.animations.topControl.opacity,\n          backgroundColor: 'rgba(12,34,56,0.8)'\n        }],\n        children: this.state.showControls ? _jsx(PlayButton, {\n          duration: this.state.duration,\n          onPress: function onPress() {\n            _this7.methods.togglePlayPause();\n          },\n          onPressForward: function onPressForward() {\n            _this7.seekTo(_this7.state.currentTime + 5);\n          },\n          onPressBackward: function onPressBackward() {\n            _this7.seekTo(_this7.state.currentTime < 5 ? _this7.state.currentTime : _this7.state.currentTime - 5);\n          },\n          paused: this.state.paused\n        }) : null\n      });\n    }\n  }, {\n    key: \"renderTopControls\",\n    value: function renderTopControls() {\n      var _this8 = this;\n\n      return Dimensions.get('window').height > Dimensions.get('window').width ? _jsx(Animated.View, {\n        style: [styles.controls.top, {\n          opacity: this.animations.topControl.opacity,\n          marginTop: this.animations.topControl.marginTop,\n          backgroundColor: 'rgba(12,34,56,0.8)'\n        }],\n        children: _jsxs(SafeAreaView, {\n          style: styles.topControls.container,\n          children: [_jsxs(View, {\n            style: styles.topControls.row,\n            children: [_jsx(View, {\n              style: [styles.topControls.rowView, {\n                flex: 1\n              }],\n              children: _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  _this8.props.backToList();\n                },\n                hitSlop: styles.topControls.backHitSlop,\n                children: _jsx(Image, {\n                  style: styles.topControls.backIcon,\n                  source: require(\"./VideoPlayerComponents/components/images/back_white.png\")\n                })\n              })\n            }), _jsxs(View, {\n              style: styles.topControls.rowView,\n              children: [this.props.isFavoriteShow ? _jsx(View, {\n                style: styles.topControls.btnContainer,\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this8.props.favorite();\n                  },\n                  hitSlop: styles.topControls.commonHitSlop,\n                  children: _jsx(Image, {\n                    style: styles.topControls.favIcon,\n                    source: this.props.isFavorite ? require(\"./VideoPlayerComponents/components/images/favourite.png\") : require(\"./VideoPlayerComponents/components/images/unfavourite.png\")\n                  })\n                })\n              }) : null, this.props.isShareShow ? _jsx(View, {\n                style: styles.topControls.btnContainer,\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this8.props.share();\n                  },\n                  hitSlop: styles.topControls.commonHitSlop,\n                  children: _jsx(Image, {\n                    style: styles.topControls.shareIcon,\n                    source: require(\"./VideoPlayerComponents/components/images/share.png\")\n                  })\n                })\n              }) : null, this.props.isSettingShow ? _jsx(View, {\n                style: styles.topControls.btnContainer,\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this8.props.onMorePress();\n                  },\n                  hitSlop: styles.topControls.commonHitSlop,\n                  children: _jsx(Image, {\n                    style: {\n                      marginRight: 15\n                    },\n                    source: require(\"./VideoPlayerComponents/components/images/icon_Settings.png\")\n                  })\n                })\n              }) : null]\n            })]\n          }), _jsxs(View, {\n            style: {\n              marginBottom: 10\n            },\n            children: [_jsx(Text, {\n              style: [styles.topControls.title],\n              numberOfLines: 1,\n              ellipsizeMode: \"tail\",\n              children: this.props.title\n            }), _jsx(Text, {\n              style: styles.topControls.timeText,\n              children: this.getTime(parseInt(this.state.duration ? this.state.duration : 0, 10))\n            })]\n          })]\n        })\n      }) : _jsx(Animated.View, {\n        style: [styles.controls.top, {\n          opacity: this.animations.topControl.opacity,\n          marginTop: this.animations.topControl.marginTop,\n          backgroundColor: 'rgba(12,34,56,0.8)'\n        }],\n        children: _jsx(View, {\n          style: styles.topControls.container,\n          children: _jsxs(View, {\n            style: styles.topControls.row,\n            children: [_jsxs(View, {\n              style: [styles.topControls.rowView, {\n                flex: 1\n              }],\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  _this8.props.backToList();\n                },\n                hitSlop: styles.topControls.backHitSlop,\n                children: _jsx(Image, {\n                  style: styles.topControls.backIcon,\n                  source: require(\"./VideoPlayerComponents/components/images/back_white.png\")\n                })\n              }), _jsx(Text, {\n                style: [styles.topControls.title],\n                numberOfLines: 1,\n                ellipsizeMode: \"tail\",\n                children: this.props.title\n              }), _jsx(Text, {\n                style: styles.topControls.landscapeTitle,\n                children: this.getTime(parseInt(this.state.duration, 10))\n              })]\n            }), _jsxs(View, {\n              style: styles.topControls.rowView,\n              children: [this.props.isFavoriteShow ? _jsx(View, {\n                style: styles.topControls.btnContainer,\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this8.props.favorite();\n                  },\n                  hitSlop: styles.topControls.commonHitSlop,\n                  children: _jsx(Image, {\n                    style: styles.topControls.favIcon,\n                    source: this.props.isFavorite ? require(\"./VideoPlayerComponents/components/images/favourite.png\") : require(\"./VideoPlayerComponents/components/images/unfavourite.png\")\n                  })\n                })\n              }) : null, this.props.isShareShow ? _jsx(View, {\n                style: styles.topControls.btnContainer,\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this8.props.share();\n                  },\n                  hitSlop: styles.topControls.commonHitSlop,\n                  children: _jsx(Image, {\n                    style: styles.topControls.shareIcon,\n                    source: require(\"./VideoPlayerComponents/components/images/share.png\")\n                  })\n                })\n              }) : null, this.props.isSettingShow ? _jsx(View, {\n                style: styles.topControls.btnContainer,\n                children: _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    _this8.props.onMorePress();\n                  },\n                  hitSlop: styles.topControls.commonHitSlop,\n                  children: _jsx(Image, {\n                    style: {\n                      marginRight: 15\n                    },\n                    source: require(\"./VideoPlayerComponents/components/images/icon_Settings.png\")\n                  })\n                })\n              }) : null]\n            })]\n          })\n        })\n      });\n    }\n  }, {\n    key: \"seekTo\",\n    value: function seekTo() {\n      var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var state = this.state;\n      state.currentTime = time;\n      this.player.ref.seek(time);\n      this.setState(state);\n    }\n  }, {\n    key: \"onSeekRelease\",\n    value: function onSeekRelease(percent) {\n      var _this9 = this;\n\n      var seconds = percent * this.state.duration;\n      this.setState({\n        currentTime: percent,\n        seeking: false\n      }, function () {\n        _this9.seekTo(seconds);\n      });\n    }\n  }, {\n    key: \"renderBack\",\n    value: function renderBack() {\n      return this.renderControl(_jsx(Image, {\n        source: require(\"./VideoPlayerComponents/components/images/back.png\"),\n        style: styles.controls.back\n      }), this.events.onBack, styles.controls.back);\n    }\n  }, {\n    key: \"renderVolume\",\n    value: function renderVolume() {\n      return _jsxs(View, {\n        style: styles.volume.container,\n        children: [_jsx(View, {\n          style: [styles.volume.fill, {\n            width: this.state.volumeFillWidth\n          }]\n        }), _jsx(View, {\n          style: [styles.volume.track, {\n            width: this.state.volumeTrackWidth\n          }]\n        }), _jsx(View, _objectSpread({\n          style: [styles.volume.handle, {\n            left: this.state.volumePosition\n          }]\n        }, this.player.volumePanResponder.panHandlers, {\n          children: _jsx(Image, {\n            style: styles.volume.icon,\n            source: require(\"./VideoPlayerComponents/components/images/volume.png\")\n          })\n        }))]\n      });\n    }\n  }, {\n    key: \"renderFullscreen\",\n    value: function renderFullscreen() {\n      var source = this.state.isFullscreen === true ? require(\"./VideoPlayerComponents/components/images/shrink.png\") : require(\"./VideoPlayerComponents/components/images/expand.png\");\n      return this.renderControl(_jsx(Image, {\n        source: source\n      }), this.methods.toggleFullscreen, styles.controls.fullscreen);\n    }\n  }, {\n    key: \"renderBottomControls\",\n    value: function renderBottomControls() {\n      var _this10 = this;\n\n      var currentTime = 0;\n      var duration = 0;\n      var progress = 0;\n\n      if (this.state.currentTime && this.state.duration) {\n        currentTime = this.state.currentTime;\n        duration = this.state.duration;\n        progress = this.state.currentTime / this.state.duration;\n      }\n\n      return _jsx(Animated.View, {\n        style: [styles.controls.bottom, {\n          opacity: this.animations.bottomControl.opacity,\n          marginBottom: this.animations.bottomControl.marginBottom,\n          backgroundColor: 'rgba(12,34,56,0.8)',\n          justifyContent: 'flex-start'\n        }],\n        children: _jsxs(SafeAreaView, {\n          style: styles.topControls.bottomControlsView,\n          children: [_jsx(View, {\n            style: {\n              width: '100%'\n            },\n            children: _jsx(Time, {\n              time: currentTime,\n              completeDuration: duration\n            })\n          }), _jsx(View, {\n            style: styles.topControls.bottomSliderView,\n            children: _jsx(Scrubber, {\n              onSeek: function onSeek(pos) {\n                _this10._onSeek(pos);\n              },\n              onSeekRelease: function onSeekRelease(pos) {\n                _this10.onSeekRelease(pos);\n              },\n              progress: progress,\n              theme: {\n                scrubberThumb: 'rgba(247,109,28,1)',\n                scrubberBar: 'rgba(247,109,28,1)'\n              },\n              back: function back() {\n                _this10.props.back();\n              },\n              next: function next() {\n                _this10.props.next();\n              },\n              isRepeat: this.props.isRepeat,\n              isShuffle: this.props.isShuffle,\n              isAutoPlay: this.props.isAutoPlay,\n              repeat: function repeat() {\n                _this10.props.repeat();\n              },\n              shuffle: function shuffle() {\n                _this10.props.shuffle();\n              },\n              autoPlayFunc: function autoPlayFunc() {\n                _this10.props.autoPlayFunc();\n              },\n              isSplashScreen: false\n            })\n          })]\n        })\n      });\n    }\n  }, {\n    key: \"renderSeekbar\",\n    value: function renderSeekbar() {\n      var _this11 = this;\n\n      return _jsxs(View, _objectSpread({\n        style: styles.seekbar.container,\n        collapsable: false\n      }, this.player.seekPanResponder.panHandlers, {\n        children: [_jsx(View, {\n          style: styles.seekbar.track,\n          onLayout: function onLayout(event) {\n            return _this11.player.seekerWidth = event.nativeEvent.layout.width;\n          },\n          pointerEvents: 'none',\n          children: _jsx(View, {\n            style: [styles.seekbar.fill, {\n              width: this.state.seekerFillWidth,\n              backgroundColor: this.props.seekColor || '#FFF'\n            }],\n            pointerEvents: 'none'\n          })\n        }), _jsx(View, {\n          style: [styles.seekbar.handle, {\n            left: this.state.seekerPosition\n          }],\n          pointerEvents: 'none',\n          children: _jsx(View, {\n            style: [styles.seekbar.circle, {\n              backgroundColor: this.props.seekColor || '#FFF'\n            }],\n            pointerEvents: 'none'\n          })\n        })]\n      }));\n    }\n  }, {\n    key: \"renderPlayPause\",\n    value: function renderPlayPause() {\n      var source = this.state.paused === true ? require(\"./VideoPlayerComponents/components/images/Play.png\") : require(\"./VideoPlayerComponents/components/images/pause.png\");\n      return this.renderControl(_jsx(Image, {\n        source: source\n      }), this.methods.togglePlayPause, styles.controls.playPause);\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      if (this.opts.title) {\n        return _jsx(View, {\n          style: [styles.controls.control, styles.controls.title],\n          children: _jsx(Text, {\n            style: [styles.controls.text, styles.controls.titleText],\n            numberOfLines: 1,\n            children: this.opts.title || ''\n          })\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderTimer\",\n    value: function renderTimer() {\n      return this.renderControl(_jsx(Text, {\n        style: styles.controls.timerText,\n        children: this.calculateTime()\n      }), this.methods.toggleTimer, styles.controls.timer);\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      if (this.state.loading) {\n        return _jsx(View, {\n          style: styles.loader.container,\n          children: _jsx(Animated.Image, {\n            source: require(\"./VideoPlayerComponents/components/images/loader-icon.png\"),\n            style: [styles.loader.icon, {\n              transform: [{\n                rotate: this.animations.loader.rotate.interpolate({\n                  inputRange: [0, 360],\n                  outputRange: ['0deg', '360deg']\n                })\n              }]\n            }]\n          })\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError() {\n      if (this.state.error) {\n        return _jsxs(View, {\n          style: styles.error.container,\n          children: [_jsx(Image, {\n            source: require(\"./VideoPlayerComponents/components/images/error-icon.png\"),\n            style: styles.error.icon\n          }), _jsx(Text, {\n            style: styles.error.text,\n            children: \"Video unavailable\"\n          })]\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this12 = this;\n\n      return _jsx(TouchableWithoutFeedback, {\n        onPress: this.events.onScreenTouch,\n        style: [styles.player.container, this.styles.containerStyle],\n        children: _jsxs(View, {\n          style: [styles.player.container, this.styles.containerStyle],\n          children: [this.props.isVideoSettingsOpen ? _jsx(VideoSettings, {\n            isOpen: this.props.isVideoSettingsOpen,\n            onVideoSettingsClose: this.props.onVideoSettingsClose,\n            qualityArray: this.props.qualityArray,\n            boxSelected: this.props.boxSelected,\n            IsQualityArray: this.props.IsQualityArray,\n            IsAutoConnectionStatus: this.props.IsAutoConnectionStatus\n          }) : null, _jsx(Video, _objectSpread({}, this.props, {\n            ref: function ref(videoPlayer) {\n              return _this12.player.ref = videoPlayer;\n            },\n            resizeMode: 'contain',\n            volume: this.state.volume,\n            paused: this.state.paused,\n            muted: this.state.muted,\n            rate: this.state.rate,\n            onLoadStart: this.events.onLoadStart,\n            onProgress: this.events.onProgress,\n            onError: this.events.onError,\n            fullscreenOrientation: 'all',\n            style: [styles.player.video, this.styles.videoStyle],\n            onLoad: this.events.onLoad,\n            onEnd: this.events.onEnd,\n            onSeek: this.events.onSeek,\n            style: [styles.player.video, this.styles.videoStyle],\n            source: this.props.source\n          })), this.renderError(), this.renderLoader(), this.renderTopControls(), this.renderCenterControls(), this.renderBottomControls()]\n        })\n      });\n    }\n  }]);\n\n  return Player;\n}(Component);\n\nPlayer.defaultProps = {\n  toggleResizeModeOnFullscreen: true,\n  controlAnimationTiming: 500,\n  doubleTapTime: 130,\n  playInBackground: false,\n  playWhenInactive: false,\n  resizeMode: 'contain',\n  isFullscreen: false,\n  showOnStart: true,\n  paused: false,\n  repeat: false,\n  muted: false,\n  volume: 1,\n  title: '',\n  rate: 1\n};\nexport { Player as default };\nvar styles = {\n  player: StyleSheet.create({\n    container: {\n      overflow: 'hidden',\n      backgroundColor: '#000',\n      flex: 1,\n      alignSelf: 'stretch',\n      justifyContent: 'space-between'\n    },\n    video: {\n      overflow: 'hidden',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }),\n  error: StyleSheet.create({\n    container: {\n      backgroundColor: 'rgba( 0, 0, 0, 0.5 )',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    icon: {\n      marginBottom: 16\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#f27474'\n    }\n  }),\n  topControls: StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: Dimensions.get('window').height > Dimensions.get('window').width ? 'space-between' : 'flex-start',\n      paddingHorizontal: 5\n    },\n    row: {\n      flexDirection: 'row',\n      height: 50\n    },\n    rowView: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    backIcon: {\n      margin: 7,\n      height: 22\n    },\n    favIcon: {\n      marginRight: 15,\n      height: 25,\n      width: 25\n    },\n    shareIcon: {\n      marginRight: 15,\n      height: 22,\n      width: 22\n    },\n    title: {\n      marginLeft: 10,\n      fontSize: 17,\n      fontWeight: '500',\n      color: 'white'\n    },\n    landscapeTitle: {\n      fontWeight: '600',\n      marginLeft: 15,\n      marginRight: 5,\n      fontSize: 17,\n      color: '#ffff'\n    },\n    timeText: {\n      fontWeight: '600',\n      marginLeft: 10,\n      marginRight: 5,\n      marginTop: 10,\n      fontSize: 17,\n      color: '#ffff'\n    },\n    btnContainer: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    commonHitSlop: {\n      top: 5,\n      bottom: 5,\n      left: 5,\n      right: 5\n    },\n    backHitSlop: {\n      top: 10,\n      bottom: 10,\n      left: 10,\n      right: 10\n    },\n    bottomControlsView: {\n      alignSelf: 'stretch',\n      paddingLeft: 5,\n      paddingRight: 5\n    },\n    bottomSliderView: {\n      alignSelf: 'stretch',\n      alignItems: 'flex-end',\n      paddingLeft: 5,\n      paddingRight: 5,\n      flexDirection: 'row',\n      marginHorizontal: 15\n    }\n  }),\n  loader: StyleSheet.create({\n    container: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }),\n  controls: StyleSheet.create({\n    row: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: null,\n      width: null\n    },\n    column: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: null,\n      width: null\n    },\n    vignette: {\n      resizeMode: 'stretch'\n    },\n    control: {\n      padding: 16\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 14,\n      textAlign: 'center'\n    },\n    pullRight: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    top: {\n      flex: 1,\n      alignItems: 'stretch',\n      justifyContent: 'flex-start'\n    },\n    bottom: {\n      alignItems: 'stretch',\n      flex: 1,\n      justifyContent: 'flex-end'\n    },\n    topControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexDirection: 'row',\n      width: null,\n      margin: 12,\n      marginBottom: 18\n    },\n    bottomControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginLeft: 12,\n      marginRight: 12,\n      marginBottom: 0\n    },\n    volume: {\n      flexDirection: 'row'\n    },\n    fullscreen: {\n      flexDirection: 'row'\n    },\n    playPause: {\n      position: 'relative',\n      width: 80,\n      zIndex: 0\n    },\n    title: {\n      alignItems: 'center',\n      flex: 0.6,\n      flexDirection: 'column',\n      padding: 0\n    },\n    titleText: {\n      textAlign: 'center'\n    },\n    timer: {\n      width: 80\n    },\n    timerText: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 11,\n      textAlign: 'right'\n    }\n  }),\n  volume: StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      flexDirection: 'row',\n      height: 1,\n      marginLeft: 20,\n      marginRight: 20,\n      width: 150\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      marginLeft: 7\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1\n    },\n    handle: {\n      position: 'absolute',\n      marginTop: -24,\n      marginLeft: -24,\n      padding: 16\n    },\n    icon: {\n      marginLeft: 7\n    }\n  }),\n  seekbar: StyleSheet.create({\n    container: {\n      alignSelf: 'stretch',\n      height: 28,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      position: 'relative',\n      top: 14,\n      width: '100%'\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1,\n      width: '100%'\n    },\n    handle: {\n      position: 'absolute',\n      marginLeft: -7,\n      height: 28,\n      width: 28\n    },\n    circle: {\n      borderRadius: 12,\n      position: 'relative',\n      top: 8,\n      left: 8,\n      height: 12,\n      width: 12\n    }\n  })\n};","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/node_modules/react-native-video-players/src/Player.js"],"names":["React","Component","Video","PlayButton","Time","Scrubber","padStart","MusicControl","VideoSettings","Orientation","Player","props","_handleAppStateChange","nextAppState","setMusicControls","updatePlayback","elapsedTime","state","currentTime","getTime","time","secs","s2","mins","hrs","hours","addZeros","resizeMode","paused","muted","volume","rate","isFavorite","isVideoSettingsOpen","isFullscreen","isFullScreen","showTimeRemaining","volumeTrackWidth","volumeFillWidth","seekerFillWidth","showControls","showOnStart","volumePosition","seekerPosition","volumeOffset","seekerOffset","seeking","originallyPaused","scrubbing","loading","error","duration","appState","AppState","currentState","opts","playWhenInactive","playInBackground","repeat","title","events","onError","_onError","bind","onBack","_onBack","onEnd","_onEnd","onScreenTouch","_onScreenTouch","onEnterFullscreen","onExitFullscreen","onShowControls","onHideControls","onLoadStart","_onLoadStart","onProgress","_onProgress","onSeek","_onSeek","onLoad","_onLoad","onPause","onPlay","methods","toggleFullscreen","_toggleFullscreen","togglePlayPause","_togglePlayPause","toggleControls","_toggleControls","toggleTimer","_toggleTimer","player","controlTimeoutDelay","controlTimeout","volumePanResponder","PanResponder","seekPanResponder","tapActionTimeout","volumeWidth","iconOffset","seekerWidth","ref","scrubbingTimeStep","tapAnywhereToPause","enableControl","when","enableBackgroundMode","STATE_PLAYING","on","videoAction","STATE_PAUSED","nextMedia","previousMedia","pros","seekTo","initialValue","animations","bottomControl","marginBottom","Animated","Value","opacity","topControl","marginTop","video","loader","rotate","MAX_VALUE","styles","videoStyle","containerStyle","style","unlockAllOrientations","position","calculateVolumePositionFromVolume","setVolumePosition","mounted","setState","handleAudioInterruptions","addEventListener","loadAnimation","arguments","data","setNowPlaying","color","setControlTimeout","calculateSeekerPosition","setSeekerPosition","err","clearTimeout","resetControlTimeout","setTimeout","doubleTapTime","_hideControls","clearControlTimeout","parallel","timing","toValue","controlAnimationTiming","useNativeDriver","start","sequence","easing","Easing","linear","hideControlAnimation","showControlAnimation","toggleResizeModeOnFullscreen","navigator","pop","console","warn","formatTime","symbol","showRemainingTime","Math","min","max","formattedMinutes","floor","toFixed","formattedSeconds","constrainToSeekerMinMax","val","percent","seek","constrainToVolumeMinMax","initSeekPanResponder","initVolumePanResponder","nextProps","lockToPortrait","removeEventListener","create","onStartShouldSetPanResponder","evt","gestureState","onMoveShouldSetPanResponder","onPanResponderGrant","nativeEvent","locationX","onPanResponderMove","dx","calculateTimeFromSeekerPosition","timeDifference","abs","onPanResponderRelease","calculateVolumeFromVolumePosition","children","callback","controls","control","top","flex","justifyContent","backgroundColor","Dimensions","get","height","width","topControls","container","row","rowView","backToList","backHitSlop","backIcon","require","isFavoriteShow","btnContainer","favorite","commonHitSlop","favIcon","isShareShow","share","shareIcon","isSettingShow","onMorePress","marginRight","timeText","parseInt","landscapeTitle","seconds","renderControl","back","fill","track","handle","left","panHandlers","icon","source","fullscreen","progress","bottom","bottomControlsView","bottomSliderView","pos","onSeekRelease","scrubberThumb","scrubberBar","next","isRepeat","isShuffle","isAutoPlay","shuffle","autoPlayFunc","seekbar","event","layout","seekColor","circle","playPause","text","titleText","timerText","calculateTime","timer","transform","interpolate","inputRange","outputRange","onVideoSettingsClose","qualityArray","boxSelected","IsQualityArray","IsAutoConnectionStatus","videoPlayer","renderError","renderLoader","renderTopControls","renderCenterControls","renderBottomControls","defaultProps","StyleSheet","overflow","alignSelf","right","alignItems","paddingHorizontal","flexDirection","margin","marginLeft","fontSize","fontWeight","paddingLeft","paddingRight","marginHorizontal","column","vignette","padding","textAlign","pullRight","topControlGroup","bottomControlGroup","zIndex","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Video from 'react-native-video';\nimport {\n  TouchableWithoutFeedback,\n  TouchableHighlight,\n  TouchableOpacity,\n  ImageBackground,\n  PanResponder,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  Easing,\n  Image,\n  View,\n  Dimensions,\n  Text,\n  AppState\n} from 'react-native';\nimport { PlayButton, Time, Scrubber } from './VideoPlayerComponents/components';\nimport padStart from 'lodash/padStart';\nimport MusicControl from 'react-native-music-control';\nimport VideoSettings from './VideoSettings';\nimport Orientation from 'react-native-orientation';\n\nexport default class Player extends Component {\n  static defaultProps = {\n    toggleResizeModeOnFullscreen: true,\n    controlAnimationTiming: 500,\n    doubleTapTime: 130,\n    playInBackground: false,\n    playWhenInactive: false,\n    resizeMode: 'contain',\n    isFullscreen: false,\n    showOnStart: true,\n    paused: false,\n    repeat: false,\n    muted: false,\n    volume: 1,\n    title: '',\n    rate: 1,\n  };\n\n  constructor(props) {\n    super(props);\n\n    /**\n     * All of our values that are updated by the\n     * methods and listeners in this class\n     */\n    this.state = {\n      // Video\n      resizeMode: this.props.resizeMode,\n      paused: this.props.paused,\n      muted: this.props.muted,\n      volume: this.props.volume,\n      rate: this.props.rate,\n      isFavorite: this.props.isFavorite,\n      isVideoSettingsOpen: this.props.isVideoSettingsOpen || false,\n      isFullscreen:\n        this.props.isFullScreen || this.props.resizeMode === 'cover' || false,\n      showTimeRemaining: true,\n      volumeTrackWidth: 0,\n      volumeFillWidth: 0,\n      seekerFillWidth: 0,\n      showControls: this.props.showOnStart,\n      volumePosition: 0,\n      seekerPosition: 0,\n      volumeOffset: 0,\n      seekerOffset: 0,\n      seeking: false,\n      originallyPaused: false,\n      scrubbing: false,\n      loading: false,\n      currentTime: 0,\n      error: false,\n      duration: 0,\n      appState: AppState.currentState\n    };\n\n    /**\n     * Any options that can be set at init.\n     */\n    this.opts = {\n      playWhenInactive: this.props.playWhenInactive,\n      playInBackground: this.props.playInBackground,\n      repeat: this.props.repeat,\n      title: this.props.title,\n    };\n\n    /**\n     * Our app listeners and associated methods\n     */\n    this.events = {\n      onError: this.props.onError || this._onError.bind(this),\n      onBack: this.props.onBack || this._onBack.bind(this),\n      onEnd: this.props.onEnd || this._onEnd.bind(this),\n      onScreenTouch: this._onScreenTouch.bind(this),\n      onEnterFullscreen: this.props.onEnterFullscreen,\n      onExitFullscreen: this.props.onExitFullscreen,\n      onShowControls: this.props.onShowControls,\n      onHideControls: this.props.onHideControls,\n      onLoadStart: this._onLoadStart.bind(this),\n      onProgress: this._onProgress.bind(this),\n      onSeek: this._onSeek.bind(this),\n      onLoad: this._onLoad.bind(this),\n      onPause: this.props.onPause,\n      onPlay: this.props.onPlay,\n    };\n\n    /**\n     * Functions used throughout the application\n     */\n    this.methods = {\n      toggleFullscreen: this._toggleFullscreen.bind(this),\n      togglePlayPause: this._togglePlayPause.bind(this),\n      toggleControls: this._toggleControls.bind(this),\n      toggleTimer: this._toggleTimer.bind(this),\n    };\n\n    /**\n     * Player information\n     */\n    this.player = {\n      controlTimeoutDelay: this.props.controlTimeout || 15000,\n      volumePanResponder: PanResponder,\n      seekPanResponder: PanResponder,\n      controlTimeout: null,\n      tapActionTimeout: null,\n      volumeWidth: 150,\n      iconOffset: 0,\n      seekerWidth: 0,\n      ref: Video,\n      scrubbingTimeStep: this.props.scrubbing || 0,\n      tapAnywhereToPause: this.props.tapAnywhereToPause,\n    };\n\n\n\n    MusicControl.enableControl('play', true);\n    MusicControl.enableControl('pause', true);\n    MusicControl.enableControl('nextTrack', true);\n    MusicControl.enableControl('previousTrack', true);\n\n    // Changing track position on lockscreen\n    MusicControl.enableControl('changePlaybackPosition', true);\n\n    MusicControl.enableControl('seek', true); // Android only\n    MusicControl.enableControl('closeNotification', true, { when: 'always' });\n    MusicControl.enableControl('volume', true); // Only affected when remoteVolume is enabled\n    MusicControl.enableBackgroundMode(true);\n\n    MusicControl.updatePlayback({\n      state: MusicControl.STATE_PLAYING,\n    });\n    MusicControl.on('play', () => {\n      MusicControl.updatePlayback({\n        state: MusicControl.STATE_PLAYING,\n        elapsedTime: this.state.currentTime,\n      });\n      this.videoAction(false);\n    });\n\n    MusicControl.on('pause', () => {\n      MusicControl.updatePlayback({\n        state: MusicControl.STATE_PAUSED,\n        elapsedTime: this.state.currentTime,\n      });\n      this.videoAction(true);\n    });\n    MusicControl.on('nextTrack', () => {\n      this.props.nextMedia();\n    });\n\n    MusicControl.on('previousTrack', () => {\n      this.props.previousMedia();\n    });\n\n    MusicControl.on('seek', (pros) => {\n      this.seekTo(pros);\n      MusicControl.updatePlayback({\n        //state: MusicControl.STATE_PLAYING,\n        elapsedTime: pros\n      })\n    });\n\n    MusicControl.on('changePlaybackPosition', (pros) => {\n      MusicControl.updatePlayback({\n        //state: MusicControl.STATE_PLAYING,\n        elapsedTime: pros\n      })\n      this.seekTo(pros);\n    });\n\n    const initialValue = this.props.showOnStart ? 1 : 0;\n\n    this.animations = {\n      bottomControl: {\n        marginBottom: new Animated.Value(0),\n        opacity: new Animated.Value(initialValue),\n      },\n      topControl: {\n        marginTop: new Animated.Value(0),\n        opacity: new Animated.Value(initialValue),\n      },\n      video: {\n        opacity: new Animated.Value(1),\n      },\n      loader: {\n        rotate: new Animated.Value(0),\n        MAX_VALUE: 360,\n      },\n    };\n\n    /**\n     * Various styles that be added...\n     */\n    this.styles = {\n      videoStyle: this.props.videoStyle || {},\n      containerStyle: this.props.style || {},\n    };\n  }\n  componentDidMount() {\n    Orientation.unlockAllOrientations();\n\n    const position = this.calculateVolumePositionFromVolume();\n    let state = this.state;\n    this.setVolumePosition(position);\n    state.volumeOffset = position;\n    this.mounted = true;\n\n    this.setState(state);\n\n    MusicControl.handleAudioInterruptions(true);\n    MusicControl.enableBackgroundMode(true);\n\n    AppState.addEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  _handleAppStateChange = (nextAppState) => {\n    this.setMusicControls();\n    MusicControl.updatePlayback({\n      // state: MusicControl.STATE_PAUSED,\n      elapsedTime: this.state.currentTime,\n    });\n  };\n\n  _onLoadStart() {\n    let state = this.state;\n    state.loading = true;\n    this.loadAnimation();\n    this.setState(state);\n\n    if (typeof this.props.onLoadStart === 'function') {\n      this.props.onLoadStart(...arguments);\n    }\n  }\n\n  /**\n   * When load is finished we hide the load icon\n   * and hide the controls. We also set the\n   * video duration.\n   *\n   * @param {object} data The video meta data\n   */\n  _onLoad(data = {}) {\n    MusicControl.setNowPlaying({\n      title: this.props.title,\n      // artwork: 'https://i.imgur.com/e1cpwdo.png', // URL or RN's image require()\n      // artist: 'Michael Jackson',\n      duration: data.duration, // (Seconds)\n      color: 0xffffff, // Android Only - Notification Color\n    })\n\n    let state = this.state;\n\n    state.duration = data.duration;\n    state.loading = false;\n    this.setState(state);\n\n    if (state.showControls) {\n      this.setControlTimeout();\n    }\n\n    if (typeof this.props.onLoad === 'function') {\n      this.props.onLoad(...arguments);\n    }\n  }\n\n  setMusicControls() {\n    MusicControl.setNowPlaying({\n      title: this.props.title,\n      // artwork: 'https://i.imgur.com/e1cpwdo.png', // URL or RN's image require()\n      // artist: 'Michael Jackson',\n      duration: this.state.duration,\n      color: 0xffffff, // Android Only - Notification Color\n    })\n  }\n\n  /**\n   * For onprogress we fire listeners that\n   * update our seekbar and timer.\n   *\n   * @param {object} data The video meta data\n   */\n  videoAction(data) {\n    this.setState({ paused: data });\n  }\n  _onProgress(data = {}) {\n    let state = this.state;\n    if (!state.scrubbing) {\n      state.currentTime = data.currentTime;\n\n      if (!state.seeking) {\n        const position = this.calculateSeekerPosition();\n        this.setSeekerPosition(position);\n      }\n\n      if (typeof this.props.onProgress === 'function') {\n        this.props.onProgress(...arguments);\n      }\n\n      this.setState(state);\n    }\n  }\n\n  /**\n   * For onSeek we clear scrubbing if set.\n   *\n   * @param {object} data The video meta data\n   */\n  _onSeek(data = {}) {\n    MusicControl.updatePlayback({\n      // state: MusicControl.STATE_PAUSED,\n      elapsedTime: data.currentTime,\n    });\n\n    let state = this.state;\n    if (state.scrubbing) {\n      state.scrubbing = false;\n      state.currentTime = data.currentTime;\n\n      // Seeking may be false here if the user released the seek bar while the player was still processing\n      // the last seek command. In this case, perform the steps that have been postponed.\n      if (!state.seeking) {\n        this.setControlTimeout();\n        state.paused = state.originallyPaused;\n      }\n\n      this.setState(state);\n    }\n  }\n\n  /**\n   * It is suggested that you override this\n   * command so your app knows what to do.\n   * Either close the video or go to a\n   * new page.\n   */\n  _onEnd() { }\n\n  /**\n   * Set the error state to true which then\n   * changes our renderError function\n   *\n   * @param {object} err  Err obj returned from <Video> component\n   */\n  _onError(err) {\n    let state = this.state;\n    state.error = true;\n    state.loading = false;\n\n    this.setState(state);\n  }\n\n  /**\n   * This is a single and double tap listener\n   * when the user taps the screen anywhere.\n   * One tap toggles controls and/or toggles pause,\n   * two toggles fullscreen mode.\n   */\n  _onScreenTouch() {\n    if (this.player.tapActionTimeout) {\n      clearTimeout(this.player.tapActionTimeout);\n      this.player.tapActionTimeout = 0;\n      this.methods.toggleFullscreen();\n      const state = this.state;\n      if (state.showControls) {\n        this.resetControlTimeout();\n      }\n    } else {\n      this.player.tapActionTimeout = setTimeout(() => {\n        const state = this.state;\n        if (this.player.tapAnywhereToPause && state.showControls) {\n          this.methods.togglePlayPause();\n          this.resetControlTimeout();\n        } else {\n          this.methods.toggleControls();\n        }\n        this.player.tapActionTimeout = 0;\n      }, this.props.doubleTapTime);\n    }\n  }\n\n  /**\n    | -------------------------------------------------------\n    | Methods\n    | -------------------------------------------------------\n    |\n    | These are all of our functions that interact with\n    | various parts of the class. Anything from\n    | calculating time remaining in a video\n    | to handling control operations.\n    |\n    */\n\n  /**\n   * Set a timeout when the controls are shown\n   * that hides them after a length of time.\n   * Default is 15s\n   */\n  setControlTimeout() {\n    this.player.controlTimeout = setTimeout(() => {\n      this._hideControls();\n    }, this.player.controlTimeoutDelay);\n  }\n\n  /**\n   * Clear the hide controls timeout.\n   */\n  clearControlTimeout() {\n    clearTimeout(this.player.controlTimeout);\n  }\n\n  /**\n   * Reset the timer completely\n   */\n  resetControlTimeout() {\n    this.clearControlTimeout();\n    this.setControlTimeout();\n  }\n\n  /**\n   * Animation to hide controls. We fade the\n   * display to 0 then move them off the\n   * screen so they're not interactable\n   */\n  hideControlAnimation() {\n    Animated.parallel([\n      Animated.timing(this.animations.topControl.opacity, {\n        toValue: 0,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.animations.topControl.marginTop, {\n        toValue: -100,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.animations.bottomControl.opacity, {\n        toValue: 0,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.animations.bottomControl.marginBottom, {\n        toValue: -100,\n        duration: this.props.controlAnimationTiming,\n        useNativeDriver: false,\n      }),\n    ]).start();\n  }\n\n  /**\n   * Animation to show controls...opposite of\n   * above...move onto the screen and then\n   * fade in.\n   */\n  showControlAnimation() {\n    Animated.parallel([\n      Animated.timing(this.animations.topControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n      Animated.timing(this.animations.topControl.marginTop, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n      Animated.timing(this.animations.bottomControl.opacity, {\n        toValue: 1,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n      Animated.timing(this.animations.bottomControl.marginBottom, {\n        toValue: 0,\n        useNativeDriver: false,\n        duration: this.props.controlAnimationTiming,\n      }),\n    ]).start();\n  }\n\n  /**\n   * Loop animation to spin loader icon. If not loading then stop loop.\n   */\n  loadAnimation() {\n    if (this.state.loading) {\n      Animated.sequence([\n        Animated.timing(this.animations.loader.rotate, {\n          toValue: this.animations.loader.MAX_VALUE,\n          duration: 1500,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(this.animations.loader.rotate, {\n          toValue: 0,\n          duration: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n      ]).start(this.loadAnimation.bind(this));\n    }\n  }\n\n  /**\n   * Function to hide the controls. Sets our\n   * state then calls the animation.\n   */\n  _hideControls() {\n    if (this.mounted) {\n      let state = this.state;\n      state.showControls = false;\n      this.hideControlAnimation();\n      typeof this.events.onHideControls === 'function' &&\n        this.events.onHideControls();\n\n      this.setState(state);\n    }\n  }\n\n  /**\n   * Function to toggle controls based on\n   * current state.\n   */\n  _toggleControls() {\n    let state = this.state;\n    state.showControls = !state.showControls;\n\n    if (state.showControls) {\n      this.showControlAnimation();\n      this.setControlTimeout();\n      typeof this.events.onShowControls === 'function' &&\n        this.events.onShowControls();\n    } else {\n      this.hideControlAnimation();\n      this.clearControlTimeout();\n      typeof this.events.onHideControls === 'function' &&\n        this.events.onHideControls();\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Toggle fullscreen changes resizeMode on\n   * the <Video> component then updates the\n   * isFullscreen state.\n   */\n  _toggleFullscreen() {\n    let state = this.state;\n\n    state.isFullscreen = !state.isFullscreen;\n\n    if (this.props.toggleResizeModeOnFullscreen) {\n      state.resizeMode = state.isFullscreen === true ? 'cover' : 'contain';\n    }\n\n    if (state.isFullscreen) {\n      typeof this.events.onEnterFullscreen === 'function' &&\n        this.events.onEnterFullscreen();\n    } else {\n      typeof this.events.onExitFullscreen === 'function' &&\n        this.events.onExitFullscreen();\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Toggle playing state on <Video> component\n   */\n  _togglePlayPause() {\n    let state = this.state;\n    state.paused = !state.paused;\n\n    if (state.paused) {\n      typeof this.events.onPause === 'function' && this.events.onPause();\n      MusicControl.updatePlayback({\n        state: MusicControl.STATE_PAUSED,\n        elapsedTime: this.state.currentTime,\n      });\n    } else {\n      typeof this.events.onPlay === 'function' && this.events.onPlay();\n      MusicControl.updatePlayback({\n        state: MusicControl.STATE_PLAYING,\n        elapsedTime: this.state.currentTime,\n      });\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Toggle between showing time remaining or\n   * video duration in the timer control\n   */\n  _toggleTimer() {\n    let state = this.state;\n    state.showTimeRemaining = !state.showTimeRemaining;\n    this.setState(state);\n  }\n\n  /**\n   * The default 'onBack' function pops the navigator\n   * and as such the video player requires a\n   * navigator prop by default.\n   */\n  _onBack() {\n    if (this.props.navigator && this.props.navigator.pop) {\n      this.props.navigator.pop();\n    } else {\n      console.warn(\n        'Warning: _onBack requires navigator property to function. Either modify the onBack prop or pass a navigator prop',\n      );\n    }\n  }\n\n  /**\n   * Calculate the time to show in the timer area\n   * based on if they want to see time remaining\n   * or duration. Formatted to look as 00:00.\n   */\n  calculateTime() {\n    if (this.state.showTimeRemaining) {\n      const time = this.state.duration - this.state.currentTime;\n      return `-${this.formatTime(time)}`;\n    }\n\n    return this.formatTime(this.state.currentTime);\n  }\n\n  /**\n   * Format a time string as mm:ss\n   *\n   * @param {int} time time in milliseconds\n   * @return {string} formatted time string in mm:ss format\n   */\n  formatTime(time = 0) {\n    const symbol = this.state.showRemainingTime ? '-' : '';\n    time = Math.min(Math.max(time, 0), this.state.duration);\n\n    const formattedMinutes = padStart(Math.floor(time / 60).toFixed(0), 2, 0);\n    const formattedSeconds = padStart(Math.floor(time % 60).toFixed(0), 2, 0);\n\n    return `${symbol}${formattedMinutes}:${formattedSeconds}`;\n  }\n  getTime = (time) => {\n    // format the seconds saved into 00:00:00\n    const secs = time % 60;\n    const s2 = (time - secs) / 60;\n    const mins = s2 % 60;\n    const hrs = (s2 - mins) / 60;\n    const hours = this.addZeros(hrs) > 0 ? `${this.addZeros(hrs)}:` : '';\n    return `${hours}${this.addZeros(mins)}:${this.addZeros(secs)}`;\n  };\n  addZeros = (time) => {\n    return time < 10 ? `0${time}` : time;\n  };\n\n  /**\n   * Set the position of the seekbar's components\n   * (both fill and handle) according to the\n   * position supplied.\n   *\n   * @param {float} position position in px of seeker handle}\n   */\n  setSeekerPosition(position = 0) {\n    let state = this.state;\n    position = this.constrainToSeekerMinMax(position);\n\n    state.seekerFillWidth = position;\n    state.seekerPosition = position;\n\n    if (!state.seeking) {\n      state.seekerOffset = position;\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Constrain the location of the seeker to the\n   * min/max value based on how big the\n   * seeker is.\n   *\n   * @param {float} val position of seeker handle in px\n   * @return {float} constrained position of seeker handle in px\n   */\n  constrainToSeekerMinMax(val = 0) {\n    if (val <= 0) {\n      return 0;\n    } else if (val >= this.player.seekerWidth) {\n      return this.player.seekerWidth;\n    }\n    return val;\n  }\n\n  /**\n   * Calculate the position that the seeker should be\n   * at along its track.\n   *\n   * @return {float} position of seeker handle in px based on currentTime\n   */\n  calculateSeekerPosition() {\n    const percent = this.state.currentTime / this.state.duration;\n    return this.player.seekerWidth * percent;\n  }\n\n  /**\n   * Return the time that the video should be at\n   * based on where the seeker handle is.\n   *\n   * @return {float} time in ms based on seekerPosition.\n   */\n  calculateTimeFromSeekerPosition() {\n    const percent = this.state.seekerPosition / this.player.seekerWidth;\n    return this.state.duration * percent;\n  }\n\n  /**\n   * Seek to a time in the video.\n   *\n   * @param {float} time time to seek to in ms\n   */\n  seekTo(time = 0) {\n    let state = this.state;\n    state.currentTime = time;\n    this.player.ref.seek(time);\n    this.setState(state);\n  }\n\n  /**\n   * Set the position of the volume slider\n   *\n   * @param {float} position position of the volume handle in px\n   */\n  setVolumePosition(position = 0) {\n    let state = this.state;\n    position = this.constrainToVolumeMinMax(position);\n    state.volumePosition = position + this.player.iconOffset;\n    state.volumeFillWidth = position;\n\n    state.volumeTrackWidth = this.player.volumeWidth - state.volumeFillWidth;\n\n    if (state.volumeFillWidth < 0) {\n      state.volumeFillWidth = 0;\n    }\n\n    if (state.volumeTrackWidth > 150) {\n      state.volumeTrackWidth = 150;\n    }\n\n    this.setState(state);\n  }\n\n  /**\n   * Constrain the volume bar to the min/max of\n   * its track's width.\n   *\n   * @param {float} val position of the volume handle in px\n   * @return {float} contrained position of the volume handle in px\n   */\n  constrainToVolumeMinMax(val = 0) {\n    if (val <= 0) {\n      return 0;\n    } else if (val >= this.player.volumeWidth + 9) {\n      return this.player.volumeWidth + 9;\n    }\n    return val;\n  }\n\n  /**\n   * Get the volume based on the position of the\n   * volume object.\n   *\n   * @return {float} volume level based on volume handle position\n   */\n  calculateVolumeFromVolumePosition() {\n    return this.state.volumePosition / this.player.volumeWidth;\n  }\n\n  /**\n   * Get the position of the volume handle based\n   * on the volume\n   *\n   * @return {float} volume handle position in px based on volume\n   */\n  calculateVolumePositionFromVolume() {\n    return this.player.volumeWidth * this.state.volume;\n  }\n\n  /**\n    | -------------------------------------------------------\n    | React Component functions\n    | -------------------------------------------------------\n    |\n    | Here we're initializing our listeners and getting\n    | the component ready using the built-in React\n    | Component methods\n    |\n    */\n\n  /**\n   * Before mounting, init our seekbar and volume bar\n   * pan responders.\n   */\n  UNSAFE_componentWillMount() {\n    this.initSeekPanResponder();\n    this.initVolumePanResponder();\n  }\n\n  /**\n   * To allow basic playback management from the outside\n   * we have to handle possible props changes to state changes\n   */\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.state.paused !== nextProps.paused) {\n      this.setState({\n        paused: nextProps.paused,\n      });\n    }\n\n    if (this.styles.videoStyle !== nextProps.videoStyle) {\n      this.styles.videoStyle = nextProps.videoStyle;\n    }\n\n    if (this.styles.containerStyle !== nextProps.style) {\n      this.styles.containerStyle = nextProps.style;\n    }\n  }\n\n  /**\n   * When the component is about to unmount kill the\n   * timeout less it fire in the prev/next scene\n   */\n  componentWillUnmount() {\n    this.mounted = false;\n    this.clearControlTimeout();\n    Orientation.lockToPortrait();\n    AppState.removeEventListener(\"change\", this._handleAppStateChange);\n  }\n\n  /**\n   * Get our seekbar responder going\n   */\n  initSeekPanResponder() {\n    this.player.seekPanResponder = PanResponder.create({\n      // Ask to be the responder.\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n\n      /**\n       * When we start the pan tell the machine that we're\n       * seeking. This stops it from updating the seekbar\n       * position in the onProgress listener.\n       */\n      onPanResponderGrant: (evt, gestureState) => {\n        let state = this.state;\n        this.clearControlTimeout();\n        const position = evt.nativeEvent.locationX;\n        this.setSeekerPosition(position);\n        state.seeking = true;\n        state.originallyPaused = state.paused;\n        state.scrubbing = false;\n        if (this.player.scrubbingTimeStep > 0) {\n          state.paused = true;\n        }\n        this.setState(state);\n      },\n\n      /**\n       * When panning, update the seekbar position, duh.\n       */\n      onPanResponderMove: (evt, gestureState) => {\n        const position = this.state.seekerOffset + gestureState.dx;\n        this.setSeekerPosition(position);\n        let state = this.state;\n\n        if (\n          this.player.scrubbingTimeStep > 0 &&\n          !state.loading &&\n          !state.scrubbing\n        ) {\n          const time = this.calculateTimeFromSeekerPosition();\n          const timeDifference = Math.abs(state.currentTime - time) * 1000;\n\n          if (\n            time < state.duration &&\n            timeDifference >= this.player.scrubbingTimeStep\n          ) {\n            state.scrubbing = true;\n\n            this.setState(state);\n            setTimeout(() => {\n              this.player.ref.seek(time, this.player.scrubbingTimeStep);\n            }, 1);\n          }\n        }\n      },\n\n      /**\n       * On release we update the time and seek to it in the video.\n       * If you seek to the end of the video we fire the\n       * onEnd callback\n       */\n      onPanResponderRelease: (evt, gestureState) => {\n        const time = this.calculateTimeFromSeekerPosition();\n        let state = this.state;\n        if (time >= state.duration && !state.loading) {\n          state.paused = true;\n          this.events.onEnd();\n        } else if (state.scrubbing) {\n          state.seeking = false;\n        } else {\n          this.seekTo(time);\n          this.setControlTimeout();\n          state.paused = state.originallyPaused;\n          state.seeking = false;\n        }\n        this.setState(state);\n      },\n    });\n  }\n\n  /**\n   * Initialize the volume pan responder.\n   */\n  initVolumePanResponder() {\n    this.player.volumePanResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onMoveShouldSetPanResponder: (evt, gestureState) => true,\n      onPanResponderGrant: (evt, gestureState) => {\n        this.clearControlTimeout();\n      },\n\n      /**\n       * Update the volume as we change the position.\n       * If we go to 0 then turn on the mute prop\n       * to avoid that weird static-y sound.\n       */\n      onPanResponderMove: (evt, gestureState) => {\n        let state = this.state;\n        const position = this.state.volumeOffset + gestureState.dx;\n\n        this.setVolumePosition(position);\n        state.volume = this.calculateVolumeFromVolumePosition();\n\n        if (state.volume <= 0) {\n          state.muted = true;\n        } else {\n          state.muted = false;\n        }\n\n        this.setState(state);\n      },\n\n      /**\n       * Update the offset...\n       */\n      onPanResponderRelease: (evt, gestureState) => {\n        let state = this.state;\n        state.volumeOffset = state.volumePosition;\n        this.setControlTimeout();\n        this.setState(state);\n      },\n    });\n  }\n\n  /**\n    | -------------------------------------------------------\n    | Rendering\n    | -------------------------------------------------------\n    |\n    | This section contains all of our render methods.\n    | In addition to the typical React render func\n    | we also have all the render methods for\n    | the controls.\n    |\n    */\n\n  /**\n   * Standard render control function that handles\n   * everything except the sliders. Adds a\n   * consistent <TouchableHighlight>\n   * wrapper and styling.\n   */\n  renderControl(children, callback, style = {}) {\n    return (\n      <TouchableHighlight\n        underlayColor=\"transparent\"\n        activeOpacity={0.3}\n        onPress={() => {\n          this.resetControlTimeout();\n          callback();\n        }}\n        style={[styles.controls.control, style]}>\n        {children}\n      </TouchableHighlight>\n    );\n  }\n\n  /**\n   * Renders an empty control, used to disable a control without breaking the view layout.\n   */\n  renderNullControl() {\n    return <View style={[styles.controls.control]} />;\n  }\n\n  /**\n   * Groups the top bar controls together in an animated\n   * view and spaces them out.\n   */\n  renderCenterControls() {\n    return (\n      <Animated.View\n        style={[\n          styles.controls.top,\n          {\n            flex: 1,\n            justifyContent: 'center',\n            opacity: this.animations.topControl.opacity,\n            backgroundColor: 'rgba(12,34,56,0.8)',\n          },\n        ]}>\n        {this.state.showControls ? (\n          <PlayButton\n            duration={this.state.duration}\n            onPress={() => {\n              this.methods.togglePlayPause();\n            }}\n            onPressForward={() => {\n              this.seekTo(this.state.currentTime + 5);\n            }}\n            onPressBackward={() => {\n              this.seekTo(\n                this.state.currentTime < 5\n                  ? this.state.currentTime\n                  : this.state.currentTime - 5,\n              );\n            }}\n            paused={this.state.paused}\n          />\n        ) : null}\n      </Animated.View>\n    );\n  }\n\n  renderTopControls() {\n    return Dimensions.get('window').height > Dimensions.get('window').width ? (\n      <Animated.View\n        style={[\n          styles.controls.top,\n          {\n            opacity: this.animations.topControl.opacity,\n            marginTop: this.animations.topControl.marginTop,\n            backgroundColor: 'rgba(12,34,56,0.8)',\n          },\n        ]}>\n\n        <SafeAreaView style={styles.topControls.container}>\n          <View style={styles.topControls.row}>\n            <View style={[styles.topControls.rowView, { flex: 1 }]}>\n              <TouchableOpacity\n                onPress={() => {\n                  this.props.backToList();\n                }}\n                hitSlop={styles.topControls.backHitSlop}>\n                <Image\n                  style={styles.topControls.backIcon}\n                  source={require('./VideoPlayerComponents/components/images/back_white.png')}\n                />\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.topControls.rowView}>\n              {this.props.isFavoriteShow ? <View style={styles.topControls.btnContainer}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.props.favorite();\n                  }}\n                  hitSlop={styles.topControls.commonHitSlop}>\n                  <Image\n                    style={styles.topControls.favIcon}\n                    source={\n                      this.props.isFavorite\n                        ? require('./VideoPlayerComponents/components/images/favourite.png')\n                        : require('./VideoPlayerComponents/components/images/unfavourite.png')\n                    }\n                  />\n                </TouchableOpacity>\n              </View> : null}\n\n              {this.props.isShareShow ? <View style={styles.topControls.btnContainer}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.props.share();\n                  }}\n                  hitSlop={styles.topControls.commonHitSlop}>\n                  <Image\n                    style={styles.topControls.shareIcon}\n                    source={require('./VideoPlayerComponents/components/images/share.png')}\n                  />\n                </TouchableOpacity>\n              </View> : null}\n\n              {this.props.isSettingShow ? <View style={styles.topControls.btnContainer}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.props.onMorePress();\n                  }}\n                  hitSlop={styles.topControls.commonHitSlop}>\n                  <Image\n                    style={{ marginRight: 15 }}\n                    source={require('./VideoPlayerComponents/components/images/icon_Settings.png')}\n                  />\n                </TouchableOpacity>\n              </View> : null}\n\n            </View>\n          </View>\n\n          <View style={{ marginBottom: 10 }}>\n            <Text\n              style={[styles.topControls.title]}\n              numberOfLines={1}\n              ellipsizeMode=\"tail\">\n              {this.props.title}\n            </Text>\n            <Text style={styles.topControls.timeText}>\n              {this.getTime(\n                parseInt(this.state.duration ? this.state.duration : 0, 10),\n              )}\n            </Text>\n          </View>\n\n        </SafeAreaView>\n      </Animated.View>\n    ) : (\n        <Animated.View\n          style={[\n            styles.controls.top,\n            {\n              opacity: this.animations.topControl.opacity,\n              marginTop: this.animations.topControl.marginTop,\n              backgroundColor: 'rgba(12,34,56,0.8)',\n            },\n          ]}>\n\n          <View style={styles.topControls.container}>\n            <View style={styles.topControls.row}>\n\n              <View style={[styles.topControls.rowView, { flex: 1 }]}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.props.backToList();\n                  }}\n                  hitSlop={styles.topControls.backHitSlop}>\n                  <Image\n                    style={styles.topControls.backIcon}\n                    source={require('./VideoPlayerComponents/components/images/back_white.png')}\n                  />\n                </TouchableOpacity>\n                <Text\n                  style={[styles.topControls.title]}\n                  numberOfLines={1}\n                  ellipsizeMode=\"tail\">\n                  {this.props.title}\n                </Text>\n                <Text style={styles.topControls.landscapeTitle}>\n                  {this.getTime(parseInt(this.state.duration, 10))}\n                </Text>\n              </View>\n\n              <View style={styles.topControls.rowView}>\n                {this.props.isFavoriteShow ? <View style={styles.topControls.btnContainer}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      this.props.favorite();\n                    }}\n                    hitSlop={styles.topControls.commonHitSlop}>\n                    <Image\n                      style={styles.topControls.favIcon}\n                      source={\n                        this.props.isFavorite\n                          ? require('./VideoPlayerComponents/components/images/favourite.png')\n                          : require('./VideoPlayerComponents/components/images/unfavourite.png')\n                      }\n                    />\n                  </TouchableOpacity>\n                </View> : null}\n\n                {this.props.isShareShow ? <View style={styles.topControls.btnContainer}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      this.props.share();\n                    }}\n                    hitSlop={styles.topControls.commonHitSlop}>\n                    <Image\n                      style={styles.topControls.shareIcon}\n                      source={require('./VideoPlayerComponents/components/images/share.png')}\n                    />\n                  </TouchableOpacity>\n                </View> : null}\n\n                {this.props.isSettingShow ? <View style={styles.topControls.btnContainer}>\n                  <TouchableOpacity\n                    onPress={() => {\n                      this.props.onMorePress();\n                    }}\n                    hitSlop={styles.topControls.commonHitSlop}>\n                    <Image\n                      style={{ marginRight: 15 }}\n                      source={require('./VideoPlayerComponents/components/images/icon_Settings.png')}\n                    />\n                  </TouchableOpacity>\n                </View> : null}\n\n              </View>\n            </View>\n          </View>\n        </Animated.View>\n      );\n  }\n  seekTo(time = 0) {\n    let state = this.state;\n    state.currentTime = time;\n    this.player.ref.seek(time);\n    this.setState(state);\n  }\n\n  onSeekRelease(percent) {\n    const seconds = percent * this.state.duration;\n    this.setState({ currentTime: percent, seeking: false }, () => {\n      this.seekTo(seconds);\n    });\n  }\n  /**\n   * Back button control\n   */\n  renderBack() {\n    return this.renderControl(\n      <Image\n        source={require('./VideoPlayerComponents/components/images/back.png')}\n        style={styles.controls.back}\n      />,\n      this.events.onBack,\n      styles.controls.back,\n    );\n  }\n\n  /**\n   * Render the volume slider and attach the pan handlers\n   */\n  renderVolume() {\n    return (\n      <View style={styles.volume.container}>\n        <View\n          style={[styles.volume.fill, { width: this.state.volumeFillWidth }]}\n        />\n        <View\n          style={[styles.volume.track, { width: this.state.volumeTrackWidth }]}\n        />\n        <View\n          style={[styles.volume.handle, { left: this.state.volumePosition }]}\n          {...this.player.volumePanResponder.panHandlers}>\n          <Image\n            style={styles.volume.icon}\n            source={require('./VideoPlayerComponents/components/images/volume.png')}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  /**\n   * Render fullscreen toggle and set icon based on the fullscreen state.\n   */\n  renderFullscreen() {\n    let source =\n      this.state.isFullscreen === true\n        ? require('./VideoPlayerComponents/components/images/shrink.png')\n        : require('./VideoPlayerComponents/components/images/expand.png');\n    return this.renderControl(\n      <Image source={source} />,\n      this.methods.toggleFullscreen,\n      styles.controls.fullscreen,\n    );\n  }\n\n  /**\n   * Render bottom control group and wrap it in a holder\n   */\n  renderBottomControls() {\n    let currentTime = 0;\n    let duration = 0;\n    let progress = 0;\n\n    if (this.state.currentTime && this.state.duration) {\n      currentTime = this.state.currentTime;\n      duration = this.state.duration;\n      progress = this.state.currentTime / this.state.duration;\n    }\n\n    return (\n      <Animated.View\n        style={[\n          styles.controls.bottom,\n          {\n            opacity: this.animations.bottomControl.opacity,\n            marginBottom: this.animations.bottomControl.marginBottom,\n            backgroundColor: 'rgba(12,34,56,0.8)',\n            justifyContent: 'flex-start',\n          },\n        ]}>\n        <SafeAreaView style={styles.topControls.bottomControlsView}>\n          <View style={{ width: '100%' }}>\n            <Time time={currentTime} completeDuration={duration} />\n          </View>\n          <View style={styles.topControls.bottomSliderView}>\n            <Scrubber\n              onSeek={(pos) => {\n                this._onSeek(pos);\n              }}\n              onSeekRelease={(pos) => {\n                this.onSeekRelease(pos);\n              }}\n              progress={progress}\n              theme={{\n                scrubberThumb: 'rgba(247,109,28,1)',\n                scrubberBar: 'rgba(247,109,28,1)',\n              }}\n              back={() => {\n                this.props.back();\n              }}\n              next={() => {\n                this.props.next();\n              }}\n              isRepeat={this.props.isRepeat}\n              isShuffle={this.props.isShuffle}\n              isAutoPlay={this.props.isAutoPlay}\n              repeat={() => {\n                this.props.repeat();\n              }}\n              shuffle={() => {\n                this.props.shuffle();\n              }}\n              autoPlayFunc={() => {\n                this.props.autoPlayFunc();\n              }}\n              isSplashScreen={false}\n            />\n          </View>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n\n  renderSeekbar() {\n    return (\n      <View\n        style={styles.seekbar.container}\n        collapsable={false}\n        {...this.player.seekPanResponder.panHandlers}>\n        <View\n          style={styles.seekbar.track}\n          onLayout={(event) =>\n            (this.player.seekerWidth = event.nativeEvent.layout.width)\n          }\n          pointerEvents={'none'}>\n          <View\n            style={[\n              styles.seekbar.fill,\n              {\n                width: this.state.seekerFillWidth,\n                backgroundColor: this.props.seekColor || '#FFF',\n              },\n            ]}\n            pointerEvents={'none'}\n          />\n        </View>\n        <View\n          style={[styles.seekbar.handle, { left: this.state.seekerPosition }]}\n          pointerEvents={'none'}>\n          <View\n            style={[\n              styles.seekbar.circle,\n              { backgroundColor: this.props.seekColor || '#FFF' },\n            ]}\n            pointerEvents={'none'}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  /**\n   * Render the play/pause button and show the respective icon   \n   */\n  renderPlayPause() {\n    let source =\n      this.state.paused === true\n        ? require('./VideoPlayerComponents/components/images/Play.png')\n        : require('./VideoPlayerComponents/components/images/pause.png');\n    return this.renderControl(\n      <Image source={source} />,\n      this.methods.togglePlayPause,\n      styles.controls.playPause,\n    );\n  }\n\n  /**\n   * Render our title...if supplied.\n   */\n  renderTitle() {\n    if (this.opts.title) {\n      return (\n        <View style={[styles.controls.control, styles.controls.title]}>\n          <Text\n            style={[styles.controls.text, styles.controls.titleText]}\n            numberOfLines={1}>\n            {this.opts.title || ''}\n          </Text>\n        </View>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * Show our timer.\n   */\n  renderTimer() {\n    return this.renderControl(\n      <Text style={styles.controls.timerText}>{this.calculateTime()}</Text>,\n      this.methods.toggleTimer,\n      styles.controls.timer,\n    );\n  }\n\n  /**\n   * Show loading icon\n   */\n  renderLoader() {\n    if (this.state.loading) {\n      return (\n        <View style={styles.loader.container}>\n          <Animated.Image\n            source={require('./VideoPlayerComponents/components/images/loader-icon.png')}\n            style={[\n              styles.loader.icon,\n              {\n                transform: [\n                  {\n                    rotate: this.animations.loader.rotate.interpolate({\n                      inputRange: [0, 360],\n                      outputRange: ['0deg', '360deg'],\n                    }),\n                  },\n                ],\n              },\n            ]}\n          />\n        </View>\n      );\n    }\n    return null;\n  }\n\n  renderError() {\n    if (this.state.error) {\n      return (\n        <View style={styles.error.container}>\n          <Image\n            source={require('./VideoPlayerComponents/components/images/error-icon.png')}\n            style={styles.error.icon}\n          />\n          <Text style={styles.error.text}>Video unavailable</Text>\n        </View>\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Provide all of our options and render the whole component.\n   */\n  render() {\n    return (\n      <TouchableWithoutFeedback\n        onPress={this.events.onScreenTouch}\n        style={[styles.player.container, this.styles.containerStyle]}>\n        <View style={[styles.player.container, this.styles.containerStyle]}>\n          {this.props.isVideoSettingsOpen ? (\n            <VideoSettings\n              isOpen={this.props.isVideoSettingsOpen}\n              onVideoSettingsClose={this.props.onVideoSettingsClose}\n              qualityArray={this.props.qualityArray}\n              boxSelected={this.props.boxSelected}\n              IsQualityArray={this.props.IsQualityArray}\n              IsAutoConnectionStatus={this.props.IsAutoConnectionStatus}\n            />\n          ) : null}\n          <Video\n            {...this.props}\n            ref={(videoPlayer) => (this.player.ref = videoPlayer)}\n            resizeMode={'contain'}\n            volume={this.state.volume}\n            paused={this.state.paused}\n            muted={this.state.muted}\n            rate={this.state.rate}\n            onLoadStart={this.events.onLoadStart}\n            onProgress={this.events.onProgress}\n            onError={this.events.onError}\n            fullscreenOrientation={'all'}\n            style={[styles.player.video, this.styles.videoStyle]}\n            onLoad={this.events.onLoad}\n            onEnd={this.events.onEnd}\n            onSeek={this.events.onSeek}\n            style={[styles.player.video, this.styles.videoStyle]}\n            source={this.props.source}\n          />\n          {this.renderError()}\n          {this.renderLoader()}\n          {this.renderTopControls()}\n          {this.renderCenterControls()}\n          {this.renderBottomControls()}\n        </View>\n      </TouchableWithoutFeedback>\n      // </View>\n    );\n  }\n}\n\n/**\n * This object houses our styles. There's player\n * specific styles and control specific ones.\n * And then there's volume/seeker styles.\n */\nconst styles = {\n  player: StyleSheet.create({\n    container: {\n      overflow: 'hidden',\n      backgroundColor: '#000',\n      flex: 1,\n      alignSelf: 'stretch',\n      justifyContent: 'space-between',\n    },\n    video: {\n      overflow: 'hidden',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n    },\n  }),\n  error: StyleSheet.create({\n    container: {\n      backgroundColor: 'rgba( 0, 0, 0, 0.5 )',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    icon: {\n      marginBottom: 16,\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#f27474',\n    },\n  }),\n  topControls: StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent:\n        Dimensions.get('window').height > Dimensions.get('window').width\n          ? 'space-between'\n          : 'flex-start',\n      paddingHorizontal: 5,\n    },\n    row: {\n      flexDirection: 'row',\n      height: 50,\n    },\n    rowView: {\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    backIcon: {\n      margin: 7,\n      height: 22,\n    },\n    favIcon: {\n      marginRight: 15,\n      height: 25,\n      width: 25,\n    },\n    shareIcon: {\n      marginRight: 15,\n      height: 22,\n      width: 22,\n    },\n    title: {\n      marginLeft: 10,\n      fontSize: 17,\n      fontWeight: '500',\n      color: 'white',\n    },\n    landscapeTitle: {\n      fontWeight: '600',\n      marginLeft: 15,\n      marginRight: 5,\n      fontSize: 17,\n      color: '#ffff',\n    },\n    timeText: {\n      fontWeight: '600',\n      marginLeft: 10,\n      marginRight: 5,\n      marginTop: 10,\n      fontSize: 17,\n      color: '#ffff',\n    },\n    btnContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    commonHitSlop: {\n      top: 5,\n      bottom: 5,\n      left: 5,\n      right: 5,\n    },\n    backHitSlop: {\n      top: 10,\n      bottom: 10,\n      left: 10,\n      right: 10,\n    },\n    bottomControlsView: {\n      alignSelf: 'stretch',\n      paddingLeft: 5,\n      paddingRight: 5,\n    },\n    bottomSliderView: {\n      alignSelf: 'stretch',\n      alignItems: 'flex-end',\n      paddingLeft: 5,\n      paddingRight: 5,\n      flexDirection: 'row',\n      marginHorizontal: 15,\n    },\n  }),\n  loader: StyleSheet.create({\n    container: {\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  }),\n  controls: StyleSheet.create({\n    row: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: null,\n      width: null,\n    },\n    column: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      height: null,\n      width: null,\n    },\n    vignette: {\n      resizeMode: 'stretch',\n    },\n    control: {\n      padding: 16,\n    },\n    text: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 14,\n      textAlign: 'center',\n    },\n    pullRight: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    top: {\n      flex: 1,\n      alignItems: 'stretch',\n      justifyContent: 'flex-start',\n    },\n    bottom: {\n      alignItems: 'stretch',\n      flex: 1,\n      justifyContent: 'flex-end',\n    },\n    topControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      flexDirection: 'row',\n      width: null,\n      margin: 12,\n      marginBottom: 18,\n    },\n    bottomControlGroup: {\n      alignSelf: 'stretch',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      marginLeft: 12,\n      marginRight: 12,\n      marginBottom: 0,\n    },\n    volume: {\n      flexDirection: 'row',\n    },\n    fullscreen: {\n      flexDirection: 'row',\n    },\n    playPause: {\n      position: 'relative',\n      width: 80,\n      zIndex: 0,\n    },\n    title: {\n      alignItems: 'center',\n      flex: 0.6,\n      flexDirection: 'column',\n      padding: 0,\n    },\n    titleText: {\n      textAlign: 'center',\n    },\n    timer: {\n      width: 80,\n    },\n    timerText: {\n      backgroundColor: 'transparent',\n      color: '#FFF',\n      fontSize: 11,\n      textAlign: 'right',\n    },\n  }),\n  volume: StyleSheet.create({\n    container: {\n      alignItems: 'center',\n      justifyContent: 'flex-start',\n      flexDirection: 'row',\n      height: 1,\n      marginLeft: 20,\n      marginRight: 20,\n      width: 150,\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      marginLeft: 7,\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1,\n    },\n    handle: {\n      position: 'absolute',\n      marginTop: -24,\n      marginLeft: -24,\n      padding: 16,\n    },\n    icon: {\n      marginLeft: 7,\n    },\n  }),\n  seekbar: StyleSheet.create({\n    container: {\n      alignSelf: 'stretch',\n      height: 28,\n      marginLeft: 20,\n      marginRight: 20,\n    },\n    track: {\n      backgroundColor: '#333',\n      height: 1,\n      position: 'relative',\n      top: 14,\n      width: '100%',\n    },\n    fill: {\n      backgroundColor: '#FFF',\n      height: 1,\n      width: '100%',\n    },\n    handle: {\n      position: 'absolute',\n      marginLeft: -7,\n      height: 28,\n      width: 28,\n    },\n    circle: {\n      borderRadius: 12,\n      position: 'relative',\n      top: 8,\n      left: 8,\n      height: 12,\n      width: 12,\n    },\n  }),\n};\n"]},"metadata":{},"sourceType":"module"}