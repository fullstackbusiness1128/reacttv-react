{"ast":null,"code":"var _this = this;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { colors, images } from \"../constants\";\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset,\n      navigation = _ref.navigation;\n\n  renderItem = function (_renderItem) {\n    function renderItem(_x) {\n      return _renderItem.apply(this, arguments);\n    }\n\n    renderItem.toString = function () {\n      return _renderItem.toString();\n    };\n\n    return renderItem;\n  }(function (_ref2) {\n    var item = _ref2.item;\n    ret;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return alert(\"pressed!\");\n      },\n      children: _jsx(Image, {\n        source: item.poster,\n        style: styles.image\n      })\n    });\n    return _jsx(View, {\n      style: styles.item,\n      children: renderItem\n    });\n  });\n\n  return _jsx(FlatList, {\n    contentContainerStyle: styles.containerFlatList,\n    data: dataset,\n    horizontal: true,\n    renderItem: _this.renderItem,\n    showsHorizontalScrollIndicator: false\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","mockData","MediaItemScroller","dataset","navigation","renderItem","item","ret","alert","poster","styles","image","containerFlatList","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","placeholder","backgroundColor","infoGrey","resizeMode"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA4B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAIpDC,EAAAA,UAAU;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,IAAG,iBAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AACzBC,IAAAA,GAAG;AAED,WAAQ,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMC,KAAK,CAAC,UAAD,CAAX;AAAA,OAA3B;AAAA,gBACN,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEF,IAAI,CAACG,MAApB;AAA4B,QAAA,KAAK,EAAEC,MAAM,CAACC;AAA1C;AADM,MAAR;AAKF,WAAO,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACJ,IAApB;AAAA,gBAA2BD;AAA3B,MAAP;AACD,GATS,CAAV;;AAYA,SACE,KAAC,QAAD;AACE,IAAA,qBAAqB,EAAEK,MAAM,CAACE,iBADhC;AAEE,IAAA,IAAI,EAAET,OAFR;AAGE,IAAA,UAAU,MAHZ;AAKE,IAAA,UAAU,EAAE,KAAI,CAACE,UALnB;AAME,IAAA,8BAA8B,EAAE;AANlC,IADF;AAUD,CA1BD;;AA4BAH,iBAAiB,CAACW,YAAlB,GAAiC;AAC/BV,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACY,SAAlB,GAA8B;AAE5BX,EAAAA,OAAO,EAAEL,SAAS,CAACiB;AAFS,CAA9B;AAKA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,iBAAiB,EAAE;AACjBM,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GALyB;AAY/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE3B,MAAM,CAAC4B,QADb;AAEXN,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAiB/Bb,EAAAA,KAAK,EAAE;AACLU,IAAAA,MAAM,EAAE,MADH;AAELO,IAAAA,UAAU,EAAE,SAFP;AAGLJ,IAAAA,KAAK,EAAE;AAHF;AAjBwB,CAAlB,CAAf;AAwBA,eAAetB,iBAAf","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Text, View, FlatList, TouchableOpacity, RefreshControl } from \"react-native\";\r\nimport { colors, images } from '../constants';\r\n\r\nimport mockData from '../mockdata/data';\r\n\r\nconst MediaItemScroller = ({ dataset,navigation }) => {\r\n  //  const dataArray = Object.values(mockData[dataset]);\r\n  //  console.log(dataset)\r\n\r\n  renderItem = ({ item }) => {\r\n    ret\r\n   \r\n      return (<TouchableOpacity onPress={() => alert(\"pressed!\")}>\r\n        <Image source={item.poster} style={styles.image} />\r\n      </TouchableOpacity>\r\n    ) \r\n\r\n    return <View style={styles.item}>{renderItem}</View>;\r\n  };\r\n\r\n\r\n  return (\r\n    <FlatList\r\n      contentContainerStyle={styles.containerFlatList}\r\n      data={dataset}\r\n      horizontal\r\n      // keyExtractor={({ id }) => id.toString()}\r\n      renderItem={this.renderItem}\r\n      showsHorizontalScrollIndicator={false}\r\n    />\r\n  );\r\n};\r\n\r\nMediaItemScroller.defaultProps = {\r\n  dataset: 'dumbData'\r\n};\r\n\r\nMediaItemScroller.propTypes = {\r\n  // optional\r\n  dataset: PropTypes.string\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerFlatList: {\r\n    paddingLeft: 16,\r\n    paddingRight: 8\r\n  },\r\n  item: {\r\n    borderRadius: 4,\r\n    height: 130,\r\n    marginRight: 8,\r\n    overflow: 'hidden',\r\n    width: 93\r\n  },\r\n  placeholder: {\r\n    backgroundColor: colors.infoGrey,\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  image: {\r\n    height: '100%',\r\n    resizeMode: 'contain',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport default MediaItemScroller;\r\n"]},"metadata":{},"sourceType":"module"}