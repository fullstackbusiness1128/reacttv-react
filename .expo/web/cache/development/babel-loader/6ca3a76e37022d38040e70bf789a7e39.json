{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, images } from \"../constants\";\n\nvar axios = require('axios');\n\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset;\n  var tokenStr = \"151|5Rjp5o7SbJG5BCk9FeIuubOawvRmGPobhsREzJfS\";\n  console.log(dataset);\n  axios.get(\"https://www.flicknplay.com/api/v1/lists/\" + dataset, {\n    headers: {\n      \"accept\": \"application/json\",\n      \"Authorization\": \"Bearer \" + tokenStr\n    }\n  }).then(function (response) {\n    console.log;\n  });\n  console.log(dataArray);\n  return _jsx(FlatList, {\n    contentContainerStyle: styles.containerFlatList,\n    data: dataArray,\n    horizontal: true,\n    keyExtractor: function keyExtractor(_ref2) {\n      var id = _ref2.id;\n      return id.toString();\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      var renderItem = item.image ? _jsx(Image, {\n        source: images[item.image],\n        style: styles.image\n      }) : _jsx(View, {\n        style: styles.placeholder\n      });\n      return _jsx(View, {\n        style: styles.item,\n        children: renderItem\n      });\n    },\n    showsHorizontalScrollIndicator: false\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","axios","require","mockData","MediaItemScroller","dataset","tokenStr","console","log","get","headers","then","response","dataArray","styles","containerFlatList","id","toString","item","renderItem","image","placeholder","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","backgroundColor","infoGrey","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACzC,MAAMC,QAAQ,GAAC,8CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAJ,EAAAA,KAAK,CAACQ,GAAN,8CAAqDJ,OAArD,EAA+D;AAACK,IAAAA,OAAO,EAAC;AACtE,kCADsE;AAEtE,mCAA4BJ;AAF0C;AAAT,GAA/D,EAGIK,IAHJ,CAGS,UAACC,QAAD,EAAY;AACnBL,IAAAA,OAAO,CAACC,GAAR;AACD,GALD;AAOAD,EAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AAEA,SACE,KAAC,QAAD;AACE,IAAA,qBAAqB,EAAEC,MAAM,CAACC,iBADhC;AAEE,IAAA,IAAI,EAAEF,SAFR;AAGE,IAAA,UAAU,MAHZ;AAIE,IAAA,YAAY,EAAE;AAAA,UAAGG,EAAH,SAAGA,EAAH;AAAA,aAAYA,EAAE,CAACC,QAAH,EAAZ;AAAA,KAJhB;AAKE,IAAA,UAAU,EAAE,2BAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACxB,UAAMC,UAAU,GAAGD,IAAI,CAACE,KAAL,GACjB,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEpB,MAAM,CAACkB,IAAI,CAACE,KAAN,CAArB;AAAmC,QAAA,KAAK,EAAEN,MAAM,CAACM;AAAjD,QADiB,GAGjB,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACO;AAApB,QAHF;AAMA,aAAO,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACI,IAApB;AAAA,kBAA2BC;AAA3B,QAAP;AACD,KAbH;AAcE,IAAA,8BAA8B,EAAE;AAdlC,IADF;AAkBD,CA9BD;;AAgCAf,iBAAiB,CAACkB,YAAlB,GAAiC;AAC/BjB,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACmB,SAAlB,GAA8B;AAE5BlB,EAAAA,OAAO,EAAEP,SAAS,CAAC0B;AAFS,CAA9B;AAKA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC/BX,EAAAA,iBAAiB,EAAE;AACjBY,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GALyB;AAY/BZ,EAAAA,WAAW,EAAE;AACXa,IAAAA,eAAe,EAAEnC,MAAM,CAACoC,QADb;AAEXL,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAiB/Bb,EAAAA,KAAK,EAAE;AACLU,IAAAA,MAAM,EAAE,MADH;AAELM,IAAAA,UAAU,EAAE,SAFP;AAGLH,IAAAA,KAAK,EAAE;AAHF;AAjBwB,CAAlB,CAAf;AAwBA,eAAe7B,iBAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FlatList, Image, StyleSheet, View } from 'react-native';\nimport { colors, images } from '../constants';\nconst axios = require('axios');\nimport mockData from '../mockdata/data';\n\nconst MediaItemScroller = ({ dataset }) => {\n  const tokenStr=\"151|5Rjp5o7SbJG5BCk9FeIuubOawvRmGPobhsREzJfS\"\n  console.log(dataset)\n  axios.get(`https://www.flicknplay.com/api/v1/lists/${dataset}`,{headers:{\n    \"accept\": `application/json`,\n    \"Authorization\" : `Bearer ${tokenStr}`\n  }}).then((response)=>{\n    console.log\n  })\n  // const dataArray = Object.values(mockData[dataset]);\n  console.log(dataArray)\n\n  return (\n    <FlatList\n      contentContainerStyle={styles.containerFlatList}\n      data={dataArray}\n      horizontal\n      keyExtractor={({ id }) => id.toString()}\n      renderItem={({ item }) => {\n        const renderItem = item.image ? (\n          <Image source={images[item.image]} style={styles.image} />\n        ) : (\n          <View style={styles.placeholder} />\n        );\n\n        return <View style={styles.item}>{renderItem}</View>;\n      }}\n      showsHorizontalScrollIndicator={false}\n    />\n  );\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\n\nMediaItemScroller.propTypes = {\n  // optional\n  dataset: PropTypes.string\n};\n\nconst styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\n\nexport default MediaItemScroller;\n"]},"metadata":{},"sourceType":"module"}