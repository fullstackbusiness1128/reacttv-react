{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding-top: 56.25%;\\n  border-radius: 10px;\\n  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\\n  cursor: pointer;\\n  overflow: hidden;\\n  position: relative;\\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\\n  border: 3px solid rgba(249, 249, 249, 0.1);\\n\\n  img {\\n    inset: 0px;\\n    display: block;\\n    height: 100%;\\n    \", \"\\n    object-fit: cover;\\n    opacity: 1;\\n    position: absolute;\\n    transition: opacity 500ms ease-in-out 0s;\\n    width: 100%;\\n    z-index: 1;\\n    top: 0;\\n  }\\n  video {\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n    top: 0px;\\n    opacity: 0;\\n    z-index: 0;\\n  }\\n  &:hover {\\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\\n    transform: scale(1.05);\\n    border-color: rgba(249, 249, 249, 0.8);\\n    video {\\n      opacity: 1;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 4px;\\n  padding: 30px 0px 26px;\\n  display: grid;\\n  grid-gap: 25px;\\n  grid-template-columns: repeat(5, minmax(0, 1fr));\\n  @media (max-width: 768px) {\\n    grid-template-columns: repeat(1, minmax(0, 1fr));\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport React, { useState, useEffect } from 'react';\nimport disneyImage from \"../assets/viewers-disney.png\";\nimport disneyVideo from \"../assets/videos/1564674844-disney.mp4\";\nimport pixerImage from \"../assets/viewers-pixar.png\";\nimport pixerVideo from \"../assets/videos/1564676714-pixar.mp4\";\nimport marvelImage from \"../assets/viewers-marvel.png\";\nimport marvelVideo from \"../assets/videos/1564676115-marvel.mp4\";\nimport starWarImage from \"../assets/viewers-starwars.png\";\nimport starWarVideo from \"../assets/videos/1608229455-star-wars.mp4\";\nimport nationaGeoImage from \"../assets/viewers-national.png\";\nimport nationalGeoVideo from \"../assets/videos/1564676296-national-geographic.mp4\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nvar Viewers = function Viewers() {\n  useEffect(function () {\n    axios.get(\"https://www.flicknplay.com/secure/homepage/lists/290\").then(function (response) {\n      console.log(response.data);\n    });\n  }, []);\n  return _jsxs(Container, {\n    children: [_jsxs(Wrap, {\n      children: [_jsx(\"img\", {\n        src: disneyImage,\n        alt: \"\"\n      }), _jsx(\"video\", {\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        children: _jsx(\"source\", {\n          src: disneyVideo,\n          type: \"video/mp4\"\n        })\n      })]\n    }), _jsxs(Wrap, {\n      children: [_jsx(\"img\", {\n        src: pixerImage,\n        alt: \"\"\n      }), _jsx(\"video\", {\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        children: _jsx(\"source\", {\n          src: pixerVideo,\n          type: \"video/mp4\"\n        })\n      })]\n    }), _jsxs(Wrap, {\n      children: [_jsx(\"img\", {\n        src: marvelImage,\n        alt: \"\"\n      }), _jsx(\"video\", {\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        children: _jsx(\"source\", {\n          src: marvelVideo,\n          type: \"video/mp4\"\n        })\n      })]\n    }), _jsxs(Wrap, {\n      children: [_jsx(\"img\", {\n        src: starWarImage,\n        alt: \"\"\n      }), _jsx(\"video\", {\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        children: _jsx(\"source\", {\n          src: starWarVideo,\n          type: \"video/mp4\"\n        })\n      })]\n    }), _jsxs(Wrap, {\n      children: [_jsx(\"img\", {\n        src: nationaGeoImage,\n        alt: \"\"\n      }), _jsx(\"video\", {\n        autoPlay: true,\n        muted: true,\n        loop: true,\n        playsInline: true,\n        children: _jsx(\"source\", {\n          src: nationalGeoVideo,\n          type: \"video/mp4\"\n        })\n      })]\n    })]\n  });\n};\n\nvar Container = styled.div(_templateObject());\nvar Wrap = styled.div(_templateObject2(), \"\");\nexport default Viewers;","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/src/screens/Viewer.js"],"names":["styled","React","useState","useEffect","disneyImage","disneyVideo","pixerImage","pixerVideo","marvelImage","marvelVideo","starWarImage","starWarVideo","nationaGeoImage","nationalGeoVideo","axios","require","Viewers","get","then","response","console","log","data","Container","div","Wrap"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React, { useState, useEffect } from 'react';\n// import aa from '../assets/'\nimport disneyImage from \"../assets/viewers-disney.png\"\nimport disneyVideo from \"../assets/videos/1564674844-disney.mp4\"\nimport pixerImage  from \"../assets/viewers-pixar.png\"\nimport pixerVideo  from \"../assets/videos/1564676714-pixar.mp4\"\nimport marvelImage  from \"../assets/viewers-marvel.png\"\nimport marvelVideo  from \"../assets/videos/1564676115-marvel.mp4\"\nimport starWarImage  from \"../assets/viewers-starwars.png\"\nimport starWarVideo  from \"../assets/videos/1608229455-star-wars.mp4\"\nimport nationaGeoImage  from \"../assets/viewers-national.png\"\nimport nationalGeoVideo  from \"../assets/videos/1564676296-national-geographic.mp4\"\nconst axios = require('axios');\nconst Viewers = () => {\n    useEffect(()=>{\n        axios.get(`https://www.flicknplay.com/secure/homepage/lists/290`).then((response) => {\n\n            console.log(response.data)\n    })\n    },[])\n  return (\n    <Container>\n      <Wrap>\n        <img src={disneyImage} alt=\"\" />\n        <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={disneyVideo} type=\"video/mp4\" />\n        </video>\n      </Wrap>\n      <Wrap>\n        {/* Chrome does not allow any video to be autoplayed if it's not 'muted' */}\n        <img src={pixerImage} alt=\"\" />\n        <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={pixerVideo} type=\"video/mp4\" />\n        </video>\n      </Wrap>\n      <Wrap>\n        <img src={marvelImage} alt=\"\" />\n        <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={marvelVideo} type=\"video/mp4\" />\n        </video>\n      </Wrap>\n      <Wrap>\n        <img src={starWarImage} alt=\"\" />\n        <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source src={starWarVideo} type=\"video/mp4\" />\n        </video>\n      </Wrap>\n      <Wrap>\n        <img src={nationaGeoImage} alt=\"\" />\n        <video autoPlay={true} muted={true} loop={true} playsInline={true}>\n          <source\n            src={nationalGeoVideo}\n            type=\"video/mp4\"\n          />\n        </video>\n      </Wrap>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin-top: 4px;\n  padding: 30px 0px 26px;\n  display: grid;\n  grid-gap: 25px;\n  grid-template-columns: repeat(5, minmax(0, 1fr));\n  @media (max-width: 768px) {\n    grid-template-columns: repeat(1, minmax(0, 1fr));\n  }\n`;\n\nconst Wrap = styled.div`\n  padding-top: 56.25%;\n  border-radius: 10px;\n  box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n    rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n  cursor: pointer;\n  overflow: hidden;\n  position: relative;\n  transition: all 250ms cubic-bezier(0.25, 0.46, 0.45, 0.94) 0s;\n  border: 3px solid rgba(249, 249, 249, 0.1);\n\n  img {\n    inset: 0px;\n    display: block;\n    height: 100%;\n    ${\n      \"\" /* the image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit: */\n    }\n    object-fit: cover;\n    opacity: 1;\n    position: absolute;\n    transition: opacity 500ms ease-in-out 0s;\n    width: 100%;\n    z-index: 1;\n    top: 0;\n  }\n  video {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0px;\n    opacity: 0;\n    z-index: 0;\n  }\n  &:hover {\n    box-shadow: rgb(0 0 0 / 80%) 0px 40px 58px -16px,\n      rgb(0 0 0 / 72%) 0px 30px 22px -10px;\n    transform: scale(1.05);\n    border-color: rgba(249, 249, 249, 0.8);\n    video {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default Viewers;\n"]},"metadata":{},"sourceType":"module"}