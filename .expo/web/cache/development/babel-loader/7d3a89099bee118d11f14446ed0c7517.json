{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, fonts } from \"../constants\";\nimport SvgArrowRight from \"./icons/Svg.ArrowRight\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TouchLineItem = function TouchLineItem(_ref) {\n  var icon = _ref.icon,\n      iconSize = _ref.iconSize,\n      onPress = _ref.onPress,\n      text = _ref.text;\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onPress,\n    style: styles.container,\n    children: [icon && _jsx(View, {\n      style: styles.icon,\n      children: React.cloneElement(icon, {\n        size: iconSize\n      })\n    }), _jsx(Text, {\n      style: styles.text,\n      children: text\n    }), _jsx(View, {\n      style: styles.arrow,\n      children: _jsx(SvgArrowRight, {\n        active: false,\n        size: iconSize\n      })\n    })]\n  });\n};\n\nTouchLineItem.defaultProps = {\n  icon: null,\n  iconSize: 20\n};\nTouchLineItem.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  iconSize: PropTypes.number\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderBottomColor: colors.inactiveGrey,\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginLeft: 16,\n    paddingRight: 16,\n    paddingVertical: 20\n  },\n  icon: {\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  text: {\n    color: colors.white,\n    flex: 2,\n    fontFamily: fonts.regular,\n    fontSize: 16\n  },\n  arrow: {\n    justifyContent: 'center'\n  }\n});\nexport default TouchLineItem;","map":{"version":3,"sources":["C:/Users/dev/Documents/react/flicknplayreacttv-main/src/components/TouchLineItem.js"],"names":["React","PropTypes","colors","fonts","SvgArrowRight","TouchLineItem","icon","iconSize","onPress","text","styles","container","cloneElement","size","arrow","defaultProps","propTypes","func","isRequired","string","element","number","StyleSheet","create","borderBottomColor","inactiveGrey","borderBottomWidth","flexDirection","justifyContent","marginLeft","paddingRight","paddingVertical","marginRight","color","white","flex","fontFamily","regular","fontSize"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SAASC,MAAT,EAAiBC,KAAjB;AAEA,OAAOC,aAAP;;;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,QAAT,QAASA,QAAT;AAAA,MAAmBC,OAAnB,QAAmBA,OAAnB;AAAA,MAA4BC,IAA5B,QAA4BA,IAA5B;AAAA,SACpB,MAAC,gBAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,KAAK,EAAEE,MAAM,CAACC,SAHhB;AAAA,eAKGL,IAAI,IACH,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACJ,IAApB;AAAA,gBACGN,KAAK,CAACY,YAAN,CAAmBN,IAAnB,EAAyB;AAAEO,QAAAA,IAAI,EAAEN;AAAR,OAAzB;AADH,MANJ,EAUE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEG,MAAM,CAACD,IAApB;AAAA,gBAA2BA;AAA3B,MAVF,EAWE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACI,KAApB;AAAA,gBACE,KAAC,aAAD;AAAe,QAAA,MAAM,EAAE,KAAvB;AAA8B,QAAA,IAAI,EAAEP;AAApC;AADF,MAXF;AAAA,IADoB;AAAA,CAAtB;;AAkBAF,aAAa,CAACU,YAAd,GAA6B;AAC3BT,EAAAA,IAAI,EAAE,IADqB;AAE3BC,EAAAA,QAAQ,EAAE;AAFiB,CAA7B;AAKAF,aAAa,CAACW,SAAd,GAA0B;AAExBR,EAAAA,OAAO,EAAEP,SAAS,CAACgB,IAAV,CAAeC,UAFA;AAGxBT,EAAAA,IAAI,EAAER,SAAS,CAACkB,MAAV,CAAiBD,UAHC;AAMxBZ,EAAAA,IAAI,EAAEL,SAAS,CAACmB,OANQ;AAOxBb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB;AAPI,CAA1B;AAUA,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,iBAAiB,EAAEtB,MAAM,CAACuB,YADjB;AAETC,IAAAA,iBAAiB,EAAE,CAFV;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,cAAc,EAAE,eAJP;AAKTC,IAAAA,UAAU,EAAE,EALH;AAMTC,IAAAA,YAAY,EAAE,EANL;AAOTC,IAAAA,eAAe,EAAE;AAPR,GADoB;AAU/BzB,EAAAA,IAAI,EAAE;AACJsB,IAAAA,cAAc,EAAE,QADZ;AAEJI,IAAAA,WAAW,EAAE;AAFT,GAVyB;AAc/BvB,EAAAA,IAAI,EAAE;AACJwB,IAAAA,KAAK,EAAE/B,MAAM,CAACgC,KADV;AAEJC,IAAAA,IAAI,EAAE,CAFF;AAGJC,IAAAA,UAAU,EAAEjC,KAAK,CAACkC,OAHd;AAIJC,IAAAA,QAAQ,EAAE;AAJN,GAdyB;AAoB/BxB,EAAAA,KAAK,EAAE;AACLc,IAAAA,cAAc,EAAE;AADX;AApBwB,CAAlB,CAAf;AAyBA,eAAevB,aAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { colors, fonts } from '../constants';\n\nimport SvgArrowRight from './icons/Svg.ArrowRight';\n\nconst TouchLineItem = ({ icon, iconSize, onPress, text }) => (\n  <TouchableOpacity\n    activeOpacity={0.7}\n    onPress={onPress}\n    style={styles.container}\n  >\n    {icon && (\n      <View style={styles.icon}>\n        {React.cloneElement(icon, { size: iconSize })}\n      </View>\n    )}\n    <Text style={styles.text}>{text}</Text>\n    <View style={styles.arrow}>\n      <SvgArrowRight active={false} size={iconSize} />\n    </View>\n  </TouchableOpacity>\n);\n\nTouchLineItem.defaultProps = {\n  icon: null,\n  iconSize: 20\n};\n\nTouchLineItem.propTypes = {\n  // required\n  onPress: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n\n  // optional\n  icon: PropTypes.element,\n  iconSize: PropTypes.number\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderBottomColor: colors.inactiveGrey,\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginLeft: 16,\n    paddingRight: 16,\n    paddingVertical: 20\n  },\n  icon: {\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  text: {\n    color: colors.white,\n    flex: 2,\n    fontFamily: fonts.regular,\n    fontSize: 16\n  },\n  arrow: {\n    justifyContent: 'center'\n  }\n});\n\nexport default TouchLineItem;\n"]},"metadata":{},"sourceType":"module"}