{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { BaseGesture, Gesture } from \"./gesture\";\n\nfunction extendRelation(currentRelation, extendWith) {\n  if (currentRelation === undefined) {\n    return _toConsumableArray(extendWith);\n  } else {\n    return [].concat(_toConsumableArray(currentRelation), _toConsumableArray(extendWith));\n  }\n}\n\nexport var ComposedGesture = function (_Gesture) {\n  _inherits(ComposedGesture, _Gesture);\n\n  function ComposedGesture() {\n    var _this;\n\n    _classCallCheck(this, ComposedGesture);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComposedGesture).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"gestures\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"simultaneousGestures\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"requireGesturesToFail\", []);\n\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n\n    _this.gestures = gestures;\n    return _this;\n  }\n\n  _createClass(ComposedGesture, [{\n    key: \"prepareSingleGesture\",\n    value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof BaseGesture) {\n        var newConfig = _objectSpread({}, gesture.config);\n\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {\n      for (var _iterator = this.gestures, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _gesture = _ref;\n        this.prepareSingleGesture(_gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      for (var _iterator2 = this.gestures, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray2) {\n          if (_i2 >= _iterator2.length) break;\n          _ref2 = _iterator2[_i2++];\n        } else {\n          _i2 = _iterator2.next();\n          if (_i2.done) break;\n          _ref2 = _i2.value;\n        }\n\n        var _gesture2 = _ref2;\n\n        _gesture2.initialize();\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      });\n    }\n  }]);\n\n  return ComposedGesture;\n}(Gesture);\nexport var SimultaneousGesture = function (_ComposedGesture) {\n  _inherits(SimultaneousGesture, _ComposedGesture);\n\n  function SimultaneousGesture() {\n    _classCallCheck(this, SimultaneousGesture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SimultaneousGesture).apply(this, arguments));\n  }\n\n  _createClass(SimultaneousGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var simultaneousArray = this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      }).concat(this.simultaneousGestures);\n\n      for (var _iterator3 = this.gestures, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var _gesture3 = _ref3;\n        this.prepareSingleGesture(_gesture3, simultaneousArray, this.requireGesturesToFail);\n      }\n    }\n  }]);\n\n  return SimultaneousGesture;\n}(ComposedGesture);\nexport var ExclusiveGesture = function (_ComposedGesture2) {\n  _inherits(ExclusiveGesture, _ComposedGesture2);\n\n  function ExclusiveGesture() {\n    _classCallCheck(this, ExclusiveGesture);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ExclusiveGesture).apply(this, arguments));\n  }\n\n  _createClass(ExclusiveGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var gestureArrays = this.gestures.map(function (gesture) {\n        return gesture.toGestureArray();\n      });\n      var requireToFail = [];\n\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }]);\n\n  return ExclusiveGesture;\n}(ComposedGesture);","map":{"version":3,"mappings":"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","names":["BaseGesture","Gesture","extendRelation","currentRelation","extendWith","undefined","ComposedGesture","constructor","_defineProperty","gestures","gesture","simultaneousGestures","requireGesturesToFail","newConfig","config","simultaneousWith","requireToFail","prepare","prepareSingleGesture","initialize","flatMap","toGestureArray","SimultaneousGesture","simultaneousArray","concat","ExclusiveGesture","gestureArrays","map","i","length"],"sources":["gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    const simultaneousArray = this.gestures\n      .flatMap((gesture) => gesture.toGestureArray())\n      .concat(this.simultaneousGestures);\n\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        simultaneousArray,\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"]},"metadata":{},"sourceType":"module"}