{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar backgroundColor = 'transparent';\nvar styles = StyleSheet.create({\n  text: {\n    fontWeight: '400',\n    color: 'white',\n    fontSize: 17\n  }\n});\n\nvar Time = function (_Component) {\n  _inherits(Time, _Component);\n\n  function Time(props) {\n    var _this;\n\n    _classCallCheck(this, Time);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Time).call(this, props));\n    _this.ball = new Animated.Value(0);\n    Animated.timing(_this.ball, {\n      toValue: 1,\n      duration: _this.props.time,\n      useNativeDriver: true\n    }).start();\n    return _this;\n  }\n\n  _createClass(Time, [{\n    key: \"getTime\",\n    value: function getTime(time) {\n      var secs = time % 60;\n      var s2 = (time - secs) / 60;\n      var mins = s2 % 60;\n      var hrs = (s2 - mins) / 60;\n      var hours = this.addZeros(hrs) > 0 ? this.addZeros(hrs) + \":\" : '';\n      return \"\" + hours + this.addZeros(mins) + \":\" + this.addZeros(secs);\n    }\n  }, {\n    key: \"addZeros\",\n    value: function addZeros(time) {\n      return time < 10 ? \"0\" + time : time;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var animStyle = {\n        transform: [{\n          translateX: this.props.time * (Dimensions.get('window').width - 73) / (this.props.completeDuration > 0 ? this.props.completeDuration : 1) - 9\n        }]\n      };\n      return _jsx(Animated.View, {\n        style: [animStyle, {\n          width: 80,\n          justifyContent: 'center',\n          alignItems: 'center'\n        }],\n        children: _jsx(Text, {\n          style: styles.text,\n          children: this.getTime(parseInt(this.props.time, 10))\n        })\n      });\n    }\n  }]);\n\n  return Time;\n}(Component);\n\nTime.propTypes = {\n  time: PropTypes.number.isRequired,\n  theme: PropTypes.string.isRequired,\n  completeDuration: PropTypes.number.isRequired\n};\nexport { Time };","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/node_modules/react-native-video-players/src/VideoPlayerComponents/components/Time.js"],"names":["React","Component","PropTypes","backgroundColor","styles","StyleSheet","create","text","fontWeight","color","fontSize","Time","props","ball","Animated","Value","timing","toValue","duration","time","useNativeDriver","start","secs","s2","mins","hrs","hours","addZeros","animStyle","transform","translateX","Dimensions","get","width","completeDuration","justifyContent","alignItems","getTime","parseInt","propTypes","number","isRequired","theme","string"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAGA,IAAMC,eAAe,GAAG,aAAxB;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,QAAQ,EAAE;AAHN;AADyB,CAAlB,CAAf;;IAQMC,I;;;AAEJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AAEA,UAAKC,IAAL,GAAY,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAZ;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAKH,IAArB,EAA2B;AACzBI,MAAAA,OAAO,EAAE,CADgB;AAEzBC,MAAAA,QAAQ,EAAE,MAAKN,KAAL,CAAWO,IAFI;AAGzBC,MAAAA,eAAe,EAAE;AAHQ,KAA3B,EAIGC,KAJH;AAJiB;AAUlB;;;;4BAEOF,I,EAAM;AAEZ,UAAMG,IAAI,GAAGH,IAAI,GAAG,EAApB;AACA,UAAMI,EAAE,GAAG,CAACJ,IAAI,GAAGG,IAAR,IAAgB,EAA3B;AACA,UAAME,IAAI,GAAGD,EAAE,GAAG,EAAlB;AACA,UAAME,GAAG,GAAG,CAACF,EAAE,GAAGC,IAAN,IAAc,EAA1B;AACA,UAAME,KAAK,GAAG,KAAKC,QAAL,CAAcF,GAAd,IAAqB,CAArB,GAA4B,KAAKE,QAAL,CAAcF,GAAd,CAA5B,SAAoD,EAAlE;AACA,kBAAUC,KAAV,GAAkB,KAAKC,QAAL,CAAcH,IAAd,CAAlB,SAAyC,KAAKG,QAAL,CAAcL,IAAd,CAAzC;AACD;;;6BAEQH,I,EAAM;AACb,aAAQA,IAAI,GAAG,EAAR,SAAmBA,IAAnB,GAA6BA,IAApC;AACD;;;6BAEQ;AAEP,UAAMS,SAAS,GAAG;AAChBC,QAAAA,SAAS,EAAE,CAAC;AAGVC,UAAAA,UAAU,EAAG,KAAKlB,KAAL,CAAWO,IAAX,IAAmBY,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAApD,KAA2D,KAAKrB,KAAL,CAAWsB,gBAAX,GAA8B,CAA9B,GAAkC,KAAKtB,KAAL,CAAWsB,gBAA7C,GAAgE,CAA3H,CAAD,GAAkI;AAHpI,SAAD;AADK,OAAlB;AAOA,aACE,KAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE,CAACN,SAAD,EAAY;AAAEK,UAAAA,KAAK,EAAE,EAAT;AAAaE,UAAAA,cAAc,EAAE,QAA7B;AAAuCC,UAAAA,UAAU,EAAE;AAAnD,SAAZ,CAAtB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEhC,MAAM,CAACG,IAApB;AAAA,oBAA2B,KAAK8B,OAAL,CAAaC,QAAQ,CAAC,KAAK1B,KAAL,CAAWO,IAAZ,EAAkB,EAAlB,CAArB;AAA3B;AADF,QADF;AAKD;;;;EA1CgBlB,S;;AA6CnBU,IAAI,CAAC4B,SAAL,GAAiB;AACfpB,EAAAA,IAAI,EAAEjB,SAAS,CAACsC,MAAV,CAAiBC,UADR;AAEfC,EAAAA,KAAK,EAAExC,SAAS,CAACyC,MAAV,CAAiBF,UAFT;AAGfP,EAAAA,gBAAgB,EAAEhC,SAAS,CAACsC,MAAV,CAAiBC;AAHpB,CAAjB;AAMA,SAAS9B,IAAT","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Text, StyleSheet, Animated, Dimensions } from 'react-native'\r\n\r\nconst backgroundColor = 'transparent'\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontWeight: '400',\r\n    color: 'white',\r\n    fontSize: 17\r\n  }\r\n})\r\n\r\nclass Time extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.ball = new Animated.Value(0)\r\n    Animated.timing(this.ball, {\r\n      toValue: 1,\r\n      duration: this.props.time,\r\n      useNativeDriver: true\r\n    }).start()\r\n\r\n  }\r\n\r\n  getTime(time) {\r\n    // format the seconds saved into 00:00:00\r\n    const secs = time % 60\r\n    const s2 = (time - secs) / 60\r\n    const mins = s2 % 60\r\n    const hrs = (s2 - mins) / 60\r\n    const hours = this.addZeros(hrs) > 0 ? `${this.addZeros(hrs)}:` : ''\r\n    return `${hours}${this.addZeros(mins)}:${this.addZeros(secs)}`\r\n  }\r\n\r\n  addZeros(time) {\r\n    return (time < 10) ? (`0${time}`) : time\r\n  }\r\n\r\n  render() {\r\n\r\n    const animStyle = {\r\n      transform: [{\r\n        //for reference of calculation\r\n        // translateX: (15 + 5  + 11) + this.props.time * (Dimensions.get('window').width - 40 - 33) / (this.props.completeDuration > 0 ? this.props.completeDuration : 1) - 40\r\n        translateX: (this.props.time * (Dimensions.get('window').width - 73) / (this.props.completeDuration > 0 ? this.props.completeDuration : 1)) - 9\r\n      }]\r\n    }\r\n    return (\r\n      <Animated.View style={[animStyle, { width: 80, justifyContent: 'center', alignItems: 'center' }]}>\r\n        <Text style={styles.text}>{this.getTime(parseInt(this.props.time, 10))}</Text>\r\n      </Animated.View>\r\n    )\r\n  }\r\n}\r\n\r\nTime.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  theme: PropTypes.string.isRequired,\r\n  completeDuration: PropTypes.number.isRequired,\r\n}\r\n\r\nexport { Time }\r\n"]},"metadata":{},"sourceType":"module"}