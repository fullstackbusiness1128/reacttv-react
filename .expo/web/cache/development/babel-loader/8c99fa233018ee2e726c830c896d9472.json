{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, fonts, gStyle, images } from \"../constants\";\nimport HeaderManage from \"../components/HeaderManage\";\nimport SvgEdit from \"../components/icons/Svg.Edit\";\nimport SvgPlus from \"../components/icons/Svg.Plus\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ModalManageProfiles = function ModalManageProfiles(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: [gStyle.container, {\n      backgroundColor: colors.black\n    }],\n    children: [_jsx(HeaderManage, {}), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.containerUser,\n        children: [_jsx(Image, {\n          source: images.robot,\n          style: styles.avatar\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Caleb\"\n        }), _jsx(View, {\n          style: styles.overlay\n        }), _jsx(View, {\n          style: styles.containerSvg,\n          children: _jsx(SvgEdit, {\n            active: true,\n            size: 40\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.containerUser,\n        children: [_jsx(Image, {\n          source: images.penguin,\n          style: styles.avatar\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Kim\"\n        }), _jsx(View, {\n          style: styles.overlay\n        }), _jsx(View, {\n          style: styles.containerSvg,\n          children: _jsx(SvgEdit, {\n            active: true,\n            size: 40\n          })\n        })]\n      }), _jsxs(TouchableOpacity, {\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return navigation.navigate('ModalAddProfile');\n        },\n        style: styles.containerUser,\n        children: [_jsx(View, {\n          style: styles.containerPlus,\n          children: _jsx(View, {\n            style: styles.plusBackground,\n            children: _jsx(SvgPlus, {\n              active: true,\n              size: 40\n            })\n          })\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"Add Profile\"\n        })]\n      })]\n    })]\n  });\n};\n\nModalManageProfiles.propTypes = {\n  navigation: PropTypes.object.isRequired\n};\nvar BLOCK_SIZE = 108;\nvar styles = StyleSheet.create({\n  container: {\n    alignSelf: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    paddingHorizontal: 16,\n    paddingVertical: 60,\n    width: 280\n  },\n  containerUser: {\n    marginBottom: 16\n  },\n  containerSvg: {\n    alignItems: 'center',\n    height: BLOCK_SIZE,\n    justifyContent: 'center',\n    position: 'absolute',\n    width: BLOCK_SIZE\n  },\n  overlay: {\n    backgroundColor: colors.black50,\n    height: BLOCK_SIZE,\n    position: 'absolute',\n    top: 0,\n    width: BLOCK_SIZE\n  },\n  avatar: {\n    height: BLOCK_SIZE,\n    resizeMode: 'contain',\n    width: BLOCK_SIZE\n  },\n  text: {\n    color: colors.white,\n    fontFamily: fonts.regular,\n    fontSize: 16,\n    marginTop: 8,\n    textAlign: 'center'\n  },\n  containerPlus: {\n    alignItems: 'center',\n    height: BLOCK_SIZE,\n    justifyContent: 'center',\n    width: BLOCK_SIZE\n  },\n  plusBackground: {\n    alignItems: 'center',\n    backgroundColor: colors.moreAddProfileBg,\n    borderRadius: 34,\n    height: 68,\n    justifyContent: 'center',\n    width: 68\n  }\n});\nexport default ModalManageProfiles;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/screens/ModalManageProfiles.js"],"names":["React","PropTypes","colors","fonts","gStyle","images","HeaderManage","SvgEdit","SvgPlus","ModalManageProfiles","navigation","container","backgroundColor","black","styles","containerUser","robot","avatar","text","overlay","containerSvg","penguin","navigate","containerPlus","plusBackground","propTypes","object","isRequired","BLOCK_SIZE","StyleSheet","create","alignSelf","flexDirection","flexWrap","justifyContent","paddingHorizontal","paddingVertical","width","marginBottom","alignItems","height","position","black50","top","resizeMode","color","white","fontFamily","regular","fontSize","marginTop","textAlign","moreAddProfileBg","borderRadius"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { colors, fonts, gStyle, images } from '../constants';\r\n\r\n// components\r\nimport HeaderManage from '../components/HeaderManage';\r\n\r\n// icons\r\nimport SvgEdit from '../components/icons/Svg.Edit';\r\nimport SvgPlus from '../components/icons/Svg.Plus';\r\n\r\nconst ModalManageProfiles = ({ navigation }) => (\r\n  <View style={[gStyle.container, { backgroundColor: colors.black }]}>\r\n    <HeaderManage />\r\n\r\n    <View style={styles.container}>\r\n      <View style={styles.containerUser}>\r\n        <Image source={images.robot} style={styles.avatar} />\r\n        <Text style={styles.text}>Caleb</Text>\r\n        <View style={styles.overlay} />\r\n        <View style={styles.containerSvg}>\r\n          <SvgEdit active size={40} />\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.containerUser}>\r\n        <Image source={images.penguin} style={styles.avatar} />\r\n        <Text style={styles.text}>Kim</Text>\r\n        <View style={styles.overlay} />\r\n        <View style={styles.containerSvg}>\r\n          <SvgEdit active size={40} />\r\n        </View>\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n        activeOpacity={0.7}\r\n        onPress={() => navigation.navigate('ModalAddProfile')}\r\n        style={styles.containerUser}\r\n      >\r\n        <View style={styles.containerPlus}>\r\n          <View style={styles.plusBackground}>\r\n            <SvgPlus active size={40} />\r\n          </View>\r\n        </View>\r\n        <Text style={styles.text}>Add Profile</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  </View>\r\n);\r\n\r\nModalManageProfiles.propTypes = {\r\n  // required\r\n  navigation: PropTypes.object.isRequired\r\n};\r\n\r\nconst BLOCK_SIZE = 108;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignSelf: 'center',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-between',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 60,\r\n    width: 280\r\n  },\r\n  containerUser: {\r\n    marginBottom: 16\r\n  },\r\n  containerSvg: {\r\n    alignItems: 'center',\r\n    height: BLOCK_SIZE,\r\n    justifyContent: 'center',\r\n    position: 'absolute',\r\n    width: BLOCK_SIZE\r\n  },\r\n  overlay: {\r\n    backgroundColor: colors.black50,\r\n    height: BLOCK_SIZE,\r\n    position: 'absolute',\r\n    top: 0,\r\n    width: BLOCK_SIZE\r\n  },\r\n  avatar: {\r\n    height: BLOCK_SIZE,\r\n    resizeMode: 'contain',\r\n    width: BLOCK_SIZE\r\n  },\r\n  text: {\r\n    color: colors.white,\r\n    fontFamily: fonts.regular,\r\n    fontSize: 16,\r\n    marginTop: 8,\r\n    textAlign: 'center'\r\n  },\r\n  containerPlus: {\r\n    alignItems: 'center',\r\n    height: BLOCK_SIZE,\r\n    justifyContent: 'center',\r\n    width: BLOCK_SIZE\r\n  },\r\n  plusBackground: {\r\n    alignItems: 'center',\r\n    backgroundColor: colors.moreAddProfileBg,\r\n    borderRadius: 34,\r\n    height: 68,\r\n    justifyContent: 'center',\r\n    width: 68\r\n  }\r\n});\r\n\r\nexport default ModalManageProfiles;\r\n"]},"metadata":{},"sourceType":"module"}