{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Svg, { Path } from 'react-native-svg';\nimport { colors } from \"../../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var active = _ref.active,\n      fill = _ref.fill,\n      size = _ref.size;\n  var fillColor = fill;\n\n  if (fillColor === null) {\n    fillColor = active ? colors.white : colors.inactiveGrey;\n  }\n\n  return _jsx(Svg, {\n    height: size,\n    width: size,\n    viewBox: \"0 0 36 36\",\n    children: _jsx(Path, {\n      d: \"M21.866 24.337c-3.933 2.762-9.398 2.386-12.914-1.13-3.936-3.936-3.936-10.318 0-14.255 3.937-3.936 10.32-3.936 14.256 0 3.327 3.327 3.842 8.402 1.545 12.27l4.56 4.558a2 2 0 0 1 0 2.829l-.174.173a2 2 0 0 1-2.828 0l-4.445-4.445zm-5.786-1.36a6.897 6.897 0 1 0 0-13.794 6.897 6.897 0 0 0 0 13.794z\",\n      fill: fillColor\n    })\n  });\n};\n\nSvgSearch.defaultProps = {\n  active: true,\n  fill: null,\n  size: 32\n};\nSvgSearch.propTypes = {\n  active: PropTypes.bool,\n  fill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  size: PropTypes.number\n};\nexport default React.memo(SvgSearch);","map":{"version":3,"sources":["C:/Users/dev/Documents/react/flicknplayreacttv-main/src/components/icons/Svg.Search.js"],"names":["React","PropTypes","Svg","Path","colors","SvgSearch","active","fill","size","fillColor","white","inactiveGrey","defaultProps","propTypes","bool","oneOfType","number","string","memo"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,IAAcC,IAAd,QAA0B,kBAA1B;AACA,SAASC,MAAT;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA4B;AAAA,MAAzBC,MAAyB,QAAzBA,MAAyB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC5C,MAAIC,SAAS,GAAGF,IAAhB;;AAEA,MAAIE,SAAS,KAAK,IAAlB,EAAwB;AACtBA,IAAAA,SAAS,GAAGH,MAAM,GAAGF,MAAM,CAACM,KAAV,GAAkBN,MAAM,CAACO,YAA3C;AACD;;AAED,SACE,KAAC,GAAD;AAAK,IAAA,MAAM,EAAEH,IAAb;AAAmB,IAAA,KAAK,EAAEA,IAA1B;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAA,cACE,KAAC,IAAD;AACE,MAAA,CAAC,EAAC,sSADJ;AAEE,MAAA,IAAI,EAAEC;AAFR;AADF,IADF;AAQD,CAfD;;AAiBAJ,SAAS,CAACO,YAAV,GAAyB;AACvBN,EAAAA,MAAM,EAAE,IADe;AAEvBC,EAAAA,IAAI,EAAE,IAFiB;AAGvBC,EAAAA,IAAI,EAAE;AAHiB,CAAzB;AAMAH,SAAS,CAACQ,SAAV,GAAsB;AAEpBP,EAAAA,MAAM,EAAEL,SAAS,CAACa,IAFE;AAGpBP,EAAAA,IAAI,EAAEN,SAAS,CAACc,SAAV,CAAoB,CAACd,SAAS,CAACe,MAAX,EAAmBf,SAAS,CAACgB,MAA7B,CAApB,CAHc;AAIpBT,EAAAA,IAAI,EAAEP,SAAS,CAACe;AAJI,CAAtB;AAOA,eAAehB,KAAK,CAACkB,IAAN,CAAWb,SAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Svg, { Path } from 'react-native-svg';\nimport { colors } from '../../constants';\n\nconst SvgSearch = ({ active, fill, size }) => {\n  let fillColor = fill;\n\n  if (fillColor === null) {\n    fillColor = active ? colors.white : colors.inactiveGrey;\n  }\n\n  return (\n    <Svg height={size} width={size} viewBox=\"0 0 36 36\">\n      <Path\n        d=\"M21.866 24.337c-3.933 2.762-9.398 2.386-12.914-1.13-3.936-3.936-3.936-10.318 0-14.255 3.937-3.936 10.32-3.936 14.256 0 3.327 3.327 3.842 8.402 1.545 12.27l4.56 4.558a2 2 0 0 1 0 2.829l-.174.173a2 2 0 0 1-2.828 0l-4.445-4.445zm-5.786-1.36a6.897 6.897 0 1 0 0-13.794 6.897 6.897 0 0 0 0 13.794z\"\n        fill={fillColor}\n      />\n    </Svg>\n  );\n};\n\nSvgSearch.defaultProps = {\n  active: true,\n  fill: null,\n  size: 32\n};\n\nSvgSearch.propTypes = {\n  // optional\n  active: PropTypes.bool,\n  fill: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  size: PropTypes.number\n};\n\nexport default React.memo(SvgSearch);\n"]},"metadata":{},"sourceType":"module"}