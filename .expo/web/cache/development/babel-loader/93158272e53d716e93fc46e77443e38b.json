{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  border-radius: 4px;\\n  cursor: pointer;\\n  position: relative;\\n\\n  a {\\n    border-radius: 4px;\\n    \", \"\\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\\n    cursor: pointer;\\n    display: block;\\n    position: relative;\\n    padding: 4px;\\n    img {\\n      width: 100%;\\n      height: 100%;\\n    }\\n    &:hover {\\n      padding: 0;\\n      border: 4px solid rgba(249, 249, 249, 0.8);\\n      transition-duration: 300ms;\\n    }\\n  },\\n\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 20px;\\n  \", \"\\n\\n  & > button {\\n    opacity: 0;\\n\\n    height: 100%;\\n    width: 5vw;\\n    z-index: 1;\\n  }\\n\\n  &:hover {\\n    & > button {\\n      opacity: 1;\\n      \", \"\\n      transition: opacity 0.4s ease 0s;\\n    }\\n  }\\n\\n  ul li button {\\n    &:before {\\n      font-size: 10px;\\n      color: rgb(150, 158, 171);\\n    }\\n  }\\n\\n  li.slick-active button:before {\\n    color: white;\\n  }\\n\\n  .slick-list {\\n    overflow: initial;\\n  }\\n  .slick-prev {\\n    left: -60px;\\n  }\\n  .slick-next {\\n    right: -60px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, device, images } from \"../constants\";\nimport \"./icons/style.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport styled from \"styled-components\";\nimport example1 from \"../assets/slider-badag.jpg\";\nimport example2 from \"../assets/slider-badging.jpg\";\nimport example3 from \"../assets/slider-scale.jpg\";\nimport example4 from \"../assets/slider-scales.jpg\";\nimport SvgCategoryBackground from \"./icons/Svg.CategoryBackground\";\nimport CarouselCardItem, { SLIDER_WIDTH, ITEM_WIDTH } from \"./CarouselCardItem\";\nimport Button from \"./Button\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar categoriesData = [{\n  id: 1,\n  image: 'logoDisney'\n}, {\n  id: 2,\n  image: 'logoPixar'\n}, {\n  id: 3,\n  image: 'logoMarvel'\n}, {\n  id: 4,\n  image: 'logoStarWars'\n}, {\n  id: 5,\n  image: 'logoNatGeo'\n}];\n\nvar Categories = function Categories(_ref) {\n  var dataset1 = _ref.dataset1;\n  console.log(dataset1);\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true\n  };\n  var isCarousel = React.useRef(null);\n  var length = categoriesData.length;\n  var bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return _jsx(Carousel, _objectSpread({}, settings, {\n    children: dataset1.map(function (data, index) {\n      return _jsx(Wrap, {\n        children: _jsxs(\"a\", {\n          alt: \"image\",\n          children: [_jsxs(View, {\n            style: styles.bannertext,\n            children: [_jsxs(\"p\", {\n              children: [data.rating, \"/10\"]\n            }), _jsx(\"h3\", {\n              children: data.name\n            }), _jsx(\"p\", {\n              children: data.description\n            }), _jsx(Button, {\n              children: \"Watch Now\"\n            })]\n          }), _jsx(\"img\", {\n            src: data.backdrop,\n            alt: \"\"\n          })]\n        })\n      }, index);\n    })\n  }));\n};\n\nvar Carousel = styled(Slider)(_templateObject(), \"\", \"\");\nvar Wrap = styled.div(_templateObject2(), \"\");\nexport default Categories;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/components/Categories.js"],"names":["React","colors","device","images","Slider","styled","example1","example2","example3","example4","SvgCategoryBackground","CarouselCardItem","SLIDER_WIDTH","ITEM_WIDTH","Button","categoriesData","id","image","Categories","dataset1","console","log","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","isCarousel","useRef","length","bgWidth","Math","ceil","width","map","data","index","styles","bannertext","rating","name","description","backdrop","Carousel","Wrap","div"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB;AAEA;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AACA,OAAOC,QAAP;AAEA,OAAOC,qBAAP;AACA,OAAOC,gBAAP,IAA2BC,YAA3B,EAAyCC,UAAzC;AACA,OAAOC,MAAP;;;AAGA,IAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADqB,EAErB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFqB,EAGrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHqB,EAIrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJqB,EAKrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CALqB,CAAvB;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,MAAIG,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,QAAQ,EAAE;AANG,GAAf;AAQA,MAAMC,UAAU,GAAG7B,KAAK,CAAC8B,MAAN,CAAa,IAAb,CAAnB;AAViC,MAWzBC,MAXyB,GAWdhB,cAXc,CAWzBgB,MAXyB;AAYjC,MAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAU,CAAChC,MAAM,CAACiC,KAAP,GAAe,EAAf,GAAoBJ,MAAM,GAAG,EAA9B,IAAoCA,MAA9C,CAAhB;AAoCA,SAeE,KAAC,QAAD,oBAAcT,QAAd;AAAA,cAGEH,QAAQ,CAACiB,GAAT,CAAa,UAACC,IAAD,EAAMC,KAAN;AAAA,aACZ,KAAC,IAAD;AAAA,kBAEC;AAAG,UAAA,GAAG,EAAC,OAAP;AAAA,qBACA,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,MAAM,CAACC,UAApB;AAAA,uBACE;AAAA,yBAAIH,IAAI,CAACI,MAAT;AAAA,cADF,EAEE;AAAA,wBAAKJ,IAAI,CAACK;AAAV,cAFF,EAGE;AAAA,wBAAIL,IAAI,CAACM;AAAT,cAHF,EAIE,KAAC,MAAD;AAAA;AAAA,cAJF;AAAA,YADA,EAOE;AAAK,YAAA,GAAG,EAAEN,IAAI,CAACO,QAAf;AAAyB,YAAA,GAAG,EAAC;AAA7B,YAPF;AAAA;AAFD,SAAWN,KAAX,CADY;AAAA,KAAb;AAHF,KAfF;AAqDD,CArGD;;AAsGA,IAAMO,QAAQ,GAAGxC,MAAM,CAACD,MAAD,CAAT,oBAEV,EAFU,EAgBN,EAhBM,CAAd;AA4CA,IAAM0C,IAAI,GAAGzC,MAAM,CAAC0C,GAAV,qBAOJ,EAPI,CAAV;AAwDA,eAAe7B,UAAf","sourcesContent":["import * as React from 'react';\r\nimport { Image, StyleSheet, TouchableOpacity, View } from 'react-native';\r\nimport { colors, device, images } from '../constants';\r\n// import Carousel from 'react-native-snap-carousel';\r\nimport './icons/style.css'\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Slider from \"react-slick\";\r\nimport styled from \"styled-components\";\r\nimport example1 from '../assets/slider-badag.jpg' \r\nimport example2 from '../assets/slider-badging.jpg' \r\nimport example3 from '../assets/slider-scale.jpg' \r\nimport example4 from '../assets/slider-scales.jpg' \r\n// icons\r\nimport SvgCategoryBackground from './icons/Svg.CategoryBackground';\r\nimport CarouselCardItem, { SLIDER_WIDTH, ITEM_WIDTH } from './CarouselCardItem'\r\nimport Button from './Button';\r\n\r\n// data\r\nconst categoriesData = [\r\n  { id: 1, image: 'logoDisney' },\r\n  { id: 2, image: 'logoPixar' },\r\n  { id: 3, image: 'logoMarvel' },\r\n  { id: 4, image: 'logoStarWars' },\r\n  { id: 5, image: 'logoNatGeo' }\r\n];\r\n\r\n\r\nconst Categories = ({dataset1}) => {\r\n  console.log(dataset1)\r\n  let settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 400,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n  };\r\n  const isCarousel = React.useRef(null)\r\n  const { length } = categoriesData;\r\n  const bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\r\n  // return (\r\n    // <View style={styles.container}>\r\n    //   {categoriesData.map((item) => {\r\n        // return (\r\n        //   <Carousel\r\n        //   ref={(c) => {\r\n        //     console.log\r\n        //     // this.carousel = c;\r\n        //   }}\r\n        //   autoplay\r\n        //   autoplayInterval={5000}\r\n        //   data={categoriesData}\r\n        //   loop\r\n        //   style={[styles.containerBlock, {  height: bgWidth }]}\r\n        //   // renderItem={({ item: { image } }) => (\r\n            \r\n        //   // //  <View>\r\n        //   // //   <View style={styles.containerBlockBackground}>\r\n        //   // //     <SvgCategoryBackground height={bgWidth - 2} width={bgWidth} />\r\n        //   // //   </View>\r\n        //   // //   <Image source={images[item.image]} style={styles.image} />\r\n        //   // //   </View>\r\n        //   //   // console.log(\"image\",image,\"hello\",images)\r\n        //   // )}\r\n        //   renderItem={({ item: { image } }) => (\r\n        //     // console.log(\"image\",image,\"hello\",images)\r\n        //     <Image source={images[image]} width={itemWidth} />\r\n        //   )}\r\n        //   sliderWidth={device.width}\r\n        //   itemWidth={bgWidth}\r\n        // />\r\n        // );\r\n  //     })}\r\n  //   </View>\r\n  // );\r\n  return (\r\n    // <View>\r\n    //   <Carousel\r\n    //      autoplay\r\n    //      autoplayInterval={1000}\r\n    //     ref={isCarousel}\r\n    //     data={categoriesData}\r\n    //     renderItem={CarouselCardItem}\r\n    //     itemWidth={ITEM_WIDTH}\r\n    //     inactiveSlideShift={0}\r\n    //     style={{backgroundSize: 'auto',}}\r\n    //     useScrollView={true}\r\n    //     onSnapToItem = { index => this.setState({activeIndex:index}) }\r\n    //   />\r\n    // </View>\r\n    <Carousel {...settings}>\r\n    {/* update the settings by passing the setting object as props */}\r\n    {\r\n      dataset1.map((data,index)=>(\r\n       <Wrap key={index}>\r\n         \r\n        <a alt=\"image\">\r\n        <View style={styles.bannertext}>\r\n          <p>{data.rating}/10</p>\r\n          <h3>{data.name}</h3>\r\n          <p>{data.description}</p>\r\n          <Button>Watch Now</Button>\r\n          </View>\r\n          <img src={data.backdrop} alt=\"\" />\r\n        </a>\r\n      </Wrap>\r\n      )\r\n \r\n      )\r\n    }\r\n   \r\n    {/* <Wrap>\r\n      <a alt=\"image\">\r\n        <img src={example2} alt=\"\" />\r\n      </a>\r\n    </Wrap>\r\n    <Wrap>\r\n      <a>\r\n        <img src={example3} alt=\"\" />\r\n      </a>\r\n    </Wrap>\r\n    <Wrap>\r\n      <a alt=\"image\">\r\n        <img src={example4} alt=\"\" />\r\n      </a>\r\n    </Wrap> */}\r\n  </Carousel>\r\n  )\r\n};\r\nconst Carousel = styled(Slider)`\r\n  margin-top: 20px;\r\n  ${\"\" /* Overwriting the styles */}\r\n\r\n  & > button {\r\n    opacity: 0;\r\n\r\n    height: 100%;\r\n    width: 5vw;\r\n    z-index: 1;\r\n  }\r\n\r\n  &:hover {\r\n    & > button {\r\n      opacity: 1;\r\n      ${\r\n        \"\" /* 0.4s represents time taken for transition and 0s represents after how much time transition will start or take effect */\r\n      }\r\n      transition: opacity 0.4s ease 0s;\r\n    }\r\n  }\r\n\r\n  ul li button {\r\n    &:before {\r\n      font-size: 10px;\r\n      color: rgb(150, 158, 171);\r\n    }\r\n  }\r\n\r\n  li.slick-active button:before {\r\n    color: white;\r\n  }\r\n\r\n  .slick-list {\r\n    overflow: initial;\r\n  }\r\n  .slick-prev {\r\n    left: -60px;\r\n  }\r\n  .slick-next {\r\n    right: -60px;\r\n  }\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  position: relative;\r\n\r\n  a {\r\n    border-radius: 4px;\r\n    ${\"\" /* This shadow code can created using Online calculators*/}\r\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\r\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\r\n    cursor: pointer;\r\n    display: block;\r\n    position: relative;\r\n    padding: 4px;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    &:hover {\r\n      padding: 0;\r\n      border: 4px solid rgba(249, 249, 249, 0.8);\r\n      transition-duration: 300ms;\r\n    }\r\n  },\r\n\r\n`;\r\n\r\n// const styles = StyleSheet.create({\r\n//   container: {\r\n//     alignItems: 'flex-start',\r\n\r\n//     justifyContent: 'space-between',\r\n//     paddingBottom: 8,\r\n//     paddingLeft: 16,\r\n//     paddingTop: 24\r\n//   },\r\n//   containerBlock: {\r\n//     alignItems: 'center',\r\n//     borderColor: colors.categoryBorder,\r\n//     borderRadius: 4,\r\n//     borderWidth: 1,\r\n//     flex: 1,\r\n//     justifyContent: 'center',\r\n//     marginRight: 16\r\n//   },\r\n//   containerBlockBackground: {\r\n//     borderRadius: 2,\r\n//     overflow: 'hidden',\r\n//     position: 'absolute'\r\n//   },\r\n//   image: {\r\n//     height: 100,\r\n//     width: 200\r\n//   }\r\n// });\r\n\r\nexport default Categories;\r\n"]},"metadata":{},"sourceType":"module"}