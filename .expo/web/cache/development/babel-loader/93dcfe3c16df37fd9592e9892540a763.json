{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  border-radius: 4px;\\n  cursor: pointer;\\n  position: relative;\\n\\n  a {\\n    border-radius: 4px;\\n    \", \"\\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\\n    cursor: pointer;\\n    display: block;\\n    position: relative;\\n    padding: 4px;\\n    img {\\n      width: 100%;\\n      height: 100%;\\n    }\\n    &:hover {\\n      padding: 0;\\n      border: 4px solid rgba(249, 249, 249, 0.8);\\n      transition-duration: 300ms;\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top: 20px;\\n  \", \"\\n\\n  & > button {\\n    opacity: 0;\\n\\n    height: 100%;\\n    width: 5vw;\\n    z-index: 1;\\n  }\\n\\n  &:hover {\\n    & > button {\\n      opacity: 1;\\n      \", \"\\n      transition: opacity 0.4s ease 0s;\\n    }\\n  }\\n\\n  ul li button {\\n    &:before {\\n      font-size: 10px;\\n      color: rgb(150, 158, 171);\\n    }\\n  }\\n\\n  li.slick-active button:before {\\n    color: white;\\n  }\\n\\n  .slick-list {\\n    overflow: initial;\\n  }\\n  .slick-prev {\\n    left: -60px;\\n  }\\n  .slick-next {\\n    right: -60px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, device, images } from \"../constants\";\nimport \"./icons/style.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport styled from \"styled-components\";\nimport SvgCategoryBackground from \"./icons/Svg.CategoryBackground\";\nimport CarouselCardItem, { SLIDER_WIDTH, ITEM_WIDTH } from \"./CarouselCardItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar categoriesData = [{\n  id: 1,\n  image: 'logoDisney'\n}, {\n  id: 2,\n  image: 'logoPixar'\n}, {\n  id: 3,\n  image: 'logoMarvel'\n}, {\n  id: 4,\n  image: 'logoStarWars'\n}, {\n  id: 5,\n  image: 'logoNatGeo'\n}];\n\nvar Categories = function Categories() {\n  var settings = {\n    dots: true,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true\n  };\n  var isCarousel = React.useRef(null);\n  var length = categoriesData.length;\n  var bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return _jsxs(Carousel, _objectSpread({}, settings, {\n    children: [_jsx(Wrap, {\n      children: _jsx(\"a\", {\n        alt: \"image\",\n        children: _jsx(\"img\", {\n          src: \"/images/slider-badag.jpg\",\n          alt: \"\"\n        })\n      })\n    }), _jsx(Wrap, {\n      children: _jsx(\"a\", {\n        alt: \"image\",\n        children: _jsx(\"img\", {\n          src: \"/images/slider-scale.jpg\",\n          alt: \"\"\n        })\n      })\n    }), _jsx(Wrap, {\n      children: _jsx(\"a\", {\n        children: _jsx(\"img\", {\n          src: \"/images/slider-badging.jpg\",\n          alt: \"\"\n        })\n      })\n    }), _jsx(Wrap, {\n      children: _jsx(\"a\", {\n        alt: \"image\",\n        children: _jsx(\"img\", {\n          src: \"/images/slider-scales.jpg\",\n          alt: \"\"\n        })\n      })\n    })]\n  }));\n};\n\nvar Carousel = styled(Slider)(_templateObject(), \"\", \"\");\nvar Wrap = styled.div(_templateObject2(), \"\");\nexport default Categories;","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/src/components/Categories.js"],"names":["React","colors","device","images","Slider","styled","SvgCategoryBackground","CarouselCardItem","SLIDER_WIDTH","ITEM_WIDTH","categoriesData","id","image","Categories","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","isCarousel","useRef","length","bgWidth","Math","ceil","width","Carousel","Wrap","div"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB;AAEA;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,qBAAP;AACA,OAAOC,gBAAP,IAA2BC,YAA3B,EAAyCC,UAAzC;;;AAGA,IAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADqB,EAErB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFqB,EAGrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHqB,EAIrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJqB,EAKrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CALqB,CAAvB;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIC,QAAQ,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE,CALH;AAMbC,IAAAA,QAAQ,EAAE;AANG,GAAf;AAQA,MAAMC,UAAU,GAAGrB,KAAK,CAACsB,MAAN,CAAa,IAAb,CAAnB;AATuB,MAUfC,MAVe,GAUJb,cAVI,CAUfa,MAVe;AAWvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACxB,MAAM,CAACyB,KAAP,GAAe,EAAf,GAAoBJ,MAAM,GAAG,EAA9B,IAAoCA,MAA9C,CAAhB;AAoCA,SAeE,MAAC,QAAD,oBAAcT,QAAd;AAAA,eAEA,KAAC,IAAD;AAAA,gBACE;AAAG,QAAA,GAAG,EAAC,OAAP;AAAA,kBACE;AAAK,UAAA,GAAG,EAAC,0BAAT;AAAoC,UAAA,GAAG,EAAC;AAAxC;AADF;AADF,MAFA,EAOA,KAAC,IAAD;AAAA,gBACE;AAAG,QAAA,GAAG,EAAC,OAAP;AAAA,kBACE;AAAK,UAAA,GAAG,EAAC,0BAAT;AAAoC,UAAA,GAAG,EAAC;AAAxC;AADF;AADF,MAPA,EAYA,KAAC,IAAD;AAAA,gBACE;AAAA,kBACE;AAAK,UAAA,GAAG,EAAC,4BAAT;AAAsC,UAAA,GAAG,EAAC;AAA1C;AADF;AADF,MAZA,EAiBA,KAAC,IAAD;AAAA,gBACE;AAAG,QAAA,GAAG,EAAC,OAAP;AAAA,kBACE;AAAK,UAAA,GAAG,EAAC,2BAAT;AAAqC,UAAA,GAAG,EAAC;AAAzC;AADF;AADF,MAjBA;AAAA,KAfF;AAuCD,CAtFD;;AAuFA,IAAMc,QAAQ,GAAGvB,MAAM,CAACD,MAAD,CAAT,oBAEV,EAFU,EAgBN,EAhBM,CAAd;AA4CA,IAAMyB,IAAI,GAAGxB,MAAM,CAACyB,GAAV,qBAOJ,EAPI,CAAV;AAuDA,eAAejB,UAAf","sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { colors, device, images } from '../constants';\n// import Carousel from 'react-native-snap-carousel';\nimport './icons/style.css'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport styled from \"styled-components\";\n// icons\nimport SvgCategoryBackground from './icons/Svg.CategoryBackground';\nimport CarouselCardItem, { SLIDER_WIDTH, ITEM_WIDTH } from './CarouselCardItem'\n\n// data\nconst categoriesData = [\n  { id: 1, image: 'logoDisney' },\n  { id: 2, image: 'logoPixar' },\n  { id: 3, image: 'logoMarvel' },\n  { id: 4, image: 'logoStarWars' },\n  { id: 5, image: 'logoNatGeo' }\n];\n\n\nconst Categories = () => {\n  let settings = {\n    dots: true,\n    infinite: true,\n    speed: 400,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n  };\n  const isCarousel = React.useRef(null)\n  const { length } = categoriesData;\n  const bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  // return (\n    // <View style={styles.container}>\n    //   {categoriesData.map((item) => {\n        // return (\n        //   <Carousel\n        //   ref={(c) => {\n        //     console.log\n        //     // this.carousel = c;\n        //   }}\n        //   autoplay\n        //   autoplayInterval={5000}\n        //   data={categoriesData}\n        //   loop\n        //   style={[styles.containerBlock, {  height: bgWidth }]}\n        //   // renderItem={({ item: { image } }) => (\n            \n        //   // //  <View>\n        //   // //   <View style={styles.containerBlockBackground}>\n        //   // //     <SvgCategoryBackground height={bgWidth - 2} width={bgWidth} />\n        //   // //   </View>\n        //   // //   <Image source={images[item.image]} style={styles.image} />\n        //   // //   </View>\n        //   //   // console.log(\"image\",image,\"hello\",images)\n        //   // )}\n        //   renderItem={({ item: { image } }) => (\n        //     // console.log(\"image\",image,\"hello\",images)\n        //     <Image source={images[image]} width={itemWidth} />\n        //   )}\n        //   sliderWidth={device.width}\n        //   itemWidth={bgWidth}\n        // />\n        // );\n  //     })}\n  //   </View>\n  // );\n  return (\n    // <View>\n    //   <Carousel\n    //      autoplay\n    //      autoplayInterval={1000}\n    //     ref={isCarousel}\n    //     data={categoriesData}\n    //     renderItem={CarouselCardItem}\n    //     itemWidth={ITEM_WIDTH}\n    //     inactiveSlideShift={0}\n    //     style={{backgroundSize: 'auto',}}\n    //     useScrollView={true}\n    //     onSnapToItem = { index => this.setState({activeIndex:index}) }\n    //   />\n    // </View>\n    <Carousel {...settings}>\n    {/* update the settings by passing the setting object as props */}\n    <Wrap>\n      <a alt=\"image\">\n        <img src=\"/images/slider-badag.jpg\" alt=\"\" />\n      </a>\n    </Wrap>\n    <Wrap>\n      <a alt=\"image\">\n        <img src=\"/images/slider-scale.jpg\" alt=\"\" />\n      </a>\n    </Wrap>\n    <Wrap>\n      <a>\n        <img src=\"/images/slider-badging.jpg\" alt=\"\" />\n      </a>\n    </Wrap>\n    <Wrap>\n      <a alt=\"image\">\n        <img src=\"/images/slider-scales.jpg\" alt=\"\" />\n      </a>\n    </Wrap>\n  </Carousel>\n  )\n};\nconst Carousel = styled(Slider)`\n  margin-top: 20px;\n  ${\"\" /* Overwriting the styles */}\n\n  & > button {\n    opacity: 0;\n\n    height: 100%;\n    width: 5vw;\n    z-index: 1;\n  }\n\n  &:hover {\n    & > button {\n      opacity: 1;\n      ${\n        \"\" /* 0.4s represents time taken for transition and 0s represents after how much time transition will start or take effect */\n      }\n      transition: opacity 0.4s ease 0s;\n    }\n  }\n\n  ul li button {\n    &:before {\n      font-size: 10px;\n      color: rgb(150, 158, 171);\n    }\n  }\n\n  li.slick-active button:before {\n    color: white;\n  }\n\n  .slick-list {\n    overflow: initial;\n  }\n  .slick-prev {\n    left: -60px;\n  }\n  .slick-next {\n    right: -60px;\n  }\n`;\n\nconst Wrap = styled.div`\n  border-radius: 4px;\n  cursor: pointer;\n  position: relative;\n\n  a {\n    border-radius: 4px;\n    ${\"\" /* This shadow code can created using Online calculators*/}\n    box-shadow: rgb(0 0 0 / 69%) 0px 26px 30px -10px,\n      rgb(0 0 0 / 73%) 0px 16px 10px -10px;\n    cursor: pointer;\n    display: block;\n    position: relative;\n    padding: 4px;\n    img {\n      width: 100%;\n      height: 100%;\n    }\n    &:hover {\n      padding: 0;\n      border: 4px solid rgba(249, 249, 249, 0.8);\n      transition-duration: 300ms;\n    }\n  }\n`;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     alignItems: 'flex-start',\n\n//     justifyContent: 'space-between',\n//     paddingBottom: 8,\n//     paddingLeft: 16,\n//     paddingTop: 24\n//   },\n//   containerBlock: {\n//     alignItems: 'center',\n//     borderColor: colors.categoryBorder,\n//     borderRadius: 4,\n//     borderWidth: 1,\n//     flex: 1,\n//     justifyContent: 'center',\n//     marginRight: 16\n//   },\n//   containerBlockBackground: {\n//     borderRadius: 2,\n//     overflow: 'hidden',\n//     position: 'absolute'\n//   },\n//   image: {\n//     height: 100,\n//     width: 200\n//   }\n// });\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}