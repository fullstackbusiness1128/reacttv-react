{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport PropTypes from 'prop-types';\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\nvar image = {\n  uri: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ9VZB5hU9xt5HU8MQjHIzLVHU8RDRhu1yVHg&usqp=CAU\"\n};\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MovieDetail1 = function MovieDetail1(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      segmentIndex = _useState2[0],\n      setSegmentIndex = _useState2[1];\n\n  var handleIndexChange = function handleIndexChange(index) {\n    setSegmentIndex(index);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(ImageBackground, {\n      source: image,\n      style: {\n        backgroundSize: 'cover',\n        backgroundPosition: backgroundPosition\n      },\n      children: [_jsxs(View, {\n        style: styles.container,\n        children: [_jsx(\"h1\", {\n          children: \"Parampara\"\n        }), _jsxs(View, {\n          style: {\n            display: 'block'\n          },\n          children: [_jsx(\"text\", {\n            style: styles.age,\n            children: \"12\"\n          }), _jsx(\"text\", {\n            style: styles.age,\n            children: \"AD)))\"\n          }), _jsx(\"text\", {\n            style: styles.age,\n            children: \"CC\"\n          }), _jsx(\"text\", {\n            style: styles.age1,\n            children: \"2013\"\n          }), _jsx(\"text\", {\n            style: styles.age1,\n            children: \"2h 12m\"\n          })]\n        }), _jsx(\"p\", {\n          children: \"Science Fiction,Super Hero, Action-Adventure\"\n        }), _jsxs(View, {\n          children: [_jsx(Button, {\n            title: \"PLAY\"\n          }), _jsx(Button, {\n            title: \"TRAILER\",\n            onPress: function onPress() {\n              return Alert.alert('Simple Button pressed');\n            }\n          })]\n        }), _jsx(\"p\", {\n          children: \"Tony Stark encounters a formidable foe called the Mandarin, and after failing to him, he embarks on a journey with relentless consequences.\"\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          children: _jsx(Text, {\n            children: \"Play\"\n          })\n        }), _jsxs(View, {\n          children: [\"+\", _jsx(Text, {\n            children: \"Wishlist\"\n          })]\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Share\"\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(FlatList, {\n          data: [{\n            key: 'తెలుగు'\n          }, {\n            key: 'मराठी'\n          }, {\n            key: 'हिंदी'\n          }, {\n            key: 'தமிழ்'\n          }, {\n            key: 'ಕನ್ನಡ'\n          }, {\n            key: 'বাংলা'\n          }, {\n            key: 'മലയാളം'\n          }],\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(Text, {\n              style: styles.item,\n              children: item.key\n            });\n          }\n        })\n      }), _jsx(SegmentedControlTab, {\n        values: [\"First\", \"Second\", \"Third\"],\n        selectedIndex: segmentIndex,\n        onTabPress: handleIndexChange\n      })]\n    })\n  });\n};\n\nMovieDetail1.propTypes = {\n  navigation: PropTypes.object.isRequired\n};\nvar styles = {\n  container: {\n    flex: 1,\n    paddingTop: '59px ',\n    paddingLeft: 60,\n    color: 'white'\n  },\n  age: {\n    background: 'black',\n    padding: 4,\n    margin: 5\n  },\n  age1: {\n    padding: 4,\n    margin: 5\n  }\n};\nexport default MovieDetail1;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/screens/movieDetails2.js"],"names":["React","PropTypes","SegmentedControlTab","image","uri","useState","MovieDetail1","navigation","segmentIndex","setSegmentIndex","handleIndexChange","index","backgroundSize","backgroundPosition","styles","container","display","age","age1","Alert","alert","key","item","propTypes","object","isRequired","flex","paddingTop","paddingLeft","color","background","padding","margin"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Text, View } from 'react-native-web'\r\nimport { TouchableOpacity, Button, FlatList ,ImageBackground} from 'react-native'\r\nimport PropTypes from 'prop-types';\r\nimport SegmentedControlTab from 'react-native-segmented-control-tab';\r\nconst image = { uri: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ9VZB5hU9xt5HU8MQjHIzLVHU8RDRhu1yVHg&usqp=CAU\" };\r\nimport { useState } from 'react';\r\n\r\n\r\nconst MovieDetail1 = ({ navigation }) => {\r\n    const [segmentIndex,setSegmentIndex]=useState(0)\r\n   const handleIndexChange = index => {\r\n    setSegmentIndex(index)\r\n          };\r\n        \r\n    return(\r\n        <View >\r\n             <ImageBackground source={image}  style={{backgroundSize:'cover',backgroundPosition}}>\r\n            <View style={styles.container}>\r\n                <h1>Parampara</h1>\r\n                <View style={{display: 'block'}}>\r\n                    <text style={styles.age}>12</text>\r\n                    <text style={styles.age}>AD)))</text>\r\n                    <text style={styles.age}>CC</text>\r\n                    <text style={styles.age1}>2013</text>\r\n                    <text style={styles.age1}>2h 12m</text>\r\n                   \r\n                </View>\r\n                <p>Science Fiction,Super Hero, Action-Adventure</p>\r\n                <View>\r\n                <Button\r\n                        title=\"PLAY\"\r\n                    />\r\n                    <Button\r\n                        title=\"TRAILER\"\r\n                        onPress={() => Alert.alert('Simple Button pressed')}\r\n                    />\r\n                </View>\r\n                <p>Tony Stark encounters a formidable foe called the Mandarin, and after failing to him, he embarks on a journey with relentless consequences.</p>\r\n            </View>\r\n            <View>\r\n                <TouchableOpacity>\r\n                    <Text>\r\n                        Play\r\n                    </Text>\r\n                </TouchableOpacity>\r\n                <View>\r\n                    +\r\n                    <Text>\r\n                        Wishlist\r\n                    </Text>\r\n                </View>\r\n                <View>\r\n                    \r\n                    <Text>\r\n                        Share\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n            <View>\r\n            <FlatList\r\n                data={[\r\n                {key: 'తెలుగు'},\r\n                {key: 'मराठी'},\r\n                {key: 'हिंदी'},\r\n                {key: 'தமிழ்'},\r\n                {key: 'ಕನ್ನಡ'},\r\n                {key: 'বাংলা'},\r\n                {key: 'മലയാളം'},\r\n                ]}\r\n                renderItem={({item}) => <Text style={styles.item}>{item.key}</Text>}\r\n            />\r\n            </View>\r\n\r\n            <SegmentedControlTab\r\n          values={[\"First\", \"Second\", \"Third\"]}\r\n          selectedIndex={segmentIndex}\r\n          onTabPress={handleIndexChange}\r\n        />\r\n            </ImageBackground>\r\n        </View>\r\n    )\r\n}\r\n    // const[selectedIndex,setSelectedIndex]=useState(0)\r\n\r\n;\r\n\r\nMovieDetail1.propTypes = {\r\n  // required\r\n  navigation: PropTypes.object.isRequired\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        paddingTop: '59px ',\r\n        paddingLeft:60,\r\n    color: 'white',\r\n      },\r\n    age: {\r\n        background: 'black',\r\n        padding: 4,\r\n        margin: 5,\r\n    },\r\n    age1: {\r\n        padding: 4,\r\n        margin: 5,\r\n    },\r\n    \r\n  \r\n}\r\nexport default MovieDetail1;\r\n"]},"metadata":{},"sourceType":"module"}