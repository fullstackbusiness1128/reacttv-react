{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PortalManager from \"./PortalManager\";\nexport var PortalContext = React.createContext(null);\n\nvar PortalHost = function (_React$Component) {\n  _inherits(PortalHost, _React$Component);\n\n  function PortalHost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PortalHost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PortalHost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"setManager\", function (manager) {\n      _this.manager = manager;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mount\", function (children) {\n      var key = _this.nextKey++;\n\n      if (_this.manager) {\n        _this.manager.mount(key, children);\n      } else {\n        _this.queue.push({\n          type: 'mount',\n          key: key,\n          children: children\n        });\n      }\n\n      return key;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (key, children) {\n      if (_this.manager) {\n        _this.manager.update(key, children);\n      } else {\n        var op = {\n          type: 'mount',\n          key: key,\n          children: children\n        };\n\n        var index = _this.queue.findIndex(function (o) {\n          return o.type === 'mount' || o.type === 'update' && o.key === key;\n        });\n\n        if (index > -1) {\n          _this.queue[index] = op;\n        } else {\n          _this.queue.push(op);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unmount\", function (key) {\n      if (_this.manager) {\n        _this.manager.unmount(key);\n      } else {\n        _this.queue.push({\n          type: 'unmount',\n          key: key\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"nextKey\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"queue\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"manager\", void 0);\n\n    return _this;\n  }\n\n  _createClass(PortalHost, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var manager = this.manager;\n      var queue = this.queue;\n\n      while (queue.length && manager) {\n        var action = queue.pop();\n\n        if (action) {\n          switch (action.type) {\n            case 'mount':\n              manager.mount(action.key, action.children);\n              break;\n\n            case 'update':\n              manager.update(action.key, action.children);\n              break;\n\n            case 'unmount':\n              manager.unmount(action.key);\n              break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PortalContext.Provider, {\n        value: {\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        collapsable: false,\n        pointerEvents: \"box-none\"\n      }, this.props.children), React.createElement(PortalManager, {\n        ref: this.setManager\n      }));\n    }\n  }]);\n\n  return PortalHost;\n}(React.Component);\n\nexport { PortalHost as default };\n\n_defineProperty(PortalHost, \"displayName\", 'Portal.Host');\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["React","PortalManager","PortalContext","createContext","PortalHost","args","_defineProperty","manager","children","key","nextKey","mount","queue","push","type","update","op","index","findIndex","o","unmount","length","action","pop","Provider","value","View","style","styles","container","collapsable","pointerEvents","props","ref","setManager","Component","StyleSheet","create","flex"],"sources":["PortalHost.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype Operation =\n  | { type: 'mount'; key: number; children: React.ReactNode }\n  | { type: 'update'; key: number; children: React.ReactNode }\n  | { type: 'unmount'; key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.ReactNode) => number;\n  update: (key: number, children: React.ReactNode) => void;\n  unmount: (key: number) => void;\n};\n\nexport const PortalContext = React.createContext<PortalMethods>(null as any);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal.Host>\n *     <Text>Content of the app</Text>\n *   </Portal.Host>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this.manager;\n    const queue = this.queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n      if (action) {\n        // eslint-disable-next-line default-case\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }\n\n  private setManager = (manager: PortalManager | undefined | null) => {\n    this.manager = manager;\n  };\n\n  private mount = (children: React.ReactNode) => {\n    const key = this.nextKey++;\n\n    if (this.manager) {\n      this.manager.mount(key, children);\n    } else {\n      this.queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  private update = (key: number, children: React.ReactNode) => {\n    if (this.manager) {\n      this.manager.update(key, children);\n    } else {\n      const op: Operation = { type: 'mount', key, children };\n      const index = this.queue.findIndex(\n        (o) => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        this.queue[index] = op;\n      } else {\n        this.queue.push(op as Operation);\n      }\n    }\n  };\n\n  private unmount = (key: number) => {\n    if (this.manager) {\n      this.manager.unmount(key);\n    } else {\n      this.queue.push({ type: 'unmount', key });\n    }\n  };\n\n  private nextKey = 0;\n  private queue: Operation[] = [];\n  private manager: PortalManager | null | undefined;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this.mount,\n          update: this.update,\n          unmount: this.unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View\n          style={styles.container}\n          collapsable={false}\n          pointerEvents=\"box-none\"\n        >\n          {this.props.children}\n        </View>\n        <PortalManager ref={this.setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}