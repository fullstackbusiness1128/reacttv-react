{"ast":null,"code":"import * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, device, images } from \"../constants\";\nimport Carousel from 'react-native-snap-carousel';\nimport ImageSlide from \"./ImageSlide\";\nimport SvgCategoryBackground from \"./icons/Svg.CategoryBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar categoriesData = [{\n  id: 1,\n  image: 'logoDisney'\n}, {\n  id: 2,\n  image: 'logoPixar'\n}, {\n  id: 3,\n  image: 'logoMarvel'\n}, {\n  id: 4,\n  image: 'logoStarWars'\n}, {\n  id: 5,\n  image: 'logoNatGeo'\n}];\n\nvar Categories = function Categories() {\n  var length = categoriesData.length;\n  var bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return _jsx(View, {\n    style: styles.container,\n    children: categoriesData.map(function (item) {\n      return _jsx(TouchableOpacity, {\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return null;\n        },\n        style: [styles.containerBlock, {\n          height: bgWidth\n        }],\n        children: _jsx(Carousel, {\n          autoplay: true,\n          autoplayInterval: 5000,\n          data: categoriesData,\n          loop: true,\n          renderItem: function renderItem(_ref) {\n            var image = _ref.item.image;\n            return _jsx(_Fragment, {\n              children: _jsxs(View, {\n                style: styles.containerBlockBackground,\n                children: [_jsx(SvgCategoryBackground, {\n                  height: bgWidth - 2,\n                  width: bgWidth\n                }), _jsx(ImageSlide, {\n                  source: images[item.image],\n                  style: bgWidth\n                })]\n              })\n            });\n          },\n          sliderWidth: device.width,\n          itemWidth: bgWidth\n        })\n      }, item.id);\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingTop: 24\n  },\n  containerBlock: {\n    alignItems: 'center',\n    borderColor: colors.categoryBorder,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  containerBlockBackground: {\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  image: {\n    height: 36,\n    width: 64\n  }\n});\nexport default Categories;","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/src/components/Categories.js"],"names":["React","colors","device","images","Carousel","ImageSlide","SvgCategoryBackground","categoriesData","id","image","Categories","length","bgWidth","Math","ceil","width","styles","container","map","item","containerBlock","height","containerBlockBackground","StyleSheet","create","alignItems","flexDirection","justifyContent","paddingBottom","paddingLeft","paddingTop","borderColor","categoryBorder","borderRadius","borderWidth","flex","marginRight","overflow","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { colors, device, images } from '../constants';\nimport Carousel from 'react-native-snap-carousel';\nimport ImageSlide from './ImageSlide';\n\n// icons\nimport SvgCategoryBackground from './icons/Svg.CategoryBackground';\n\n// data\nconst categoriesData = [\n  { id: 1, image: 'logoDisney' },\n  { id: 2, image: 'logoPixar' },\n  { id: 3, image: 'logoMarvel' },\n  { id: 4, image: 'logoStarWars' },\n  { id: 5, image: 'logoNatGeo' }\n];\n\nconst Categories = () => {\n  const { length } = categoriesData;\n  const bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return (\n    <View style={styles.container}>\n      {categoriesData.map((item) => {\n        return (\n          <TouchableOpacity\n            activeOpacity={0.7}\n            key={item.id}\n            onPress={() => null}\n            style={[styles.containerBlock, {  height: bgWidth }]}\n          >\n                <Carousel\n      \n        autoplay\n        autoplayInterval={5000}\n        data={categoriesData}\n        loop\n        renderItem={({ item: { image } }) => (\n          // console.log(\"image\",image,\"hello\",images)\n          <>\n          <View style={styles.containerBlockBackground}>\n          <SvgCategoryBackground height={bgWidth - 2} width={bgWidth} />\n          <ImageSlide source={images[item.image]} style={bgWidth}/>\n        </View>\n        \n          </>\n        )}\n        sliderWidth={device.width}\n        itemWidth={bgWidth}\n      />\n            {/* <View style={styles.containerBlockBackground}>\n              <SvgCategoryBackground height={bgWidth - 2} width={bgWidth} />\n            </View> */}\n            {/* <Image source={images[item.image]} style={styles.image} /> */}\n          </TouchableOpacity>\n        );\n      })}\n       \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingTop: 24\n  },\n  containerBlock: {\n    alignItems: 'center',\n    borderColor: colors.categoryBorder,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  containerBlockBackground: {\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  image: {\n    height: 36,\n    width: 64\n  }\n});\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}