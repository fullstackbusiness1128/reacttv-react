{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ScrollView = function (_Component) {\n  _inherits(ScrollView, _Component);\n\n  function ScrollView(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollView).call(this, props));\n    _this.scrollPos = 0;\n    _this.state = {\n      fullscreen: false,\n      key: 0\n    };\n    return _this;\n  }\n\n  _createClass(ScrollView, [{\n    key: \"onFullScreenChange\",\n    value: function onFullScreenChange(fullscreen, key) {\n      var _this2 = this;\n\n      this.setState({\n        fullscreen: fullscreen,\n        key: key\n      }, function () {\n        if (!fullscreen) _this2.scrollBackToPosition();\n      });\n    }\n  }, {\n    key: \"scrollBackToPosition\",\n    value: function scrollBackToPosition() {\n      if (this.scroll) this.scroll.scrollTo({\n        y: this.scrollPos,\n        animated: false\n      });\n    }\n  }, {\n    key: \"cloneElement\",\n    value: function cloneElement(child, key) {\n      var _this3 = this;\n\n      if (this.state.fullscreen && key !== this.state.key) return null;\n      return React.cloneElement(child, {\n        onFullScreen: function onFullScreen(val) {\n          child.props.onFullScreen(val);\n\n          _this3.onFullScreenChange(val, key);\n        }\n      });\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren(children) {\n      var _this4 = this;\n\n      return React.Children.map(children, function (child, key) {\n        var element = child.type.name;\n\n        switch (true) {\n          case element === 'Container':\n            {\n              var props = _this4.state.fullscreen ? {\n                style: {}\n              } : child.props;\n              var components = React.Children.map(child.props.children, function (component) {\n                var name = component.type.name;\n                if (name === 'Video') return _this4.cloneElement(component, key);\n                if (_this4.state.fullscreen && name !== 'Video') return null;\n                return component;\n              });\n              return React.cloneElement(child, props, components);\n            }\n\n          case element === 'Video':\n            return _this4.cloneElement(child, key);\n\n          case _this4.state.fullscreen && element !== 'Video':\n            return null;\n\n          default:\n            return child;\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var fullscreen = this.state.fullscreen;\n\n      var _this$props = this.props,\n          bounces = _this$props.bounces,\n          children = _this$props.children,\n          _onScroll = _this$props.onScroll,\n          scrollEventThrottle = _this$props.scrollEventThrottle,\n          scrollProps = _objectWithoutProperties(_this$props, [\"bounces\", \"children\", \"onScroll\", \"scrollEventThrottle\"]);\n\n      return _jsx(RNScrollView, _objectSpread({}, scrollProps, {\n        ref: function ref(scroll) {\n          _this5.scroll = scroll;\n        },\n        bounces: fullscreen ? !fullscreen : bounces,\n        onScroll: function onScroll(event) {\n          if (!fullscreen) _this5.scrollPos = event.nativeEvent.contentOffset.y;\n\n          _onScroll(event);\n        },\n        scrollEventThrottle: scrollEventThrottle,\n        children: this.renderChildren(children)\n      }));\n    }\n  }]);\n\n  return ScrollView;\n}(Component);\n\nScrollView.propTypes = {\n  children: PropTypes.node.isRequired,\n  scrollEventThrottle: PropTypes.number,\n  onScroll: PropTypes.func,\n  bounces: PropTypes.bool\n};\nScrollView.defaultProps = {\n  scrollEventThrottle: 16,\n  onScroll: function onScroll() {},\n  bounces: false\n};\nexport { ScrollView };","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/node_modules/react-native-video-players/src/VideoPlayerComponents/components/ScrollView.js"],"names":["React","Component","PropTypes","ScrollView","props","scrollPos","state","fullscreen","key","setState","scrollBackToPosition","scroll","scrollTo","y","animated","child","cloneElement","onFullScreen","val","onFullScreenChange","children","Children","map","element","type","name","style","components","component","bounces","onScroll","scrollEventThrottle","scrollProps","event","nativeEvent","contentOffset","renderChildren","propTypes","node","isRequired","number","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ScrollView as RNScrollView\r\n} from 'react-native'\r\n\r\nclass ScrollView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.scrollPos = 0\r\n    this.state = {\r\n      fullscreen: false,\r\n      key: 0\r\n    }\r\n  }\r\n\r\n  onFullScreenChange(fullscreen, key) {\r\n    this.setState({ fullscreen, key }, () => {\r\n      if (!fullscreen) this.scrollBackToPosition()\r\n    })\r\n  }\r\n\r\n  scrollBackToPosition() {\r\n    if (this.scroll) this.scroll.scrollTo({ y: this.scrollPos, animated: false })\r\n  }\r\n\r\n  cloneElement(child, key) {\r\n    if (this.state.fullscreen && key !== this.state.key) return null\r\n\r\n    return React.cloneElement(child, {\r\n      onFullScreen: (val) => {\r\n        child.props.onFullScreen(val)\r\n        this.onFullScreenChange(val, key)\r\n      }\r\n    })\r\n  }\r\n\r\n  renderChildren(children) {\r\n    return React.Children.map(children, (child, key) => {\r\n      const element = child.type.name\r\n      switch (true) {\r\n        case element === 'Container': {\r\n          const props = this.state.fullscreen ? { style: {} } : child.props\r\n          const components = React.Children.map(child.props.children, (component) => {\r\n            const { name } = component.type\r\n            if (name === 'Video') return this.cloneElement(component, key)\r\n            if (this.state.fullscreen && name !== 'Video') return null\r\n            return component\r\n          })\r\n          return React.cloneElement(child, props, components)\r\n        }\r\n        case element === 'Video':\r\n          return this.cloneElement(child, key)\r\n        case (this.state.fullscreen && element !== 'Video'):\r\n          return null\r\n        default:\r\n          return child\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { fullscreen } = this.state\r\n    const {\r\n      bounces,\r\n      children,\r\n      onScroll,\r\n      scrollEventThrottle,\r\n      ...scrollProps\r\n    } = this.props\r\n    return (\r\n      <RNScrollView\r\n        {...scrollProps}\r\n        ref={(scroll) => { this.scroll = scroll }}\r\n        bounces={fullscreen ? !fullscreen : bounces}\r\n        onScroll={(event) => {\r\n          if (!fullscreen) this.scrollPos = event.nativeEvent.contentOffset.y\r\n          onScroll(event)\r\n        }}\r\n        scrollEventThrottle={scrollEventThrottle}\r\n      >\r\n        {this.renderChildren(children)}\r\n      </RNScrollView>\r\n    )\r\n  }\r\n}\r\n\r\nScrollView.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  scrollEventThrottle: PropTypes.number,\r\n  onScroll: PropTypes.func,\r\n  bounces: PropTypes.bool\r\n}\r\n\r\nScrollView.defaultProps = {\r\n  scrollEventThrottle: 16,\r\n  onScroll: () => {},\r\n  bounces: false\r\n}\r\n\r\nexport { ScrollView }\r\n"]},"metadata":{},"sourceType":"module"}