{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"../components/Button\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport Background from \"../components/Background\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var sendResetPasswordEmail = function sendResetPasswordEmail() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread({}, email, {\n        error: emailError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.replace('LoginScreen');\n      }\n    }), _jsx(Logo, {}), _jsxs(View, {\n      style: {\n        backgroundColor: '#1d1d1d',\n        width: '100%',\n        padding: 26,\n        marginBottom: 13\n      },\n      children: [_jsx(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Restore Password\"\n      }), _jsx(TextInput, {\n        label: \"E-mail address\",\n        returnKeyType: \"done\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!email.error,\n        errorText: email.error,\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\",\n        description: \"You will receive email with password reset link.\"\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: sendResetPasswordEmail,\n        style: {\n          marginTop: 16,\n          backgroundColor: '#f65f54'\n        },\n        children: \"Send Instructions\"\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","BackButton","Logo","Header","TextInput","Button","emailValidator","Background","ResetPasswordScreen","navigation","value","error","email","setEmail","sendResetPasswordEmail","emailError","navigate","replace","backgroundColor","width","padding","marginBottom","color","text","marginTop"],"sources":["E:/works/android/20220927/flicknplayreacttv-main/flicknplayreacttv-main/src/screens/ResetPasswordScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport BackButton from '../components/BackButton'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport TextInput from '../components/TextInput'\nimport { View } from 'react-native-web'\nimport Button from '../components/Button'\nimport { emailValidator } from '../helpers/emailValidator'\nimport Background from '../components/Background'\n\nexport default function ResetPasswordScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n\n  const sendResetPasswordEmail = () => {\n    const emailError = emailValidator(email.value)\n    if (emailError) {\n      setEmail({ ...email, error: emailError })\n      return\n    }\n    navigation.navigate('LoginScreen')\n  }\n\n  return (\n    <Background>\n      <BackButton  goBack={() => navigation.replace('LoginScreen')} />\n      <Logo />\n      <View style={{backgroundColor:'#1d1d1d',width: '100%',padding: 26,marginBottom: 13}}>\n      <h1 style={{color:'white'}}>Restore Password</h1>\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        description=\"You will receive email with password reset link.\"\n      />\n      <Button\n        mode=\"contained\"\n        onPress={sendResetPasswordEmail}\n        style={{ marginTop: 16,backgroundColor:'#f65f54', }}\n      >\n        Send Instructions\n      </Button>\n      </View>\n    </Background>\n  )\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;;AAEA,OAAOC,MAAP;AACA,SAASC,cAAT;AACA,OAAOC,UAAP;;;AAEA,eAAe,SAASC,mBAAT,OAA6C;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAAA,gBAChCT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAAD,CADwB;EAAA;EAAA,IACnDC,KADmD;EAAA,IAC5CC,QAD4C;;EAG1D,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;IACnC,IAAMC,UAAU,GAAGT,cAAc,CAACM,KAAK,CAACF,KAAP,CAAjC;;IACA,IAAIK,UAAJ,EAAgB;MACdF,QAAQ,mBAAMD,KAAN;QAAaD,KAAK,EAAEI;MAApB,GAAR;MACA;IACD;;IACDN,UAAU,CAACO,QAAX,CAAoB,aAApB;EACD,CAPD;;EASA,OACE,MAAC,UAAD;IAAA,WACE,KAAC,UAAD;MAAa,MAAM,EAAE;QAAA,OAAMP,UAAU,CAACQ,OAAX,CAAmB,aAAnB,CAAN;MAAA;IAArB,EADF,EAEE,KAAC,IAAD,KAFF,EAGE,MAAC,IAAD;MAAM,KAAK,EAAE;QAACC,eAAe,EAAC,SAAjB;QAA2BC,KAAK,EAAE,MAAlC;QAAyCC,OAAO,EAAE,EAAlD;QAAqDC,YAAY,EAAE;MAAnE,CAAb;MAAA,WACA;QAAI,KAAK,EAAE;UAACC,KAAK,EAAC;QAAP,CAAX;QAAA;MAAA,EADA,EAEA,KAAC,SAAD;QACE,KAAK,EAAC,gBADR;QAEE,aAAa,EAAC,MAFhB;QAGE,KAAK,EAAEV,KAAK,CAACF,KAHf;QAIE,YAAY,EAAE,sBAACa,IAAD;UAAA,OAAUV,QAAQ,CAAC;YAAEH,KAAK,EAAEa,IAAT;YAAeZ,KAAK,EAAE;UAAtB,CAAD,CAAlB;QAAA,CAJhB;QAKE,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;QAME,SAAS,EAAEC,KAAK,CAACD,KANnB;QAOE,cAAc,EAAC,MAPjB;QAQE,gBAAgB,EAAC,OARnB;QASE,eAAe,EAAC,cATlB;QAUE,YAAY,EAAC,eAVf;QAWE,WAAW,EAAC;MAXd,EAFA,EAeA,KAAC,MAAD;QACE,IAAI,EAAC,WADP;QAEE,OAAO,EAAEG,sBAFX;QAGE,KAAK,EAAE;UAAEU,SAAS,EAAE,EAAb;UAAgBN,eAAe,EAAC;QAAhC,CAHT;QAAA;MAAA,EAfA;IAAA,EAHF;EAAA,EADF;AA6BD"},"metadata":{},"sourceType":"module"}