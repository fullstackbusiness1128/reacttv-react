{"ast":null,"code":"import { addCss } from \"../utils/inject\";\nimport createDeclarationBlock from \"../utils/create-declaration-block\";\nimport hash from \"../hash\";\nimport { isMediaOrPseudo, deepClone, createCssRule } from \"../utils/common\";\nimport flattenStyle from \"../utils/flatten-style\";\n\nvar processStyleProp = function processStyleProp(styleWithQuery) {\n  if (!styleWithQuery) return {\n    ids: \"\",\n    styles: {},\n    fullStyles: {}\n  };\n  styleWithQuery = flattenStyle(styleWithQuery);\n  var ids = \"\";\n  var cleanStyles = deepClone(styleWithQuery);\n  var mediaQueriesAndPseudoClasses = Object.keys(styleWithQuery).filter(isMediaOrPseudo);\n  mediaQueriesAndPseudoClasses.map(function (query) {\n    var css = createDeclarationBlock(styleWithQuery[query]);\n    var stringHash = \"rnmq-\" + hash(\"\" + query + css);\n    var rule = createCssRule(query, stringHash, css);\n    addCss(\"\" + stringHash, rule);\n    delete cleanStyles[query];\n    ids = \"\" + (!!ids ? ids + \" \" : \"\") + stringHash;\n  });\n  return {\n    ids: ids,\n    styles: cleanStyles,\n    fullStyles: styleWithQuery\n  };\n};\n\nexport default processStyleProp;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/node_modules/react-native-media-query/process-style-prop/index.web.js"],"names":["addCss","createDeclarationBlock","hash","isMediaOrPseudo","deepClone","createCssRule","flattenStyle","processStyleProp","styleWithQuery","ids","styles","fullStyles","cleanStyles","mediaQueriesAndPseudoClasses","Object","keys","filter","map","query","css","stringHash","rule"],"mappings":"AAAA,SAASA,MAAT;AACA,OAAOC,sBAAP;AACA,OAAOC,IAAP;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,aAArC;AACA,OAAOC,YAAP;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD,EAAoB;AAC3C,MAAI,CAACA,cAAL,EAAqB,OAAO;AAAEC,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,MAAM,EAAE,EAAnB;AAAuBC,IAAAA,UAAU,EAAE;AAAnC,GAAP;AACrBH,EAAAA,cAAc,GAAGF,YAAY,CAACE,cAAD,CAA7B;AAEA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAMG,WAAW,GAAGR,SAAS,CAACI,cAAD,CAA7B;AAEA,MAAMK,4BAA4B,GAAGC,MAAM,CAACC,IAAP,CAAYP,cAAZ,EAA4BQ,MAA5B,CACnCb,eADmC,CAArC;AAIAU,EAAAA,4BAA4B,CAACI,GAA7B,CAAiC,UAACC,KAAD,EAAW;AAC1C,QAAMC,GAAG,GAAGlB,sBAAsB,CAACO,cAAc,CAACU,KAAD,CAAf,CAAlC;AACA,QAAME,UAAU,aAAWlB,IAAI,MAAIgB,KAAJ,GAAYC,GAAZ,CAA/B;AACA,QAAME,IAAI,GAAGhB,aAAa,CAACa,KAAD,EAAQE,UAAR,EAAoBD,GAApB,CAA1B;AAEAnB,IAAAA,MAAM,MAAIoB,UAAJ,EAAkBC,IAAlB,CAAN;AACA,WAAOT,WAAW,CAACM,KAAD,CAAlB;AAEAT,IAAAA,GAAG,SAAM,CAAC,CAACA,GAAF,GAAQA,GAAG,GAAG,GAAd,GAAoB,EAA1B,IAA+BW,UAAlC;AACD,GATD;AAWA,SAAO;AAAEX,IAAAA,GAAG,EAAHA,GAAF;AAAOC,IAAAA,MAAM,EAAEE,WAAf;AAA4BD,IAAAA,UAAU,EAAEH;AAAxC,GAAP;AACD,CAvBD;;AAyBA,eAAeD,gBAAf","sourcesContent":["import { addCss } from \"../utils/inject\";\nimport createDeclarationBlock from \"../utils/create-declaration-block\";\nimport hash from \"../hash\";\nimport { isMediaOrPseudo, deepClone, createCssRule } from \"../utils/common\";\nimport flattenStyle from \"../utils/flatten-style\";\n\nconst processStyleProp = (styleWithQuery) => {\n  if (!styleWithQuery) return { ids: \"\", styles: {}, fullStyles: {} };\n  styleWithQuery = flattenStyle(styleWithQuery);\n\n  let ids = \"\";\n  const cleanStyles = deepClone(styleWithQuery);\n\n  const mediaQueriesAndPseudoClasses = Object.keys(styleWithQuery).filter(\n    isMediaOrPseudo\n  );\n\n  mediaQueriesAndPseudoClasses.map((query) => {\n    const css = createDeclarationBlock(styleWithQuery[query]);\n    const stringHash = `rnmq-${hash(`${query}${css}`)}`;\n    const rule = createCssRule(query, stringHash, css);\n\n    addCss(`${stringHash}`, rule);\n    delete cleanStyles[query];\n\n    ids = `${!!ids ? ids + \" \" : \"\"}${stringHash}`;\n  });\n\n  return { ids, styles: cleanStyles, fullStyles: styleWithQuery };\n};\n\nexport default processStyleProp;\n"]},"metadata":{},"sourceType":"module"}