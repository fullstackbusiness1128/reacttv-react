{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport Toast from 'react-native-toast-message';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError, passwordError, showToast, formData, url;\n    return _regeneratorRuntime.async(function onLoginPressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            showToast = function showToast(type, message) {\n              Toast.show({\n                type: type,\n                text1: message\n              });\n            };\n\n            if (!(emailError || passwordError)) {\n              _context2.next = 7;\n              break;\n            }\n\n            setEmail(_objectSpread({}, email, {\n              error: emailError\n            }));\n            setPassword(_objectSpread({}, password, {\n              error: passwordError\n            }));\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            console.log(email, password);\n\n            if (!(email.value != '' || password.value != '')) {\n              _context2.next = 16;\n              break;\n            }\n\n            formData = new FormData();\n            formData.append('email', email.value);\n            formData.append('password', password.value);\n            formData.append('token_name', 'flicknplaysapi');\n            url = \"https://www.flicknplay.com/api/v1/auth/login\";\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(axios.post(url, formData, {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            }).then(function _callee(response) {\n              var _response$data, _response$data2, _response$data3, _response$data3$user, _response$data4;\n\n              var user;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(response == null ? void 0 : (_response$data = response.data) == null ? void 0 : _response$data.user);\n                      AsyncStorage.setItem('userDetails', JSON.stringify(response == null ? void 0 : (_response$data2 = response.data) == null ? void 0 : _response$data2.user));\n                      AsyncStorage.setItem('user_token', JSON.stringify(response == null ? void 0 : (_response$data3 = response.data) == null ? void 0 : (_response$data3$user = _response$data3.user) == null ? void 0 : _response$data3$user.access_token));\n\n                      if (!(response == null ? void 0 : (_response$data4 = response.data) == null ? void 0 : _response$data4.user)) {\n                        _context.next = 10;\n                        break;\n                      }\n\n                      showToast('success', 'Login successfully');\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem('userDetails'));\n\n                    case 7:\n                      user = _context.sent;\n                      console.log(user);\n                      navigation.navigate('TabNavigator');\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            }).catch(function (error) {\n              console.log(error.response);\n            }));\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.replace('StartScreen');\n      }\n    }), _jsx(Logo, {}), _jsx(\"h1\", {\n      style: {\n        color: 'white'\n      },\n      children: \"Welcome back.\"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(View, {\n      style: styles.forgotPassword,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPasswordScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.forgot,\n          children: \"Forgot your password?\"\n        })\n      })\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onLoginPressed,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('RegisterScreen');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","Toast","AsyncStorage","axios","require","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","showToast","type","message","show","text1","console","log","formData","FormData","append","url","post","headers","then","response","data","user","setItem","JSON","stringify","access_token","getItem","navigate","catch","replace","color","text","styles","forgotPassword","forgot","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { passwordValidator } from '../helpers/passwordValidator'\nimport Toast from 'react-native-toast-message';\n// import TabNavigator from '../navigation/TabNavigator'\nimport AsyncStorage from '@react-native-community/async-storage';\nconst axios = require('axios');\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onLoginPressed =async () => {\n    const emailError = emailValidator(email.value)\n    const passwordError = passwordValidator(password.value)\n    const showToast = (type,message) => {\n      Toast.show({\n        type: type,\n        text1: message\n      });\n    }\n    if (emailError || passwordError) {\n\n      setEmail({ ...email, error: emailError })\n      setPassword({ ...password, error: passwordError })\n       return\n    }\n    console.log(email,password)\n    if(email.value!='' || password.value!=''){\n      // let body={\n      //   email:email.value,\n      //   password:password.value,\n      //   token_name:\"flicknplaysapi\",\n       \n      // }\n      const formData = new FormData();\n      formData.append('email',email.value)\n      formData.append('password',password.value)\n      formData.append('token_name','flicknplaysapi')\n      const url = `https://www.flicknplay.com/api/v1/auth/login`\n     await axios.post(url,formData , { headers: {\"Content-Type\" : `application/x-www-form-urlencoded`} }).then(async(response)=>{\n     \n        console.log(response?.data?.user)\n        AsyncStorage.setItem('userDetails',JSON.stringify(response?.data?.user))\n        AsyncStorage.setItem('user_token',JSON.stringify(response?.data?.user?.access_token))\n        if(response?.data?.user){\n          showToast('success','Login successfully')\n          const user=await AsyncStorage.getItem('userDetails')\n          console.log(user)\n          navigation.navigate('TabNavigator')\n        }\n       }).catch(function(error){\n         console.log(error.response)\n       })\n\n    }\n  \n    // navigation.reset({\n    //   index: 0,\n    //   routes: [{ name: 'RegisterScreen',params:{TabNavigator} }],\n    // })\n  }\n\n  return (\n    <Background>\n      <BackButton  goBack={() => navigation.replace('StartScreen')} />\n      <Logo />\n      <h1 style={{color:'white'}}>Welcome back.</h1> \n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={onLoginPressed}>\n        Login\n      </Button>\n      <View style={styles.row}>\n        <Text style={{color:'white'}}>Don’t have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}