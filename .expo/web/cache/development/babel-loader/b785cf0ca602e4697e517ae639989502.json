{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React, { PureComponent } from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PaginationDot from \"./PaginationDot\";\nimport styles from \"./Pagination.style\";\nvar IS_IOS = Platform.OS === 'ios';\nvar IS_RTL = I18nManager.isRTL;\n\nvar Pagination = function (_PureComponent) {\n  _inherits(Pagination, _PureComponent);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pagination).call(this, props));\n\n    if (props.dotColor && !props.inactiveDotColor || !props.dotColor && props.inactiveDotColor) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You need to specify both `dotColor` and `inactiveDotColor`');\n    }\n\n    if (props.dotElement && !props.inactiveDotElement || !props.dotElement && props.inactiveDotElement) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You need to specify both `dotElement` and `inactiveDotElement`');\n    }\n\n    if (props.tappableDots && props.carouselRef === undefined) {\n      console.warn('react-native-snap-carousel | Pagination: ' + 'You must specify prop `carouselRef` when setting `tappableDots` to `true`');\n    }\n\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"_needsRTLAdaptations\",\n    value: function _needsRTLAdaptations() {\n      var vertical = this.props.vertical;\n      return IS_RTL && !IS_IOS && !vertical;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          dotsLength = _this$props.dotsLength,\n          containerStyle = _this$props.containerStyle,\n          vertical = _this$props.vertical,\n          accessibilityLabel = _this$props.accessibilityLabel;\n\n      if (!dotsLength || dotsLength < 2) {\n        return false;\n      }\n\n      var style = [styles.sliderPagination, {\n        flexDirection: vertical ? 'column' : this._needsRTLAdaptations() ? 'row-reverse' : 'row'\n      }, containerStyle || {}];\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: style,\n        accessible: !!accessibilityLabel,\n        accessibilityLabel: accessibilityLabel\n      }, this.dots);\n    }\n  }, {\n    key: \"_activeDotIndex\",\n    get: function get() {\n      var _this$props2 = this.props,\n          activeDotIndex = _this$props2.activeDotIndex,\n          dotsLength = _this$props2.dotsLength;\n      return this._needsRTLAdaptations() ? dotsLength - activeDotIndex - 1 : activeDotIndex;\n    }\n  }, {\n    key: \"dots\",\n    get: function get() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          activeOpacity = _this$props3.activeOpacity,\n          carouselRef = _this$props3.carouselRef,\n          dotsLength = _this$props3.dotsLength,\n          dotColor = _this$props3.dotColor,\n          dotContainerStyle = _this$props3.dotContainerStyle,\n          dotElement = _this$props3.dotElement,\n          dotStyle = _this$props3.dotStyle,\n          inactiveDotColor = _this$props3.inactiveDotColor,\n          inactiveDotElement = _this$props3.inactiveDotElement,\n          inactiveDotOpacity = _this$props3.inactiveDotOpacity,\n          inactiveDotScale = _this$props3.inactiveDotScale,\n          inactiveDotStyle = _this$props3.inactiveDotStyle,\n          renderDots = _this$props3.renderDots,\n          tappableDots = _this$props3.tappableDots,\n          animatedDuration = _this$props3.animatedDuration,\n          animatedFriction = _this$props3.animatedFriction,\n          animatedTension = _this$props3.animatedTension,\n          delayPressInDot = _this$props3.delayPressInDot;\n\n      if (renderDots) {\n        return renderDots(this._activeDotIndex, dotsLength, this);\n      }\n\n      var DefaultDot = React.createElement(PaginationDot, {\n        carouselRef: carouselRef,\n        tappable: tappableDots && typeof carouselRef !== 'undefined',\n        activeOpacity: activeOpacity,\n        color: dotColor,\n        containerStyle: dotContainerStyle,\n        style: dotStyle,\n        inactiveColor: inactiveDotColor,\n        inactiveOpacity: inactiveDotOpacity,\n        inactiveScale: inactiveDotScale,\n        inactiveStyle: inactiveDotStyle,\n        animatedDuration: animatedDuration,\n        animatedFriction: animatedFriction,\n        animatedTension: animatedTension,\n        delayPressInDot: delayPressInDot\n      });\n\n      var dots = _toConsumableArray(Array(dotsLength).keys()).map(function (i) {\n        var isActive = i === _this2._activeDotIndex;\n        return React.cloneElement((isActive ? dotElement : inactiveDotElement) || DefaultDot, {\n          key: \"pagination-dot-\".concat(i),\n          active: isActive,\n          index: i\n        });\n      });\n\n      return dots;\n    }\n  }]);\n\n  return Pagination;\n}(PureComponent);\n\nexport { Pagination as default };\n\n_defineProperty(Pagination, \"defaultProps\", {\n  inactiveDotOpacity: 0.5,\n  inactiveDotScale: 0.5,\n  tappableDots: false,\n  vertical: false,\n  animatedDuration: 250,\n  animatedFriction: 4,\n  animatedTension: 50,\n  delayPressInDot: 0\n});","map":{"version":3,"mappings":"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","names":["React","PureComponent","PaginationDot","styles","IS_IOS","Platform","OS","IS_RTL","I18nManager","isRTL","Pagination","constructor","props","dotColor","inactiveDotColor","console","warn","dotElement","inactiveDotElement","tappableDots","carouselRef","undefined","vertical","dotsLength","containerStyle","accessibilityLabel","style","sliderPagination","flexDirection","_needsRTLAdaptations","View","pointerEvents","accessible","dots","activeDotIndex","activeOpacity","dotContainerStyle","dotStyle","inactiveDotOpacity","inactiveDotScale","inactiveDotStyle","renderDots","animatedDuration","animatedFriction","animatedTension","delayPressInDot","_activeDotIndex","DefaultDot","tappable","color","inactiveColor","inactiveOpacity","inactiveScale","inactiveStyle","Array","keys","map","i","isActive","cloneElement","key","active","index"],"sources":["Pagination.tsx"],"sourcesContent":["import React, { PureComponent, ReactElement } from 'react';\nimport {\n    I18nManager,\n    Platform,\n    View,\n    StyleProp,\n    ViewStyle\n} from 'react-native';\nimport PaginationDot from './PaginationDot';\nimport styles from './Pagination.style';\nimport type Carousel from 'src/carousel/Carousel';\n\nconst IS_IOS = Platform.OS === 'ios';\nconst IS_RTL = I18nManager.isRTL;\n\ntype PaginationProps<TData> = {\n  activeDotIndex: number;\n  dotsLength: number;\n  activeOpacity?: number;\n  carouselRef?: Carousel<TData> | null;\n  containerStyle?: StyleProp<ViewStyle>;\n  dotColor?: string;\n  dotContainerStyle?: StyleProp<ViewStyle>;\n  dotElement?: ReactElement;\n  dotStyle?: StyleProp<ViewStyle>;\n  inactiveDotColor?: string;\n  inactiveDotElement?: ReactElement;\n  inactiveDotOpacity: number;\n  inactiveDotScale: number;\n  inactiveDotStyle?: StyleProp<ViewStyle>;\n  renderDots?: (\n    activeIndex: number,\n    length: number,\n    context: Pagination<TData>\n  ) => ReactElement;\n  tappableDots: boolean;\n  vertical: boolean;\n  accessibilityLabel?: string;\n  animatedDuration: number;\n  animatedFriction: number;\n  animatedTension: number;\n  delayPressInDot: number;\n};\n\nexport default class Pagination<TData> extends PureComponent<PaginationProps<TData>> {\n  static defaultProps = {\n      inactiveDotOpacity: 0.5,\n      inactiveDotScale: 0.5,\n      tappableDots: false,\n      vertical: false,\n      animatedDuration: 250,\n      animatedFriction: 4,\n      animatedTension: 50,\n      delayPressInDot: 0\n  };\n\n  constructor (props: PaginationProps<TData>) {\n      super(props);\n\n      // Warnings\n      if (\n          (props.dotColor && !props.inactiveDotColor) ||\n      (!props.dotColor && props.inactiveDotColor)\n      ) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You need to specify both `dotColor` and `inactiveDotColor`'\n          );\n      }\n      if (\n          (props.dotElement && !props.inactiveDotElement) ||\n      (!props.dotElement && props.inactiveDotElement)\n      ) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You need to specify both `dotElement` and `inactiveDotElement`'\n          );\n      }\n      if (props.tappableDots && props.carouselRef === undefined) {\n          console.warn(\n              'react-native-snap-carousel | Pagination: ' +\n          'You must specify prop `carouselRef` when setting `tappableDots` to `true`'\n          );\n      }\n  }\n\n  _needsRTLAdaptations () {\n      const { vertical } = this.props;\n      return IS_RTL && !IS_IOS && !vertical;\n  }\n\n  get _activeDotIndex () {\n      const { activeDotIndex, dotsLength } = this.props;\n      return this._needsRTLAdaptations() ?\n          dotsLength - activeDotIndex - 1 :\n          activeDotIndex;\n  }\n\n  get dots () {\n      const {\n          activeOpacity,\n          carouselRef,\n          dotsLength,\n          dotColor,\n          dotContainerStyle,\n          dotElement,\n          dotStyle,\n          inactiveDotColor,\n          inactiveDotElement,\n          inactiveDotOpacity,\n          inactiveDotScale,\n          inactiveDotStyle,\n          renderDots,\n          tappableDots,\n          animatedDuration,\n          animatedFriction,\n          animatedTension,\n          delayPressInDot\n      } = this.props;\n\n      if (renderDots) {\n          return renderDots(this._activeDotIndex, dotsLength, this);\n      }\n\n      const DefaultDot = (\n          <PaginationDot\n            carouselRef={carouselRef}\n            tappable={tappableDots && typeof carouselRef !== 'undefined'}\n            activeOpacity={activeOpacity}\n            color={dotColor}\n            containerStyle={dotContainerStyle}\n            style={dotStyle}\n            inactiveColor={inactiveDotColor}\n            inactiveOpacity={inactiveDotOpacity}\n            inactiveScale={inactiveDotScale}\n            inactiveStyle={inactiveDotStyle}\n            animatedDuration={animatedDuration}\n            animatedFriction={animatedFriction}\n            animatedTension={animatedTension}\n            delayPressInDot={delayPressInDot}\n          />\n      );\n\n      const dots = [...Array(dotsLength).keys()].map((i) => {\n          const isActive = i === this._activeDotIndex;\n          return React.cloneElement(\n              (isActive ? dotElement : inactiveDotElement) || DefaultDot,\n              {\n                  key: `pagination-dot-${i}`,\n                  active: isActive,\n                  index: i\n              }\n          );\n      });\n\n      return dots;\n  }\n\n  render () {\n      const {\n          dotsLength,\n          containerStyle,\n          vertical,\n          accessibilityLabel\n      } = this.props;\n\n      if (!dotsLength || dotsLength < 2) {\n          return false;\n      }\n\n      const style = [\n          styles.sliderPagination,\n          {\n              flexDirection: vertical ?\n                  ('column' as const) :\n                  this._needsRTLAdaptations() ?\n                      ('row-reverse' as const) :\n                      ('row' as const)\n          },\n          containerStyle || {}\n      ];\n\n      return (\n          <View\n            pointerEvents='box-none'\n            style={style}\n            accessible={!!accessibilityLabel}\n            accessibilityLabel={accessibilityLabel}\n          >\n              {this.dots}\n          </View>\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}