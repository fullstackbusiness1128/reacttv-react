{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { colors, images } from \"../constants\";\nimport navigationOptions from \"./defaultOptions\";\nimport Profile from \"../screens/Profile\";\nimport ProfileAppSettings from \"../screens/ProfileAppSettings\";\nimport ProfileWatchlist from \"../screens/ProfileWatchlist\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Icon = function Icon(_ref) {\n  var focused = _ref.focused;\n  var borderColor = focused ? {\n    borderColor: colors.white\n  } : {};\n  return _jsx(View, {\n    style: [styles.containerProfile, borderColor],\n    children: _jsx(Image, {\n      source: images.stormtrooper,\n      style: styles.avatar\n    })\n  });\n};\n\nIcon.propTypes = {\n  focused: PropTypes.bool.isRequired\n};\nexport default createStackNavigator({\n  Profile: {\n    screen: Profile,\n    navigationOptions: navigationOptions\n  },\n  ProfileAppSettings: ProfileAppSettings,\n  ProfileWatchlist: ProfileWatchlist\n}, {\n  initialRouteName: 'Profile',\n  headerMode: 'none',\n  navigationOptions: {\n    tabBarLabel: 'More',\n    tabBarIcon: Icon\n  }\n});\nvar styles = StyleSheet.create({\n  containerProfile: {\n    alignItems: 'center',\n    borderColor: 'transparent',\n    borderRadius: 20,\n    borderWidth: 2,\n    height: 40,\n    justifyContent: 'center',\n    overflow: 'hidden',\n    width: 40\n  },\n  avatar: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/src/navigation/StackProfile.js"],"names":["React","PropTypes","createStackNavigator","colors","images","navigationOptions","Profile","ProfileAppSettings","ProfileWatchlist","Icon","focused","borderColor","white","styles","containerProfile","stormtrooper","avatar","propTypes","bool","isRequired","screen","initialRouteName","headerMode","tabBarLabel","tabBarIcon","StyleSheet","create","alignItems","borderRadius","borderWidth","height","justifyContent","overflow","width","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,iBAAP;AAGA,OAAOC,OAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,gBAAP;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC5B,MAAMC,WAAW,GAAGD,OAAO,GAAG;AAAEC,IAAAA,WAAW,EAAER,MAAM,CAACS;AAAtB,GAAH,GAAmC,EAA9D;AAEA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,gBAAR,EAA0BH,WAA1B,CAAb;AAAA,cACE,KAAC,KAAD;AAAO,MAAA,MAAM,EAAEP,MAAM,CAACW,YAAtB;AAAoC,MAAA,KAAK,EAAEF,MAAM,CAACG;AAAlD;AADF,IADF;AAKD,CARD;;AAUAP,IAAI,CAACQ,SAAL,GAAiB;AAEfP,EAAAA,OAAO,EAAET,SAAS,CAACiB,IAAV,CAAeC;AAFT,CAAjB;AAKA,eAAejB,oBAAoB,CACjC;AACEI,EAAAA,OAAO,EAAE;AACPc,IAAAA,MAAM,EAAEd,OADD;AAEPD,IAAAA,iBAAiB,EAAjBA;AAFO,GADX;AAKEE,EAAAA,kBAAkB,EAAlBA,kBALF;AAMEC,EAAAA,gBAAgB,EAAhBA;AANF,CADiC,EASjC;AACEa,EAAAA,gBAAgB,EAAE,SADpB;AAEEC,EAAAA,UAAU,EAAE,MAFd;AAGEjB,EAAAA,iBAAiB,EAAE;AACjBkB,IAAAA,WAAW,EAAE,MADI;AAEjBC,IAAAA,UAAU,EAAEf;AAFK;AAHrB,CATiC,CAAnC;AAmBA,IAAMI,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,gBAAgB,EAAE;AAChBa,IAAAA,UAAU,EAAE,QADI;AAEhBhB,IAAAA,WAAW,EAAE,aAFG;AAGhBiB,IAAAA,YAAY,EAAE,EAHE;AAIhBC,IAAAA,WAAW,EAAE,CAJG;AAKhBC,IAAAA,MAAM,EAAE,EALQ;AAMhBC,IAAAA,cAAc,EAAE,QANA;AAOhBC,IAAAA,QAAQ,EAAE,QAPM;AAQhBC,IAAAA,KAAK,EAAE;AARS,GADa;AAW/BjB,EAAAA,MAAM,EAAE;AACNc,IAAAA,MAAM,EAAE,MADF;AAENI,IAAAA,UAAU,EAAE,SAFN;AAGND,IAAAA,KAAK,EAAE;AAHD;AAXuB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, StyleSheet, View } from 'react-native';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { colors, images } from '../constants';\n\nimport navigationOptions from './defaultOptions';\n\n// screens\nimport Profile from '../screens/Profile';\nimport ProfileAppSettings from '../screens/ProfileAppSettings';\nimport ProfileWatchlist from '../screens/ProfileWatchlist';\n\nconst Icon = ({ focused }) => {\n  const borderColor = focused ? { borderColor: colors.white } : {};\n\n  return (\n    <View style={[styles.containerProfile, borderColor]}>\n      <Image source={images.stormtrooper} style={styles.avatar} />\n    </View>\n  );\n};\n\nIcon.propTypes = {\n  // required\n  focused: PropTypes.bool.isRequired\n};\n\nexport default createStackNavigator(\n  {\n    Profile: {\n      screen: Profile,\n      navigationOptions\n    },\n    ProfileAppSettings,\n    ProfileWatchlist\n  },\n  {\n    initialRouteName: 'Profile',\n    headerMode: 'none',\n    navigationOptions: {\n      tabBarLabel: 'More',\n      tabBarIcon: Icon\n    }\n  }\n);\n\nconst styles = StyleSheet.create({\n  containerProfile: {\n    alignItems: 'center',\n    borderColor: 'transparent',\n    borderRadius: 20,\n    borderWidth: 2,\n    height: 40,\n    justifyContent: 'center',\n    overflow: 'hidden',\n    width: 40\n  },\n  avatar: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}