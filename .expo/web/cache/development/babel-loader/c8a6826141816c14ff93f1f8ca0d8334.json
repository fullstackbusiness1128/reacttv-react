{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { colors, images } from \"../constants\";\nimport mockData from \"../mockdata/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar MediaItemScroller = function MediaItemScroller(_ref) {\n  var dataset = _ref.dataset,\n      navigation = _ref.navigation;\n  console.log(navigation);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        console.log(item);\n        navigation.navigate('StackMovieDetails', {\n          movieId: item\n        });\n      },\n      children: _jsx(View, {\n        style: styles.item,\n        children: _jsx(Image, {\n          source: item == null ? void 0 : item.poster,\n          style: styles.image\n        })\n      })\n    });\n  };\n\n  return _jsx(FlatList, {\n    contentContainerStyle: styles.containerFlatList,\n    data: dataset,\n    horizontal: true,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: renderItem,\n    showsHorizontalScrollIndicator: false\n  });\n};\n\nMediaItemScroller.defaultProps = {\n  dataset: 'dumbData'\n};\nMediaItemScroller.propTypes = {\n  dataset: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  containerFlatList: {\n    paddingLeft: 16,\n    paddingRight: 8\n  },\n  item: {\n    borderRadius: 4,\n    height: 130,\n    marginRight: 8,\n    overflow: 'hidden',\n    width: 93\n  },\n  placeholder: {\n    backgroundColor: colors.infoGrey,\n    height: '100%',\n    width: '100%'\n  },\n  image: {\n    height: '100%',\n    resizeMode: 'contain',\n    width: '100%'\n  }\n});\nexport default MediaItemScroller;","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/components/MediaItemScroller.js"],"names":["React","PropTypes","colors","images","mockData","MediaItemScroller","dataset","navigation","console","log","renderItem","item","navigate","movieId","styles","poster","image","containerFlatList","id","defaultProps","propTypes","string","StyleSheet","create","paddingLeft","paddingRight","borderRadius","height","marginRight","overflow","width","placeholder","backgroundColor","infoGrey","resizeMode"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB;AAEA,OAAOC,QAAP;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAA4B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AAWF,MAAMG,UAAU,GAAG,SAAbA,UAAa,QAAc;AAAA,QAAXC,IAAW,SAAXA,IAAW;AAC/B,WACE,KAAC,gBAAD;AAAmB,MAAA,OAAO,EAAE,mBAAI;AAC9BH,QAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAJ,QAAAA,UAAU,CAACK,QAAX,CAAoB,mBAApB,EAAwC;AAACC,UAAAA,OAAO,EAACF;AAAT,SAAxC;AAED,OAJD;AAAA,gBAKF,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEG,MAAM,CAACH,IAApB;AAAA,kBACI,KAAC,KAAD;AAAQ,UAAA,MAAM,EAAEA,IAAF,oBAAEA,IAAI,CAAEI,MAAtB;AAA8B,UAAA,KAAK,EAAED,MAAM,CAACE;AAA5C;AADJ;AALE,MADF;AAUD,GAXD;;AAaE,SACE,KAAC,QAAD;AACE,IAAA,qBAAqB,EAAEF,MAAM,CAACG,iBADhC;AAEE,IAAA,IAAI,EAAEX,OAFR;AAGE,IAAA,UAAU,MAHZ;AAeE,IAAA,YAAY,EAAE,sBAAAK,IAAI;AAAA,aAAIA,IAAI,CAACO,EAAT;AAAA,KAfpB;AAgBE,IAAA,UAAU,EAAER,UAhBd;AAkBE,IAAA,8BAA8B,EAAE;AAlBlC,IADF;AAsBD,CA/CD;;AAiDAL,iBAAiB,CAACc,YAAlB,GAAiC;AAC/Bb,EAAAA,OAAO,EAAE;AADsB,CAAjC;AAIAD,iBAAiB,CAACe,SAAlB,GAA8B;AAE5Bd,EAAAA,OAAO,EAAEL,SAAS,CAACoB;AAFS,CAA9B;AAKA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,iBAAiB,EAAE;AACjBO,IAAAA,WAAW,EAAE,EADI;AAEjBC,IAAAA,YAAY,EAAE;AAFG,GADY;AAK/Bd,EAAAA,IAAI,EAAE;AACJe,IAAAA,YAAY,EAAE,CADV;AAEJC,IAAAA,MAAM,EAAE,GAFJ;AAGJC,IAAAA,WAAW,EAAE,CAHT;AAIJC,IAAAA,QAAQ,EAAE,QAJN;AAKJC,IAAAA,KAAK,EAAE;AALH,GALyB;AAY/BC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE9B,MAAM,CAAC+B,QADb;AAEXN,IAAAA,MAAM,EAAE,MAFG;AAGXG,IAAAA,KAAK,EAAE;AAHI,GAZkB;AAiB/Bd,EAAAA,KAAK,EAAE;AACLW,IAAAA,MAAM,EAAE,MADH;AAELO,IAAAA,UAAU,EAAE,SAFP;AAGLJ,IAAAA,KAAK,EAAE;AAHF;AAjBwB,CAAlB,CAAf;AAwBA,eAAezB,iBAAf","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FlatList, Image, StyleSheet, View, TouchableOpacity} from 'react-native';\r\nimport { colors, images } from '../constants';\r\n\r\nimport mockData from '../mockdata/data';\r\n\r\nconst MediaItemScroller = ({ dataset,navigation }) => {\r\n  console.log(navigation)\r\n  //  const dataArray = Object.values(mockData[dataset]);\r\n  // console.log(dataArray)\r\n// const renderItem=({item})=>{\r\n// console.log(item)\r\n\r\n\r\n//     return <View style={styles.item}> <TouchableOpacity onPress={()=>console.log(\"hello\")}>\r\n//     <Image source={item?.poster} style={styles.image} />\r\n//     </TouchableOpacity></View>;\r\n// }\r\nconst renderItem = ({ item }) => {\r\n  return(\r\n    <TouchableOpacity  onPress={()=>{\r\n      console.log(item)\r\n      navigation.navigate('StackMovieDetails',{movieId:item})\r\n  \r\n    }}>\r\n  <View style={styles.item} >\r\n      <Image  source={item?.poster} style={styles.image} />\r\n       </View>\r\n       </TouchableOpacity>) \r\n}\r\n\r\n  return (\r\n    <FlatList\r\n      contentContainerStyle={styles.containerFlatList}\r\n      data={dataset}\r\n      horizontal\r\n      // keyExtractor={({ id }) => id.toString()}\r\n\r\n      // //   ({ item }) => {\r\n      // //   const renderItem = item.poster ? (\r\n      // //     <Image source={item.poster} style={styles.image} />\r\n      // //   ) : (\r\n      // //     <View style={styles.placeholder} />\r\n      // //   );\r\n\r\n      // //   return <View style={styles.item}>{renderItem}</View>;\r\n      // // }\r\n      keyExtractor={item => item.id}\r\n      renderItem={renderItem}\r\n    \r\n      showsHorizontalScrollIndicator={false}\r\n    />\r\n  );\r\n};\r\n\r\nMediaItemScroller.defaultProps = {\r\n  dataset: 'dumbData'\r\n};\r\n\r\nMediaItemScroller.propTypes = {\r\n  // optional\r\n  dataset: PropTypes.string\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  containerFlatList: {\r\n    paddingLeft: 16,\r\n    paddingRight: 8\r\n  },\r\n  item: {\r\n    borderRadius: 4,\r\n    height: 130,\r\n    marginRight: 8,\r\n    overflow: 'hidden',\r\n    width: 93\r\n  },\r\n  placeholder: {\r\n    backgroundColor: colors.infoGrey,\r\n    height: '100%',\r\n    width: '100%'\r\n  },\r\n  image: {\r\n    height: '100%',\r\n    resizeMode: 'contain',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport default MediaItemScroller;\r\n"]},"metadata":{},"sourceType":"module"}