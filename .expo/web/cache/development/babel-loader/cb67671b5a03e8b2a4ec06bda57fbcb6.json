{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Constants from 'expo-constants';\nimport { colors, fonts, gStyle } from \"../constants\";\nimport HeaderAccounts from \"../components/HeaderAccounts\";\nimport TouchLineItem from \"../components/TouchLineItem\";\nimport SvgBackground from \"../components/icons/Svg.Background\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar alertSignOut = function alertSignOut() {\n  Alert.alert('Sign Out', 'Are you sure that you want to sign out?', [{\n    text: 'No'\n  }, {\n    text: 'Yes'\n  }], {\n    cancelable: false\n  });\n};\n\nvar Profile = function Profile(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: gStyle.container,\n    children: [_jsx(View, {\n      style: gStyle.posAbsolute\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      children: _jsx(\"div\", {\n        style: styles.buttons,\n        children: _jsx(Image, {\n          style: styles.image,\n          source: require(\"../assets/menu.png\")\n        })\n      })\n    }), _jsx(HeaderAccounts, {}), _jsxs(ScrollView, {\n      children: [_jsx(TouchLineItem, {\n        onPress: function onPress() {\n          return navigation.navigate('ProfileWatchlist');\n        },\n        text: \"Watchlist\"\n      }), _jsx(TouchLineItem, {\n        onPress: function onPress() {\n          return navigation.navigate('ProfileAppSettings');\n        },\n        text: \"App Settings\"\n      }), _jsx(TouchLineItem, {\n        onPress: function onPress() {\n          return null;\n        },\n        text: \"Account\"\n      }), _jsx(TouchLineItem, {\n        onPress: function onPress() {\n          return null;\n        },\n        text: \"Legal\"\n      }), _jsx(TouchLineItem, {\n        onPress: function onPress() {\n          return null;\n        },\n        text: \"Help\"\n      }), _jsx(TouchLineItem, {\n        onPress: function onPress() {\n          return alertSignOut();\n        },\n        text: \"Log Out\"\n      }), _jsx(Text, {\n        style: styles.versionText,\n        children: \"Version: \" + Constants.manifest.version\n      })]\n    })]\n  });\n};\n\nProfile.propTypes = {\n  navigation: PropTypes.object.isRequired\n};\nvar styles = {\n  versionText: {\n    color: colors.inactiveGrey,\n    fontFamily: fonts.regular,\n    fontSize: 18,\n    marginLeft: 16,\n    paddingVertical: 16\n  },\n  image: {\n    zIndex: 9,\n    position: 'relative'\n  },\n  buttons: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 12,\n    borderRadius: 4,\n    marginRight: 10,\n    width: 53,\n    height: 45,\n    elevation: 3,\n    marginTop: 12,\n    position: 'absolute',\n    top: '2%',\n    zIndex: '6',\n    backgroundColor: 'black'\n  }\n};\nexport default Profile;","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/src/screens/Profile.js"],"names":["React","PropTypes","Constants","colors","fonts","gStyle","HeaderAccounts","TouchLineItem","SvgBackground","alertSignOut","Alert","alert","text","cancelable","Profile","navigation","container","posAbsolute","openDrawer","styles","buttons","image","require","navigate","versionText","manifest","version","propTypes","object","isRequired","color","inactiveGrey","fontFamily","regular","fontSize","marginLeft","paddingVertical","zIndex","position","alignItems","justifyContent","paddingHorizontal","borderRadius","marginRight","width","height","elevation","marginTop","top","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, ScrollView, StyleSheet, Text, View,TouchableOpacity,Image } from 'react-native';\nimport Constants from 'expo-constants';\nimport { colors, fonts, gStyle } from '../constants';\n\n// components\nimport HeaderAccounts from '../components/HeaderAccounts';\nimport TouchLineItem from '../components/TouchLineItem';\n\n// icons\nimport SvgBackground from '../components/icons/Svg.Background';\n\nconst alertSignOut = () => {\n  Alert.alert(\n    'Sign Out',\n    'Are you sure that you want to sign out?',\n    [{ text: 'No' }, { text: 'Yes' }],\n    { cancelable: false }\n  );\n};\n\nconst Profile = ({ navigation }) => (\n  <View style={gStyle.container}>\n    <View style={gStyle.posAbsolute}>\n      {/* <SvgBackground /> */}\n    </View>\n    <TouchableOpacity onPress={() => navigation.openDrawer()}>\n        <div style={styles.buttons} >\n          <Image style={styles.image} source={require('../assets/menu.png')} />\n        </div>\n\n      </TouchableOpacity>\n    <HeaderAccounts />\n\n    <ScrollView>\n      <TouchLineItem\n        onPress={() => navigation.navigate('ProfileWatchlist')}\n        text=\"Watchlist\"\n      />\n      <TouchLineItem\n        onPress={() => navigation.navigate('ProfileAppSettings')}\n        text=\"App Settings\"\n      />\n      <TouchLineItem onPress={() => null} text=\"Account\" />\n      <TouchLineItem onPress={() => null} text=\"Legal\" />\n      <TouchLineItem onPress={() => null} text=\"Help\" />\n      <TouchLineItem onPress={() => alertSignOut()} text=\"Log Out\" />\n\n      <Text style={styles.versionText}>\n        {`Version: ${Constants.manifest.version}`}\n      </Text>\n    </ScrollView>\n  </View>\n);\n\nProfile.propTypes = {\n  // required\n  navigation: PropTypes.object.isRequired\n};\n\nconst styles = {\n  versionText: {\n    color: colors.inactiveGrey,\n    fontFamily: fonts.regular,\n    fontSize: 18,\n    marginLeft: 16,\n    paddingVertical: 16\n  },\n  image: {\n    zIndex: 9,\n    position: 'relative'\n  },\n  buttons: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 12,\n    borderRadius: 4,\n    marginRight: 10,\n    width: 53,\n    height: 45,\n    elevation: 3,\n    marginTop: 12,\n    position:'absolute',\n    top: '2%',\n    zIndex:'6',\n    backgroundColor: 'black',\n  },\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}