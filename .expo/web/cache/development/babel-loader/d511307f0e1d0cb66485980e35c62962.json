{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nimport Toast from 'react-native-toast-message';\nimport AsyncStorage from '@react-native-community/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar axios = require('axios');\n\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError, passwordError, showToast, url;\n    return _regeneratorRuntime.async(function onLoginPressed$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            showToast = function showToast(type, message) {\n              Toast.show({\n                type: type,\n                text1: message\n              });\n            };\n\n            if (!(emailError || passwordError)) {\n              _context2.next = 7;\n              break;\n            }\n\n            setEmail(_objectSpread({}, email, {\n              error: emailError\n            }));\n            setPassword(_objectSpread({}, password, {\n              error: passwordError\n            }));\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            console.log(email, password);\n\n            if (!(email.value != '' || password.value != '')) {\n              _context2.next = 12;\n              break;\n            }\n\n            url = \"https://www.flicknplay.com/api/v1/auth/login\";\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(axios.post(url, formData, {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            }).then(function _callee(response) {\n              var _response$data, _response$data2, _response$data3, _response$data3$user, _response$data4;\n\n              var user;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      console.log(response == null ? void 0 : (_response$data = response.data) == null ? void 0 : _response$data.user);\n                      AsyncStorage.setItem('userDetails', JSON.stringify(response == null ? void 0 : (_response$data2 = response.data) == null ? void 0 : _response$data2.user));\n                      AsyncStorage.setItem('user_token', JSON.stringify(response == null ? void 0 : (_response$data3 = response.data) == null ? void 0 : (_response$data3$user = _response$data3.user) == null ? void 0 : _response$data3$user.access_token));\n\n                      if (!(response == null ? void 0 : (_response$data4 = response.data) == null ? void 0 : _response$data4.user)) {\n                        _context.next = 10;\n                        break;\n                      }\n\n                      showToast('success', 'Login successfully');\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem('userDetails'));\n\n                    case 7:\n                      user = _context.sent;\n                      console.log(user);\n                      navigation.navigate('TabNavigator');\n\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            }).catch(function (error) {\n              console.log(error.response);\n              showToast('error', error.response.data.errors.email[0]);\n            }));\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.replace('StartScreen');\n      }\n    }), _jsx(Logo, {}), _jsxs(View, {\n      style: {\n        backgroundColor: '#1d1d1d',\n        width: '100%',\n        padding: '26px',\n        marginBottom: 13\n      },\n      children: [_jsx(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Welcome back.\"\n      }), _jsx(TextInput, {\n        label: \"Email\",\n        returnKeyType: \"next\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!email.error,\n        errorText: email.error,\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\"\n      }), _jsx(TextInput, {\n        label: \"Password\",\n        returnKeyType: \"done\",\n        value: password.value,\n        onChangeText: function onChangeText(text) {\n          return setPassword({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!password.error,\n        errorText: password.error,\n        secureTextEntry: true\n      }), _jsx(View, {\n        style: styles.forgotPassword,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('ResetPasswordScreen');\n          },\n          children: _jsx(Text, {\n            style: styles.forgot,\n            children: \"Forgot your password?\"\n          })\n        })\n      }), _jsx(Button, {\n        mode: \"contained\",\n        style: styles.buttons,\n        onPress: onLoginPressed,\n        children: \"Login\"\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Don\\u2019t have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('MovieDetail1');\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Sign up\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  buttons: {\n    backgroundColor: '#f65f54'\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["E:/chrisholloway/flicknplayreacttv/src/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","Toast","AsyncStorage","axios","require","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","showToast","type","message","show","text1","console","log","url","post","formData","headers","then","response","data","user","setItem","JSON","stringify","access_token","getItem","navigate","catch","errors","replace","backgroundColor","width","padding","marginBottom","color","text","styles","forgotPassword","forgot","buttons","row","link","StyleSheet","create","alignItems","flexDirection","marginTop","fontSize","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport Background from '../components/Background'\r\nimport Logo from '../components/Logo'\r\nimport Header from '../components/Header'\r\nimport Button from '../components/Button'\r\nimport TextInput from '../components/TextInput'\r\nimport BackButton from '../components/BackButton'\r\nimport { theme } from '../core/theme'\r\nimport { emailValidator } from '../helpers/emailValidator'\r\nimport { passwordValidator } from '../helpers/passwordValidator'\r\nimport Toast from 'react-native-toast-message';\r\n// import TabNavigator from '../navigation/TabNavigator'\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nconst axios = require('axios');\r\nexport default function LoginScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: '', error: '' })\r\n  const [password, setPassword] = useState({ value: '', error: '' })\r\n\r\n  const onLoginPressed =async () => {\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    const showToast = (type,message) => {\r\n      Toast.show({\r\n        type: type,\r\n        text1: message\r\n      });\r\n    }\r\n    if (emailError || passwordError) {\r\n\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n       return\r\n    }\r\n    console.log(email,password)\r\n    if(email.value!='' || password.value!=''){\r\n      // let body={\r\n      //   email:email.value,\r\n      //   password:password.value,\r\n      //   token_name:\"flicknplaysapi\",\r\n       \r\n      // }\r\n      const url = `https://www.flicknplay.com/api/v1/auth/login`\r\n     await axios.post(url,formData , { headers: {\"Content-Type\" : `application/x-www-form-urlencoded`} }).then(async(response)=>{\r\n     \r\n        console.log(response?.data?.user)\r\n        AsyncStorage.setItem('userDetails',JSON.stringify(response?.data?.user))\r\n        AsyncStorage.setItem('user_token',JSON.stringify(response?.data?.user?.access_token))\r\n        if(response?.data?.user){\r\n          showToast('success','Login successfully')\r\n          const user=await AsyncStorage.getItem('userDetails')\r\n          console.log(user)\r\n          navigation.navigate('TabNavigator')\r\n        }\r\n       }).catch(function(error){\r\n         console.log(error.response)\r\n         showToast('error',error.response.data.errors.email[0])\r\n       })\r\n\r\n    }\r\n  \r\n    // navigation.reset({\r\n    //   index: 0,\r\n    //   routes: [{ name: 'RegisterScreen',params:{TabNavigator} }],\r\n    // })\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton  goBack={() => navigation.replace('StartScreen')} />\r\n      <Logo />\r\n      <View style={{backgroundColor:'#1d1d1d',width: '100%',padding: '26px',marginBottom: 13}}>\r\n      <h1 style={{color:'white'}}>Welcome back.</h1> \r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\r\n        >\r\n          <Text style={styles.forgot}>Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" style={styles.buttons} onPress={onLoginPressed}>\r\n        Login\r\n      </Button>\r\n      </View>\r\n      <View style={styles.row}>\r\n        <Text style={{color:'white'}}>Don’t have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.replace('MovieDetail1')}>\r\n          <Text style={styles.link}>Sign up</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  buttons: {\r\n     backgroundColor:'#f65f54',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}