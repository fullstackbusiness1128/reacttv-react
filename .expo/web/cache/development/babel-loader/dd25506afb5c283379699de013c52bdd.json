{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, fonts } from \"../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TouchLineItemElement = function TouchLineItemElement(_ref) {\n  var element = _ref.element,\n      onPress = _ref.onPress,\n      text = _ref.text;\n  return _jsxs(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onPress,\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: text\n    }), _jsx(View, {\n      style: styles.element,\n      children: React.cloneElement(element)\n    })]\n  });\n};\n\nTouchLineItemElement.propTypes = {\n  element: PropTypes.element.isRequired,\n  onPress: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 8,\n    paddingVertical: 16\n  },\n  text: {\n    color: colors.heading,\n    fontFamily: fonts.regular,\n    fontSize: 16\n  },\n  element: {\n    justifyContent: 'center',\n    marginRight: 4\n  }\n});\nexport default TouchLineItemElement;","map":{"version":3,"names":["React","PropTypes","colors","fonts","TouchLineItemElement","element","onPress","text","styles","container","cloneElement","propTypes","isRequired","func","string","StyleSheet","create","flexDirection","justifyContent","paddingHorizontal","paddingVertical","color","heading","fontFamily","regular","fontSize","marginRight"],"sources":["E:/works/android/20220927/flicknplayreacttv-react/src/components/TouchLineItemElement.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { colors, fonts } from '../constants';\n\nconst TouchLineItemElement = ({ element, onPress, text }) => (\n  <TouchableOpacity\n    activeOpacity={0.7}\n    onPress={onPress}\n    style={styles.container}\n  >\n    <Text style={styles.text}>{text}</Text>\n    <View style={styles.element}>{React.cloneElement(element)}</View>\n  </TouchableOpacity>\n);\n\nTouchLineItemElement.propTypes = {\n  // required\n  element: PropTypes.element.isRequired,\n  onPress: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 8,\n    paddingVertical: 16\n  },\n  text: {\n    color: colors.heading,\n    fontFamily: fonts.regular,\n    fontSize: 16\n  },\n  element: {\n    justifyContent: 'center',\n    marginRight: 4\n  }\n});\n\nexport default TouchLineItemElement;\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;AAEA,SAASC,MAAT,EAAiBC,KAAjB;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;EAAA,IAAGC,OAAH,QAAGA,OAAH;EAAA,IAAYC,OAAZ,QAAYA,OAAZ;EAAA,IAAqBC,IAArB,QAAqBA,IAArB;EAAA,OAC3B,MAAC,gBAAD;IACE,aAAa,EAAE,GADjB;IAEE,OAAO,EAAED,OAFX;IAGE,KAAK,EAAEE,MAAM,CAACC,SAHhB;IAAA,WAKE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACD,IAApB;MAAA,UAA2BA;IAA3B,EALF,EAME,KAAC,IAAD;MAAM,KAAK,EAAEC,MAAM,CAACH,OAApB;MAAA,UAA8BL,KAAK,CAACU,YAAN,CAAmBL,OAAnB;IAA9B,EANF;EAAA,EAD2B;AAAA,CAA7B;;AAWAD,oBAAoB,CAACO,SAArB,GAAiC;EAE/BN,OAAO,EAAEJ,SAAS,CAACI,OAAV,CAAkBO,UAFI;EAG/BN,OAAO,EAAEL,SAAS,CAACY,IAAV,CAAeD,UAHO;EAI/BL,IAAI,EAAEN,SAAS,CAACa,MAAV,CAAiBF;AAJQ,CAAjC;AAOA,IAAMJ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,aAAa,EAAE,KADN;IAETC,cAAc,EAAE,eAFP;IAGTC,iBAAiB,EAAE,CAHV;IAITC,eAAe,EAAE;EAJR,CADoB;EAO/Bb,IAAI,EAAE;IACJc,KAAK,EAAEnB,MAAM,CAACoB,OADV;IAEJC,UAAU,EAAEpB,KAAK,CAACqB,OAFd;IAGJC,QAAQ,EAAE;EAHN,CAPyB;EAY/BpB,OAAO,EAAE;IACPa,cAAc,EAAE,QADT;IAEPQ,WAAW,EAAE;EAFN;AAZsB,CAAlB,CAAf;AAkBA,eAAetB,oBAAf"},"metadata":{},"sourceType":"module"}