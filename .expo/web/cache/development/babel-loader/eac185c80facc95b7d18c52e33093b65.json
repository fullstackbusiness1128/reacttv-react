{"ast":null,"code":"import * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, device, images } from \"../constants\";\nimport Carousel from 'react-native-snap-carousel';\nimport SvgCategoryBackground from \"./icons/Svg.CategoryBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar categoriesData = [{\n  id: 1,\n  image: 'logoDisney'\n}, {\n  id: 2,\n  image: 'logoPixar'\n}, {\n  id: 3,\n  image: 'logoMarvel'\n}, {\n  id: 4,\n  image: 'logoStarWars'\n}, {\n  id: 5,\n  image: 'logoNatGeo'\n}];\n\nvar Categories = function Categories() {\n  var length = categoriesData.length;\n  var bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return _jsx(View, {\n    style: styles.container,\n    children: categoriesData.map(function (item) {\n      return _jsx(Carousel, {\n        autoplay: true,\n        autoplayInterval: 5000,\n        data: categoriesData,\n        loop: true,\n        renderItem: function renderItem(_ref) {\n          var image = _ref.item.image;\n          return _jsxs(TouchableOpacity, {\n            activeOpacity: 0.7,\n            onPress: function onPress() {\n              return null;\n            },\n            style: [styles.containerBlock, {\n              height: bgWidth\n            }],\n            children: [_jsx(View, {\n              style: styles.containerBlockBackground,\n              children: _jsx(SvgCategoryBackground, {\n                height: bgWidth - 2,\n                width: bgWidth\n              })\n            }), _jsx(Image, {\n              source: images[item.image],\n              style: styles.image\n            })]\n          }, item.id);\n        },\n        sliderWidth: device.width,\n        itemWidth: itemWidth\n      });\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingTop: 24\n  },\n  containerBlock: {\n    alignItems: 'center',\n    borderColor: colors.categoryBorder,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  containerBlockBackground: {\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  image: {\n    height: 36,\n    width: 64\n  }\n});\nexport default Categories;","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/src/components/Categories.js"],"names":["React","colors","device","images","Carousel","SvgCategoryBackground","categoriesData","id","image","Categories","length","bgWidth","Math","ceil","width","styles","container","map","item","containerBlock","height","containerBlockBackground","itemWidth","StyleSheet","create","alignItems","flexDirection","justifyContent","paddingBottom","paddingLeft","paddingTop","borderColor","categoryBorder","borderRadius","borderWidth","flex","marginRight","overflow","position"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,OAAOC,qBAAP;;;AAGA,IAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADqB,EAErB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFqB,EAGrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHqB,EAIrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJqB,EAKrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CALqB,CAAvB;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,MACfC,MADe,GACJJ,cADI,CACfI,MADe;AAEvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACX,MAAM,CAACY,KAAP,GAAe,EAAf,GAAoBJ,MAAM,GAAG,EAA9B,IAAoCA,MAA9C,CAAhB;AACA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA,cACGV,cAAc,CAACW,GAAf,CAAmB,UAACC,IAAD,EAAU;AAC5B,aACE,KAAC,QAAD;AACA,QAAA,QAAQ,MADR;AAEA,QAAA,gBAAgB,EAAE,IAFlB;AAGA,QAAA,IAAI,EAAEZ,cAHN;AAIA,QAAA,IAAI,MAJJ;AAKA,QAAA,UAAU,EAAE;AAAA,cAAWE,KAAX,QAAGU,IAAH,CAAWV,KAAX;AAAA,iBACV,MAAC,gBAAD;AACA,YAAA,aAAa,EAAE,GADf;AAGA,YAAA,OAAO,EAAE;AAAA,qBAAM,IAAN;AAAA,aAHT;AAIA,YAAA,KAAK,EAAE,CAACO,MAAM,CAACI,cAAR,EAAwB;AAAGC,cAAAA,MAAM,EAAET;AAAX,aAAxB,CAJP;AAAA,uBAMA,KAAC,IAAD;AAAM,cAAA,KAAK,EAAEI,MAAM,CAACM,wBAApB;AAAA,wBACE,KAAC,qBAAD;AAAuB,gBAAA,MAAM,EAAEV,OAAO,GAAG,CAAzC;AAA4C,gBAAA,KAAK,EAAEA;AAAnD;AADF,cANA,EASA,KAAC,KAAD;AAAO,cAAA,MAAM,EAAER,MAAM,CAACe,IAAI,CAACV,KAAN,CAArB;AAAmC,cAAA,KAAK,EAAEO,MAAM,CAACP;AAAjD,cATA;AAAA,aAEKU,IAAI,CAACX,EAFV,CADU;AAAA,SALZ;AAmBA,QAAA,WAAW,EAAEL,MAAM,CAACY,KAnBpB;AAoBA,QAAA,SAAS,EAAEQ;AApBX,QADF;AAwBD,KAzBA;AADH,IADF;AA8BD,CAjCD;;AAmCA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,UAAU,EAAE,YADH;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,aAAa,EAAE,CAJN;AAKTC,IAAAA,WAAW,EAAE,EALJ;AAMTC,IAAAA,UAAU,EAAE;AANH,GADoB;AAS/BX,EAAAA,cAAc,EAAE;AACdM,IAAAA,UAAU,EAAE,QADE;AAEdM,IAAAA,WAAW,EAAE9B,MAAM,CAAC+B,cAFN;AAGdC,IAAAA,YAAY,EAAE,CAHA;AAIdC,IAAAA,WAAW,EAAE,CAJC;AAKdC,IAAAA,IAAI,EAAE,CALQ;AAMdR,IAAAA,cAAc,EAAE,QANF;AAOdS,IAAAA,WAAW,EAAE;AAPC,GATe;AAkB/Bf,EAAAA,wBAAwB,EAAE;AACxBY,IAAAA,YAAY,EAAE,CADU;AAExBI,IAAAA,QAAQ,EAAE,QAFc;AAGxBC,IAAAA,QAAQ,EAAE;AAHc,GAlBK;AAuB/B9B,EAAAA,KAAK,EAAE;AACLY,IAAAA,MAAM,EAAE,EADH;AAELN,IAAAA,KAAK,EAAE;AAFF;AAvBwB,CAAlB,CAAf;AA6BA,eAAeL,UAAf","sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { colors, device, images } from '../constants';\nimport Carousel from 'react-native-snap-carousel';\n\n// icons\nimport SvgCategoryBackground from './icons/Svg.CategoryBackground';\n\n// data\nconst categoriesData = [\n  { id: 1, image: 'logoDisney' },\n  { id: 2, image: 'logoPixar' },\n  { id: 3, image: 'logoMarvel' },\n  { id: 4, image: 'logoStarWars' },\n  { id: 5, image: 'logoNatGeo' }\n];\n\nconst Categories = () => {\n  const { length } = categoriesData;\n  const bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return (\n    <View style={styles.container}>\n      {categoriesData.map((item) => {\n        return (\n          <Carousel\n          autoplay\n          autoplayInterval={5000}\n          data={categoriesData}\n          loop\n          renderItem={({ item: { image } }) => (\n            <TouchableOpacity\n            activeOpacity={0.7}\n            key={item.id}\n            onPress={() => null}\n            style={[styles.containerBlock, {  height: bgWidth }]}\n            >\n            <View style={styles.containerBlockBackground}>\n              <SvgCategoryBackground height={bgWidth - 2} width={bgWidth} />\n            </View>\n            <Image source={images[item.image]} style={styles.image} />\n            </TouchableOpacity> \n            // console.log(\"image\",image,\"hello\",images)\n          )}\n          sliderWidth={device.width}\n          itemWidth={itemWidth}\n        />\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingTop: 24\n  },\n  containerBlock: {\n    alignItems: 'center',\n    borderColor: colors.categoryBorder,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  containerBlockBackground: {\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  image: {\n    height: 36,\n    width: 64\n  }\n});\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}