{"ast":null,"code":"import * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { colors, device, images } from \"../constants\";\nimport Carousel from 'react-native-snap-carousel';\nimport SvgCategoryBackground from \"./icons/Svg.CategoryBackground\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar categoriesData = [{\n  id: 1,\n  image: 'logoDisney'\n}, {\n  id: 2,\n  image: 'logoPixar'\n}, {\n  id: 3,\n  image: 'logoMarvel'\n}, {\n  id: 4,\n  image: 'logoStarWars'\n}, {\n  id: 5,\n  image: 'logoNatGeo'\n}];\n\nvar Categories = function Categories() {\n  var isCarousel = React.useRef(null);\n  var length = categoriesData.length;\n  var bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  return _jsx(View, {\n    children: _jsx(Carousel, {\n      layout: \"tinder\",\n      layoutCardOffset: 9,\n      ref: isCarousel,\n      data: data,\n      renderItem: _jsx(View, {\n        style: styles.container,\n        children: categoriesData.map(function (item) {})\n      }),\n      sliderWidth: SLIDER_WIDTH,\n      itemWidth: ITEM_WIDTH,\n      inactiveSlideShift: 0,\n      useScrollView: true\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingTop: 24\n  },\n  containerBlock: {\n    alignItems: 'center',\n    borderColor: colors.categoryBorder,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  containerBlockBackground: {\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  image: {\n    height: 100,\n    width: 200\n  }\n});\nexport default Categories;","map":{"version":3,"sources":["/home/codenomad/Documents/Expo_flicknPlay/src/components/Categories.js"],"names":["React","colors","device","images","Carousel","SvgCategoryBackground","categoriesData","id","image","Categories","isCarousel","useRef","length","bgWidth","Math","ceil","width","data","styles","container","map","item","SLIDER_WIDTH","ITEM_WIDTH","StyleSheet","create","alignItems","justifyContent","paddingBottom","paddingLeft","paddingTop","containerBlock","borderColor","categoryBorder","borderRadius","borderWidth","flex","marginRight","containerBlockBackground","overflow","position","height"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,OAAOC,qBAAP;;AAGA,IAAMC,cAAc,GAAG,CACrB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CADqB,EAErB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAFqB,EAGrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAHqB,EAIrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CAJqB,EAKrB;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,KAAK,EAAE;AAAhB,CALqB,CAAvB;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,UAAU,GAAGV,KAAK,CAACW,MAAN,CAAa,IAAb,CAAnB;AADuB,MAEfC,MAFe,GAEJN,cAFI,CAEfM,MAFe;AAGvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACb,MAAM,CAACc,KAAP,GAAe,EAAf,GAAoBJ,MAAM,GAAG,EAA9B,IAAoCA,MAA9C,CAAhB;AAoCA,SACE,KAAC,IAAD;AAAA,cACA,KAAC,QAAD;AACE,MAAA,MAAM,EAAC,QADT;AAEE,MAAA,gBAAgB,EAAE,CAFpB;AAGE,MAAA,GAAG,EAAEF,UAHP;AAIE,MAAA,IAAI,EAAEO,IAJR;AAKE,MAAA,UAAU,EACR,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,kBACAb,cAAc,CAACc,GAAf,CAAmB,UAACC,IAAD,EAAU,CAC7B,CADA;AADA,QANJ;AAaE,MAAA,WAAW,EAAEC,YAbf;AAcE,MAAA,SAAS,EAAEC,UAdb;AAeE,MAAA,kBAAkB,EAAE,CAftB;AAgBE,MAAA,aAAa,EAAE;AAhBjB;AADA,IADF;AAsBD,CA7DD;;AA+DA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,UAAU,EAAE,YADH;AAGTC,IAAAA,cAAc,EAAE,eAHP;AAITC,IAAAA,aAAa,EAAE,CAJN;AAKTC,IAAAA,WAAW,EAAE,EALJ;AAMTC,IAAAA,UAAU,EAAE;AANH,GADoB;AAS/BC,EAAAA,cAAc,EAAE;AACdL,IAAAA,UAAU,EAAE,QADE;AAEdM,IAAAA,WAAW,EAAE/B,MAAM,CAACgC,cAFN;AAGdC,IAAAA,YAAY,EAAE,CAHA;AAIdC,IAAAA,WAAW,EAAE,CAJC;AAKdC,IAAAA,IAAI,EAAE,CALQ;AAMdT,IAAAA,cAAc,EAAE,QANF;AAOdU,IAAAA,WAAW,EAAE;AAPC,GATe;AAkB/BC,EAAAA,wBAAwB,EAAE;AACxBJ,IAAAA,YAAY,EAAE,CADU;AAExBK,IAAAA,QAAQ,EAAE,QAFc;AAGxBC,IAAAA,QAAQ,EAAE;AAHc,GAlBK;AAuB/BhC,EAAAA,KAAK,EAAE;AACLiC,IAAAA,MAAM,EAAE,GADH;AAELzB,IAAAA,KAAK,EAAE;AAFF;AAvBwB,CAAlB,CAAf;AA6BA,eAAeP,UAAf","sourcesContent":["import * as React from 'react';\nimport { Image, StyleSheet, TouchableOpacity, View } from 'react-native';\nimport { colors, device, images } from '../constants';\nimport Carousel from 'react-native-snap-carousel';\n\n// icons\nimport SvgCategoryBackground from './icons/Svg.CategoryBackground';\n\n// data\nconst categoriesData = [\n  { id: 1, image: 'logoDisney' },\n  { id: 2, image: 'logoPixar' },\n  { id: 3, image: 'logoMarvel' },\n  { id: 4, image: 'logoStarWars' },\n  { id: 5, image: 'logoNatGeo' }\n];\n\nconst Categories = () => {\n  const isCarousel = React.useRef(null)\n  const { length } = categoriesData;\n  const bgWidth = Math.ceil((device.width - 16 - length * 18) / length);\n  // return (\n    // <View style={styles.container}>\n    //   {categoriesData.map((item) => {\n        // return (\n        //   <Carousel\n        //   ref={(c) => {\n        //     console.log\n        //     // this.carousel = c;\n        //   }}\n        //   autoplay\n        //   autoplayInterval={5000}\n        //   data={categoriesData}\n        //   loop\n        //   style={[styles.containerBlock, {  height: bgWidth }]}\n        //   // renderItem={({ item: { image } }) => (\n            \n        //   // //  <View>\n        //   // //   <View style={styles.containerBlockBackground}>\n        //   // //     <SvgCategoryBackground height={bgWidth - 2} width={bgWidth} />\n        //   // //   </View>\n        //   // //   <Image source={images[item.image]} style={styles.image} />\n        //   // //   </View>\n        //   //   // console.log(\"image\",image,\"hello\",images)\n        //   // )}\n        //   renderItem={({ item: { image } }) => (\n        //     // console.log(\"image\",image,\"hello\",images)\n        //     <Image source={images[image]} width={itemWidth} />\n        //   )}\n        //   sliderWidth={device.width}\n        //   itemWidth={bgWidth}\n        // />\n        // );\n  //     })}\n  //   </View>\n  // );\n  return (\n    <View>\n    <Carousel\n      layout=\"tinder\"\n      layoutCardOffset={9}\n      ref={isCarousel}\n      data={data}\n      renderItem={\n        <View style={styles.container}>\n       {categoriesData.map((item) => {\n       }\n       )\n      }\n      </View>\n      }\n      sliderWidth={SLIDER_WIDTH}\n      itemWidth={ITEM_WIDTH}\n      inactiveSlideShift={0}\n      useScrollView={true}\n    />\n  </View>\n  )\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingLeft: 16,\n    paddingTop: 24\n  },\n  containerBlock: {\n    alignItems: 'center',\n    borderColor: colors.categoryBorder,\n    borderRadius: 4,\n    borderWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 16\n  },\n  containerBlockBackground: {\n    borderRadius: 2,\n    overflow: 'hidden',\n    position: 'absolute'\n  },\n  image: {\n    height: 100,\n    width: 200\n  }\n});\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}