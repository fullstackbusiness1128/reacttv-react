{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AnimatedCircularProgress from \"../gradientProgress/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar backgroundColor = 'transparent';\nvar styles = StyleSheet.create({\n  backward: {\n    marginRight: 35,\n    height: 50,\n    width: 50\n  },\n  playButton: {\n    height: 100,\n    width: 100,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  forward: {\n    marginLeft: 35,\n    height: 50,\n    width: 50\n  },\n  playContainer: {\n    flex: 1,\n    backgroundColor: backgroundColor,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  AndroidView: {\n    flex: 1,\n    backgroundColor: backgroundColor,\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  }\n});\n\nvar PlayButton = function PlayButton(props) {\n  var progress = props.progress,\n      duration = props.duration;\n  return _jsxs(View, {\n    style: Platform.OS === \"ios\" ? styles.playContainer : styles.AndroidView,\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.onPressBackward();\n      },\n      style: styles.backward,\n      children: _jsx(Image, {\n        style: [styles.backward, {\n          marginRight: 0\n        }],\n        source: require(\"./images/backward.png\"),\n        color: props.theme,\n        resizeMode: \"center\"\n      })\n    }), _jsx(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: 120,\n        width: 120\n      },\n      children: _jsx(TouchableOpacity, {\n        style: {\n          justifyContent: 'center',\n          alignItems: 'center',\n          position: 'absolute'\n        },\n        onPress: function onPress() {\n          return props.onPress();\n        },\n        children: _jsx(Image, {\n          style: {\n            height: 60,\n            width: 60\n          },\n          source: props.paused ? require(\"./images/Play.png\") : require(\"./images/pause.png\"),\n          color: props.theme,\n          resizeMode: \"center\"\n        })\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.onPressForward();\n      },\n      style: styles.forward,\n      children: _jsx(Image, {\n        style: [styles.forward, {\n          marginLeft: 0\n        }],\n        source: require(\"./images/forward.png\"),\n        color: props.theme,\n        resizeMode: \"center\"\n      })\n    })]\n  });\n};\n\nPlayButton.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  paused: PropTypes.bool.isRequired,\n  theme: PropTypes.string.isRequired,\n  onPressBackward: PropTypes.func.isRequired,\n  onPressForward: PropTypes.func.isRequired,\n  progress: PropTypes.number.isRequired,\n  duration: PropTypes.number.isRequired\n};\nexport { PlayButton };","map":{"version":3,"sources":["/home/codenomad/Documents/flicknplayreacttv/node_modules/react-native-video-players/src/VideoPlayerComponents/components/PlayButton.js"],"names":["React","PropTypes","AnimatedCircularProgress","backgroundColor","styles","StyleSheet","create","backward","marginRight","height","width","playButton","justifyContent","alignItems","forward","marginLeft","playContainer","flex","flexDirection","AndroidView","PlayButton","props","progress","duration","Platform","OS","onPressBackward","require","theme","position","onPress","paused","onPressForward","propTypes","func","isRequired","bool","string","number"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { View, StyleSheet, TouchableOpacity, Platform, Image } from 'react-native'\r\nimport AnimatedCircularProgress from '../gradientProgress/index';\r\n\r\nconst backgroundColor = 'transparent'\r\n\r\nconst styles = StyleSheet.create({\r\n  backward: {\r\n    marginRight: 35,\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  playButton: {\r\n    height: 100,\r\n    width: 100,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  forward: {\r\n    marginLeft: 35,\r\n    height: 50,\r\n    width: 50\r\n  },\r\n  playContainer: {\r\n    flex: 1,\r\n    backgroundColor,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  AndroidView: {\r\n    flex: 1,\r\n    backgroundColor,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center'\r\n  }\r\n})\r\n\r\nconst PlayButton = (props) => {\r\n  const { progress, duration } = props\r\n  return (\r\n    <View style={(Platform.OS === \"ios\") ? styles.playContainer : styles.AndroidView}>\r\n\r\n      <TouchableOpacity onPress={() => props.onPressBackward()} style={styles.backward}>\r\n        <Image\r\n          style={[styles.backward, { marginRight: 0 }]}\r\n          source={require('./images/backward.png')}\r\n          color={props.theme}\r\n          resizeMode='center'\r\n        />\r\n      </TouchableOpacity>\r\n\r\n      <View style={{ justifyContent: 'center', alignItems: 'center', height: 120, width: 120 }}>\r\n        {/* {progress == 0 ? null : <AnimatedCircularProgress\r\n          size={120}\r\n          width={10}\r\n          fill={(progress * 100) / duration}\r\n          lineCap={'round'}\r\n          prefill={(progress * 100) / duration}\r\n          backgroundColor=\"transparent\"\r\n          beginColor=\"#fad055\"\r\n          endColor=\"#f6661e\"\r\n          segments={16} />} */}\r\n        <TouchableOpacity style={{ justifyContent: 'center', alignItems: 'center', position: 'absolute' }} onPress={() => props.onPress()}>\r\n          <Image\r\n            style={{ height: 60, width: 60 }}\r\n            source={props.paused ? require('./images/Play.png') : require('./images/pause.png')}\r\n            color={props.theme}\r\n            resizeMode='center'\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={() => props.onPressForward()} style={styles.forward}>\r\n        <Image\r\n          style={[styles.forward, { marginLeft: 0 }]}\r\n          source={require('./images/forward.png')}\r\n          color={props.theme}\r\n          resizeMode='center'\r\n        />\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nPlayButton.propTypes = {\r\n  onPress: PropTypes.func.isRequired,\r\n  paused: PropTypes.bool.isRequired,\r\n  theme: PropTypes.string.isRequired,\r\n  onPressBackward: PropTypes.func.isRequired,\r\n  onPressForward: PropTypes.func.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  duration: PropTypes.number.isRequired\r\n}\r\n\r\nexport { PlayButton }\r\n"]},"metadata":{},"sourceType":"module"}