{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input } from 'react-native-paper';\nimport { theme } from \"../core/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TextInput(_ref) {\n  var errorText = _ref.errorText,\n      description = _ref.description,\n      props = _objectWithoutProperties(_ref, [\"errorText\", \"description\"]);\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Input, _objectSpread({\n      style: styles.input,\n      selectionColor: {\n        color: 'white'\n      },\n      underlineColor: \"transparent\",\n      mode: \"outlined\"\n    }, props)), description && !errorText ? _jsx(Text, {\n      style: styles.description,\n      children: description\n    }) : null, errorText ? _jsx(Text, {\n      style: styles.error,\n      children: errorText\n    }) : null]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12\n  },\n  input: {\n    backgroundColor: theme.colors.surface\n  },\n  description: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n    paddingTop: 8\n  },\n  error: {\n    fontSize: 13,\n    color: theme.colors.error,\n    paddingTop: 8\n  }\n});","map":{"version":3,"names":["React","TextInput","Input","theme","errorText","description","props","styles","container","input","color","error","StyleSheet","create","width","marginVertical","backgroundColor","colors","surface","fontSize","secondary","paddingTop"],"sources":["E:/works/android/20220927/flicknplayreacttv-main/flicknplayreacttv-main/src/components/TextInput.js"],"sourcesContent":["import React from 'react'\nimport { View, StyleSheet, Text } from 'react-native'\nimport { TextInput as Input } from 'react-native-paper'\nimport { theme } from '../core/theme'\n\nexport default function TextInput({ errorText, description, ...props }) {\n  return (\n    <View style={styles.container}>\n      <Input\n        style={styles.input}\n        selectionColor={{color:'white'}}\n        underlineColor=\"transparent\"\n        mode=\"outlined\"\n        {...props}\n      />\n      {description && !errorText ? (\n        <Text style={styles.description}>{description}</Text>\n      ) : null}\n      {errorText ? <Text style={styles.error}>{errorText}</Text> : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginVertical: 12,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n  },\n  description: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n    paddingTop: 8,\n  },\n  error: {\n    fontSize: 13,\n    color: theme.colors.error,\n    paddingTop: 8,\n  },\n})\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,oBAAnC;AACA,SAASC,KAAT;;;AAEA,eAAe,SAASF,SAAT,OAAyD;EAAA,IAApCG,SAAoC,QAApCA,SAAoC;EAAA,IAAzBC,WAAyB,QAAzBA,WAAyB;EAAA,IAATC,KAAS;;EACtE,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,KAAD;MACE,KAAK,EAAED,MAAM,CAACE,KADhB;MAEE,cAAc,EAAE;QAACC,KAAK,EAAC;MAAP,CAFlB;MAGE,cAAc,EAAC,aAHjB;MAIE,IAAI,EAAC;IAJP,GAKMJ,KALN,EADF,EAQGD,WAAW,IAAI,CAACD,SAAhB,GACC,KAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACF,WAApB;MAAA,UAAkCA;IAAlC,EADD,GAEG,IAVN,EAWGD,SAAS,GAAG,KAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACI,KAApB;MAAA,UAA4BP;IAA5B,EAAH,GAAmD,IAX/D;EAAA,EADF;AAeD;AAED,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,KAAK,EAAE,MADE;IAETC,cAAc,EAAE;EAFP,CADoB;EAK/BN,KAAK,EAAE;IACLO,eAAe,EAAEb,KAAK,CAACc,MAAN,CAAaC;EADzB,CALwB;EAQ/Bb,WAAW,EAAE;IACXc,QAAQ,EAAE,EADC;IAEXT,KAAK,EAAEP,KAAK,CAACc,MAAN,CAAaG,SAFT;IAGXC,UAAU,EAAE;EAHD,CARkB;EAa/BV,KAAK,EAAE;IACLQ,QAAQ,EAAE,EADL;IAELT,KAAK,EAAEP,KAAK,CAACc,MAAN,CAAaN,KAFf;IAGLU,UAAU,EAAE;EAHP;AAbwB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}